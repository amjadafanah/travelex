{
    "swagger": "2.0",
    "info": {
        "title": "Travelex International Money Transfer APIs",
        "version": "",
        "description": "> Our International Money Transfer APIs enable applications to integrate with Travelex services to send money to beneficiaries abroad. Our APIs support a variety of business use cases including:\n\n![Business use cases](https://www.dropbox.com/s/9ycyv94m46qz8o1/Propositon%20use%20cases.png?raw=1)\n\nThis guide provides the background and details for potential Travelex partners to evaluate our APIs, and to get started writing code against live API endpoints in our sandbox environment.\n\n# API Overview\n\nOur International Money Transfer APIs make it easy for applications to implement [cross-border payments](/#introduction/glossary) and foreign exchange ([FX](/#introduction/glossary)) services, supported by a robust and secure framework for trusted transactions with global reach and competitive [FX rates](/#introduction/glossary).\n\nStraightforward concepts represent the parties and steps involved and enable applications to build a complete transaction from simple operations.\n\n> Note: This API is under active development. For more about which endpoints to use see [Sandbox Endpoints](/#introduction/cookbook). You can check API status and [subscribe to update notifications](https://status.api.travelex.io) from the developer website.\n\n## Concepts\n\nBasic concepts:\n\n| Resource | Description |\n|:-----------|:------------|\n| [`Customers`](/#reference/customers) | Individuals or companies who are sending the international money transfer |\n| [`Beneficiaries`](/#reference/beneficiaries) | Individuals or companies who are recieving the international money transfer |\n| [`Currencies`](/#reference/currencies) | Currency names and codes |\n| <a href=\"/#reference/payment-details\"><code>Payment&nbsp;Details</code></a> | Details of payment methods used by customers to pay for the IMT transaction, such as bank accounts and payment cards|\n| [`Transfers`](/#reference/transfers) | Encapsulates an IMT transaction and initiates execution |\n| [`Stores`](/#reference/stores) | Travelex bureaus where a beneficiary can collect a cash transfer |\n| [`Relationships`](/#reference/customers/relationships) | Linking between resources for example between a customer and their stored payment methods or between a customer and a beneficiary |\n\nFX concepts:\n\n| Resource | Description |\n|:---------|:------------|\n| [`Quotes`](/#reference/quotes) | Timebound currency exchange rate offers and options including fees, for example fees charged by a bank to deliver money |\n| [`Corridors`](/#reference/corridors)| Combinations of source and destination countries and currencies for which Travelex supports money transfers |\n\nNotifications:\n\n| Resource | Description |\n|:---------|:------------|\n| [`Hooks`](/#reference/hooks) | Applications can register for event notifications, for example to follow the progress of a transfer |\n\n## Security\n\nOur APIs are authenticated, which guarantees that API requests are genuine requests from your application. See [Authentication](/#reference/authentication) for details.\n\nOur support for encryption allows you to encrypt _any_ data or metadata using the `encryptedData` attribute before uploading in an API call. Attributes that are encrypted in API calls are redacted in API responses. See [API Patterns](/#introduction/api-patterns/sending-encrypteddata).\n\nOur services power the anti-fraud requirements your application must meet to operate in the highly regulated world of international payments. See [Background to IMT](/#introduction/get-started/background-to-imt) for more about how our compliance engine simplifies transaction compliance.\n\n## Technologies\n\nOur International Money Transfer APIs are REST APIs.\n\nREST APIs are based on open Web standards, which means they are well understood by developers and straightforward to access. They provide a flexible and simple interface to the underlying services for client applications, whether server, desktop, browser based or dedicated mobile apps.\n\nOur REST APIs conform to well known public standards including the [JSON:API specification](http://jsonapi.org/) to provide clean interfaces for your code and reduce complexity.\n\n# Get Started\n\nOur APIs are available in a sandbox environment which provides live endpoints that you can write and test code against.\n\nTo get started using the sandbox you need login credentials for your application:\n\n+ [Sign up](https://developer.travelex.io/request-access.html) for an API key on the Travelex Developer site\n\n+ We will send your API key by email\n\n![Sign up](https://www.dropbox.com/s/2v9lltwtellorj3/Get%20started%20Image.png?raw=1)\n\nOnce you have received your API key:\n\n+ Use your email address and API key as username-password to call the [Login](/#reference/authentication/login/login) API endpoint from your application code\n\n+ Login returns a [session token](/#reference/authentication/login)\n\n+ Use the session token to authenticate your subsequent API calls\n\nSee the Cookbook [Digital Partners recipe](/#introduction/cookbook/digital-partners) for working code examples.\n\nYou can use the sandbox for all your development and testing right up until your are ready to deploy a production version of your application.\n\nWhen running in the sandbox you can also use our [mock details](/#introduction/bank-account-mock-data) for foreign bank accounts to create testable payment details in your application workflow.\n\n> Note: Supported countries for international money transfers can be discovered from the [Corridors](/#reference/corridors) endpoint.\n\n## Background to IMT\n\nInternational money transfer ([IMT](/#introduction/glossary)) is more complex than local money transfers:\n\n+ Unfamiliar and more complex branch and account codes are required to identify a bank abroad, such as [IBAN](/#introduction/glossary) and [BIC/SWIFT](/#introduction/glossary).They are sometimes unformatted or long codes which are easy to make a mistake when entering and difficult to spot check for error.\n\n+ Compliance requirements are stringent, requiring different sets of information, documentation and checks based on sender and beneficiary profiles as well as characteristics of the transaction. Non-compliant transactions could be rejected or severely delayed partway through the delivery journey\n\n+ Delivery options impact on the final cost and arrival timeline of a transfer, as well as different levels of sender & beneficiary protections should an issue arise.\n\n+ Compared to local transfers, an IMT transaction has more potential points of failure. For example, senders are often unfamiliar with IBAN or BIC codes and makes a mistake easily, causing the transfer to be rejected. Compliance checking and procedures may be different in different jurisdictions. Failing to adhere to the requirements or provide the right proofs of identity/transaction will cause a transfer to be rejected or held by authorities.\n\nOur APIs and back end services help to simplify IMT and avoid failed transfers:\n\n+ Our APIs include automatic lookup of bank codes to catch errors and enable correction before a transfer is submitted. Our backend is linked with databases to auto-fill bank details, and as such fewer bank details are manually provided by the sender, reducing human errors and hassles in completing an IMT transaction.\n\n+ Automatic compression reduces payload size for faster responses\n\n+ Our compliance engine works out the compliance requirements for each transfer based on source and destination jurisdictions, allowing you to dynamically query for required details on a per-transfer basis\n\n+ Our APIs enable you to create and link resources incrementally to build up transactions and reuse resources including customer and beneficiary details, payment methods, documents, and transfer history so you only need to request from users details that are not already stored\n\n+ Previously made transfers can easily be reused to make new transfers\n\n+ We provide competitive FX rates and options to customise fee and margin models based upon delivery method and currency\n\n+ We support a full range of payment and delivery options and show the fees for each option in our FX quotes\n\n# Example Use Cases\n\nOur APIs support typical money transfer use cases based on simple workflow steps:\n\n![Simple use case](https://www.dropbox.com/s/2ohswgcs10u7391/use%20case%20flow.png?raw=1)\n\nBecause you build up a transfer step by step it's easy to support a wide range of customer use cases:\n\n+ Transfer by a new personal or company customer to a beneficiary abroad\n\n+ Transfer by an existing customer to a new personal or company beneficiary abroad\n\n+ Quote an exchange rate and transfer fees to a customer showing different fees for different delivery options and payment methods\n\n+ Customer can pay from a bank account or payment card; alternatively, the application can take payment from customers and then pay Travelex through daily invoicing\n\n+ Money delivered to a bank account abroad, or to one of our Travelex bureaus or partner locations for convenient and secure cash collection\n\nUsing our APIs you can offer competitive exchange rates and flexible payment and delivery options, and easily manage compliance for any jurisdiction to help avoid rejected or failed transfers.\n\nWhen you use our APIs, your application provides the immediate customer experience, and you own and manage the customer relationship. Your application connects to our APIs to access back-end services for FX and international payments, and manage the customer and beneficiary data required for compliance.\n\n![Customer view](https://www.dropbox.com/s/mo1apc7gevg6zx8/Integration%20Image.png?raw=1)\n\n# API Patterns\n\nOur API endpoints are designed to behave in a uniform way and return JSON data in a common standard format. The examples below show usage patterns that can be applied to any of the endpoints.\n\nSee the Cookbook for code examples you can copy and execute, for example the [Digital Partners recipe](/#introduction/cookbook/digital-partners) shows real code examples against our sandbox endpoints.\n\n## Create a New Resource\n\nTo create a new resource instance, `POST` to the name of the resource, for example:\n\n```http\nPOST /individual-customers\n```\n\nwith a request body that contains at least the minimum required data for this resource type, for example:\n\n```curl\n    \"data\" : {\n        \"type\": \"individual-customers\",\n        \"attributes\": {\n            \"countryCode\": \"UK\",\n            \"dateOfBirth\": \"1985-01-15\",\n            \"firstName\": \"John\",\n            \"lastName\": \"Smith\",\n            \"termsAndConditionsConsent\": true\n        }\n    }\n```\n\nThe response is a JSON body that contains the newly created object.\n\nYou must provide the required details.\n\nRequired details are listed in the reference documentation for each resource type and can be discovered dynamically from the [Required Details](/#reference/required-details) endpoint for details that are country specific or where formats vary from country to country.\n\nMany types of resources store additional details as [relationship links](/#introduction/api-patterns/relationships-between-resources). For example resources that include an `addresses` attribute store their addresses as links to address objects. Some resources, for example Quotes, store most of their details as links.\n\nTo create a relationship link, `POST` to the named `relationships` attribute, see [Relationships between resources](/#introduction/relationships-between-resources) for examples.\n\nNote that this is different from updating a resource's primary data by `PATCH`ing the resource instance, see [Update an Existing Resource](/#introduction/update-an-existing-resource).\n\n## List Resources\n\nTo list all the instances of a given resource, `GET` the name of the resource, for example:\n\n```http\nGET /stores\n```\n\nThe response is a JSON body that contains all found instances, if any, of the requested resource, possibly returned as multiple pages:\n\n```curl\n {\n      \"type\": \"transfer-stores\",\n      \"id\": \"cded0f35-4322-4527-bb7e-ca42bbc9015b\",\n      \"attributes\": {\n        \"storeName\": \"Whitehouse\",\n        \"countryCode\": \"US\",\n        \"address\": {\n          \"houseNumber\": \"1600\",\n          \"street1\": \"Pennsylvania Avenue\",\n          \"city\": \"Washington\",\n          \"state\": \"DC\",\n          \"postalCode\": \"20500\",\n          \"countryCode\": \"US\"\n        },\n        \"openingHours\": \"Mon - Sat: 09:00 - 20:00 Hrs\"\n      },\n      \"relationships\": {\n        \"limits\": {\n          \"links\": {\n            \"self\": \"http://localhost:8082/api/transfer-stores/cded0f35-4322-4527-bb7e-ca42bbc9015b/relationships/limits\",\n            \"related\": \"http://localhost:8082/api/transfer-stores/cded0f35-4322-4527-bb7e-ca42bbc9015b/limits\"\n          }\n        }\n      },\n      \"links\": {\n        \"self\": \"http: //localhost:8082/api/transfer-stores/cded0f35-4322-4527-bb7e-ca42bbc9015b\"\n      }\n    }\n  ],\n  \"links\": {\n    \"first\": \"http://localhost:8082/api/transfer-stores?page[limit]=20\",\n    \"last\": \"http://localhost:8082/api/transfer-stores?page[limit]=20&page[offset]=540\",\n    \"next\": \"http://localhost:8082/api/transfer-stores?page[limit]=20&page[offset]=20\"\n  },\n  \"meta\": {\n    \"totalResourceCount\": 558\n  }\n}\n```\n\nThe response includes a `totalResourceCount` and page links that allow you to traverse multi-page results, see [Results Count and Multiple Page Links](/#introduction/api-patterns/results-count-and-multiple-page-links).\n\n## Retrieve Resource by Id\n\nTo retrieve a single resource named by Id, `GET` the name of the resource with the Id attached, for example to retrieve a Quote with Id `55544824-91e8-4719-8241-4fed636a1efe`:\n\n```http\nGET /quotes/55544824-91e8-4719-8241-4fed636a1efe\n```\n\n## Update an Existing Resource\n\nTo update an existing resource instance to _change_ the values of already stored attributes, `PATCH` the name of the resource with the Id attached and with a request body that contains the attributes to be updated.\n\nFor example to change the contact phone number of a company beneficiary identified by Id `e983f138-1264-4232-8528-37ac3ca4ea5b`, update the `phoneNumber` attribute:\n\n```http\nPATCH /company-beneficiaries/e983f138-1264-4232-8528-37ac3ca4ea5b\n```\n\nwith a request body, for example:\n\n```curl\n{\n    \"type\": \"company-beneficiaries\",\n    \"attributes\": {\n        \"phoneNumber\": \"123456789\"\n    }\n}\n```\n\nThe new value replaces the old value of the `phoneNumber` attribute for this resource.\n\n## Filters\n\nWhen you list resources you are often only interested in a specific subset of the resource in question, for example all Stores in the UK or all Corridors for a particular currency pair. Use filters to narrow the search for resource instances with specific values.\n\nFor example:\n\n```\nGET /transfer-stores?filter[countryCode]=US\n```\n\nor:\n\n```\nGET /corridors?filter[sendCurrencyCode]=USD&[receiveCurrencyCode]=GBP\n```\n\nYou can build deeper queries by including the data pointed to by a resource relationship in the search, see [Relationships between resources](/#introduction/relationships-between-resources) below.\n\nFor example, a customer's past transfers are stored in the `transfers` relationship link and include a `reference` attribute. To search a customer's transfers by reference, include linked `transfers` and filter on the `reference` attribute:\n\n```\nGET /customers/<CUSTOMER_ID>?include=transfers&filter[reference]=Donation\n```\n\nBy using filters you can create complex queries that move the search burden from your application client to the service itself and that reduce the network bandwidth your application uses by reducing the number of results returned. Especially for mobile apps and other resource constrained situations these may be important performance enhancements.\n\nFilters also enable you to make approximate or incomplete queries, for example using the `[LIKE]` filter on a partial string when searching on a name field:\n\n```\nGET /individual-beneficiaries?filter[firstName][LIKE]=Joh%\n```\n\nwhere `%` in the filter term is a wildcard specifying a search for any first name beginning `Joh`.\n\nSimilarly, the donations search above might be more effective as:\n\n```\nGET /customers/<CUSTOMER_ID>?include=transfers&filter[reference][LIKE]=Donat%\n```\n\n## Relationships between resources\n\nMany resource types include links to other resources, stored as `relationships`. For example Customer and Beneficiary resources hold their address details as relationship links to `addresses` objects:\n\n```curl\n\"data\": {\n    \"type\": \"company-beneficiaries\",\n    \"attributes\": {\n        ...\n    },\n    \"relationships\": {\n        \"addresses\" : {\n            ...\n        }\n    }\n}\n```\n\nTo create a relationship link, `POST` to the named `relationships` attribute with a request body that contains data to create a new object or a resource Id to link to an existing object.\n\nFor example to add a new address to an existing company benificiary with id `e983f138-1264-4232-8528-37ac3ca4ea5b`:\n\n```http\nPOST /company-beneficiaries/e983f138-1264-4232-8528-37ac3ca4ea5b/addresses\n```\n\nwith suitable data in the request body.\n\nMaking multiple `POST`s adds multiple instances, so the `addresses` relationshiop can link multiple addresses for a single resource.\n\nResource linking by relationships makes it easy to build up complex resources from simpler parts. It also makes it easy to add resource details incrementally as an alternative to including all resource data in your original `POST` body.\n\n>Note that this is different from updating a resource's primary data by `PATCH`ing the resource instance, see [Update an Existing Resource](/#introduction/update-an-existing-resource).\n\nSee [Filters](/#introduction/api-patterns/filters) above for examples of including linked resources in filtered searches.\n\n## Results Count and Multiple Page Links\n\nAll results include a `totalResourceCount` value and page links that allow you to traverse multi-page results, for example:\n\n```curl\n{\n  \"data\": [\n    {\n      \"id\": \"bc6a389c-7f47-3adc-a9cd-9bfd1a5e7874\",\n      \"type\": \"corridors\",\n     ...\n    }\n  ],\n \"links\": {\n    \"first\": \"https://imt.sandbox.digital.travelex.net/v2/corridors?page[limit]=20\",\n    \"last\": \"https://imt.sandbox.digital.travelex.net/v2/corridors?page[limit]=20&page[offset]=160\",\n    \"next\": \"https://imt.sandbox.digital.travelex.net/v2/corridors?page[limit]=20&page[offset]=20\"\n  },\n  \"meta\": {\n    \"totalResourceCount\": 173\n  }\n}\n```\n\nYou can control the number of results per page by including a maximum per-page  count filter in the query parameters, for example:\n\n```\nGET /stores?page[limit]=20\n```\n\n## Useful Resource Metadata\n\nCreatable resources (ones you can POST to) have a number of useful, standard metadata attributes including the following:\n\n| Attribute | Description|\n|:--|:--|\n|`externalId`|Optional attribute on each resource that allows you to specify your own arbitrary id. This allows you to look up the resource in an easy way|\n|`audit`|Calculated attributes that are automatically added when a resource instance is created. Includes the name of the user that created the resource and the time at which the resource was created|\n|`partnerId`| By default, resources are created against the _default_ partner id of the user that creates them. If you have multiple partner ids you can explicitly specify the `partnerId` to associate with a resource instance by including the attribute in your POST request|\n|`encryptedData`|Any resource attributes including predefined metadata can be provided in an encrypted blob, to be mapped onto the specified resource attributes and/or used to verify the request. See [the next section](/#introduction/api-patterns/sending-encrypted-data) for more information|\n\n## Sending Encrypted Data\n\nAny resource attributes, including predefined metadata, that are deemed to be sensitive and should be sent securely or which should be verified against a key, can be encrypted/signed by the application and provided using the `encryptedData` attribute, either when the resource is created or updated.\n\nFor example, an application could securely create a customer by encrypting their US Social Security Number (SSN) using this data in a `POST` request:\n\n```curl\n{\n  \"data\": {\n    \"type\": \"individual-customers\",\n    \"attributes\": {\n      \"countryCode\": \"US\",\n      \"dateOfBirth\": \"1985-01-15\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Smith\",\n      \"phoneNumber\": \"+447123456789\",\n      \"termsAndConditionsConsent\": true,\n      \"encryptedData\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzb21lIjoibWV0YWRhdGEiLCJhdHRyaWJ1dGVzIjp7InNzbiI6IjEyMy00NS02Nzg5In19.JX0E5gdn5gmVCDOGUlclFyuKSIRGz1B9O971r4zCH_Y\"\n    }\n  }\n}\n```\n\nwhere the value of the `encryptedData` field is decrypted on the backend to a JSON payload using Travelex's private key:\n\n```curl\n{\n  \"some\": \"metadata\",\n  \"attributes\": {\n    \"ssn\": \"123-45-6789\"\n  }\n}\n```\n\nThe fields in the `attributes` object are mapped onto the appropriate attributes in the resource being created.\n\nThe response would look like the following, with the sensitive details redacted:\n\n```curl\n{\n  \"data\": {\n    \"id\": \"4a18149a-cf39-4aa0-8058-79aa3c3f9dc3\",\n    \"type\": \"individual-customers\",\n    \"attributes\": {\n      \"countryCode\": \"US\",\n      \"dateOfBirth\": \"1985-01-15\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Smith\",\n      \"phoneNumber\": \"+447123456789\",\n      \"termsAndConditionsConsent\": true,\n      \"ssn\": \"***\"\n    }\n  }\n}\n```\n\n## Errors\n\nThe following are some common standard errors you may encounter when using our APIs.\n\n### 404 Does not exist\n\nAs with most REST APIs if you request a resource that does not exist you will receive a 404 code:\n\n```curl\nGET /does-not-exist\n{\n  \"errors\": [{\n    \"status\": \"404\",\n    \"title\": \"Not Found\",\n    \"detail\": \"Not Found\",\n    \"meta\": {\n      \"path\": \"/does-not-exist\",\n      \"timestamp\": 1527687571014\n    }\n  }]\n}\n```\n\n### 422 Unprocessable Entity\n\nIf you provide an incorrect body for a `POST` you will receive a 422 Unprocessable Entity code. For example the following request:\n\n```curl\nPOST /students\n{\n  \"type\": \"students\",\n  \"attributes\": {}\n}\n```\n\nwill give response:\n\n```curl\n{\n  \"errors\": [{\n    \"status\": \"422\",\n    \"detail\": \"Must provide name\",\n    \"source\": {\n      \"pointer\": \"/data/attributes/name\"\n    },\n    \"meta\": {\n      \"resourceId\": null,\n      \"type\": \"ConstraintViolation\",\n      \"messageTemplate\": \"Must provide name\",\n      \"resourceType\": \"students\"\n    }\n  }]\n}\n```\n\n### 401 Unauthorized\n\nTrying to access a resource for which you do not have permission results in a 401 Unauthorized response:\n\n```curl\n{\n    \"errors\": [\n        {\n            \"status\": \"401\",\n            \"title\": \"Unauthorized\",\n            \"detail\": \"Full authentication is required to access this resource\",\n            \"meta\": {\n                \"path\": \"/v2/bank-accounts\",\n                \"timestamp\": \"2018-11-14T09:37:35.480+0000\"\n            }\n        }\n    ]\n}\n```\n\n# Cookbook\n\nThis Cookbook collects useful code recipes that you can reuse in your own applications to implement common [IMT](/#introduction/glossary) scenarios.\n\n## Introduction\n\nThese recipes demonstrate typical steps from common user journeys, for example requesting an FX quote, adding a payment beneficiary, or locating a Travelex bureau abroad from which a payment can be collected.\n\n### Sandbox endpoints\n\nThe base URLs of all our endpoints are versioned.\n\nOur sandbox endpoints mirror our production endpoints to simplify migrating your code to production.\n\n> Note that endpoint version number changes imply that breaking changes have been made between a new and a previous version.\n\nThe table below shows the status of current API versions:\n\n| API Version | Sandbox Base URL | Status | Production | Sandbox |\n|:------------|:------------|:-------|:-------|:-------|\n| v2 | `https://imt.sandbox.digital.travelex.net/v2` | Live |YES|YES|\n\nCheck API status and [subscribe to update notifications](https://status.api.travelex.io) from the developer website.\n\n### Basic IMT Workflow\n\nTo make an international money transfer, an application requires some basic information from its user. The Travelex APIs always refer to the *application user* as the _customer_. The customer may be an individual person, or a company i.e. business, or other organisation. See [Customers](/#reference/customers).\n\nA transfer is always made on behalf of a customer.\n\nThe customer provides the money that will be transferred and pays the FX costs and bank fees, either from a bank account or from a payment card. See [Payment Details](/#reference/payment-details).\n\nThe Travelex APIs always refer to the receiver of the money that is transferred as the _beneficiary_. The beneficiary may be an individual person, or a company i.e. business, or other organisation. A beneficiary is always created as an owned, linked resource of a customer. See [Beneficiaries](/#reference/beneficiaries).\n\nA transfer may be delivered into the beneficiary's bank account, or collected in cash by the beneficiary from a Travelex bureau. See [Payment Details](/#reference/payment-details).\n\nBecause an international payment is made across country borders, stricter identification procedures are required than for local money transfers. Both the customer and the beneficiary may be subject to identity checking, and the exact level of checks varies depending on which countries the money is being sent between. See [Required Details](/#reference/required-details/required-details).\n\nAny international money transfer can be described within this basic framework, which is therefore useful as a minimal starting point for an application.\n\nReal world use cases may add more steps, for example customer and beneficiary identification may require the user to provide an identity document, in which case an application may need to request it from the user and enable the user to upload it.\n\nOther checks, for example proofs of address, may be managed automatically by the Travelex service through downstream providers, simplifying the application developer's task.\n\n## Digital Partners\n\nThis journey demonstrates a common scenario in which a partner application uses the Travelex APIs to quote an FX rate and fees for an international transfer and then sets up and makes the transfer on behalf of the application user.\n\n+ _Partner_ refers to the relationship between the partner application and Travelex\n\n+ _Customer_ refers to the relationship between the partner application and the application user\n\n![Business to Business to Customer flow](https://www.dropbox.com/s/mo1apc7gevg6zx8/Integration%20Image.png?raw=1)\n\nThe recipe shows the steps required to initiate and complete this scenario.\n\n### Recipe\n\n1. Partner application [calls the login endpoint](#b2b2c-1) with credentials to request a session token\n\n2. Application [requests corridors reference data](#b2b2c-2) and uses it to [create an FX quote](#b2b2c-3) for the user, in this example US Dollars (USD) to Pounds Sterling (GBP)\n\n3. Application finds out which [customer details](#b2b2c-4) are required for this transaction and [creates a new Customer](#b2b2c-5) with the required details\n\n4. Application [adds a payment card](#b2b2c-6), payment for this transfer will be taken from the card\n\n5. Application find outs which [beneficiary details](#b2b2c-7) are required for this transaction and [adds a new Beneficiary](#b2b2c-8) for this customer, including [address](#b2b2c-9) with required address details for a UK beneficiary and a [bank account](#b2b2c-9) with required account details for a UK bank account into which this transfer will be delivered\n\n6. Application [creates the transfer](#b2b2c-11)\n\n> Note that once the transfer has been initiated the application can track the progress of the transfer through its states using the [Hooks](/#reference/hooks) endpoint.\n\n### 1. Login and Authentication\n\n<a name=\"b2b2c-1\"/>\n\nThe Travelex APIs use TLS authentication. API calls require a session token in the Authorization header, see [Authentication](/#reference/authentication) for more details.\n\n[Log in](/#reference/authentication/login/login) to acquire a session token.\n\n#### `POST` Login\n\n```curl\nPOST /login\n```\n\n##### Request\n\nExample request, curl command line:\n\n```curl\ncurl --request POST \\\n  --url 'https://REPLACE_ME/login' \\\n  --header 'Content-Type: application/vnd.api+json' \\\n  --data '{\n  \"data\": {\n    \"type\": \"login\",\n    \"attributes\": {\n      \"username\": \"REPLACE_ME\",\n      \"password\": \"REPLACE_ME\"\n    }\n  }\n}'\n```\n\nReplace the strings in the code above as indicated with:\n\n+ `url` The base path of the API version you are using e.g. for API v2 `https://imt.sandbox.digital.travelex.net/v2`\n\n+ `username` The developer email address supplied at sign up\n\n+ `password` The API key provided to the developer at sign up\n\n##### Response\n\n201 if successful.\n\nThe response body contains the session token string which should be used to make further API requests, in this example:\n\n`\"sessionToken\": \"Y3NjLXRlc3RzOmlhNHVWMU\"`\n\n```curl\n{\n  \"data\": {\n    \"id\": \"b229e9b0-48fh-4446-9966-71008cdfbbea\",\n    \"type\": \"login\",\n    \"attributes\": {\n      \"username\": \"user@travelex.com\",\n      \"password\": \"******\",\n      \"sessionToken\": \"Y3NjLXRlc3RzOmlhNHVWMU\",\n      \"audit\": {\n        \"createdAt\": \"2018-08-18T12:00:00.000Z\",\n        \"createdBy\": \"Travelex\"\n      }\n    },\n    \"links\": {\n      \"self\": \"http://localhost:8082/api/login/b229e9b0-48fh-4446-9966-71008cdfbbea\"\n    }\n  }\n}\n```\n\n### 2. Corridors and Quotes\n\n<a name=\"b2b2c-2\"></a>\n\n[Corridors](/#reference/corridors) are combinations of send and receive countries and currencies between which money can be transferred.\n\nTo find all available corridors call [`GET /corridors`](/#reference/corridors/corridors/get-corridors).\n\n#### `GET` Get all corridors\n\n```curl\nGET /corridors\n```\n\n##### Request\n\nExample request, a curl command line:\n\n```curl\ncurl --request GET \\\n  --url 'https://REPLACE_ME/corridors' \\\n  --header \"Content-Type: application/vnd.api+json\" \\\n  --header 'Authorization: REPLACE_ME' \\\n```\n\nReplace the strings in the code above as indicated with:\n\n+ `url` The base path of the API version you are using e.g. for API v2 `https://imt.sandbox.digital.travelex.net/v2`\n\n+ `Authorization` The session token returned by `login`\n\n##### Response\n\n200 if successful.\n\nThe response body contains an array of `corridors` objects.\n\nThe example below shows a fragment from the USA/US Dollars (US/USD) to UK/British Pounds Sterling (GB/GBP) corridor:\n\n```curl\n {\n      \"id\": \"USUSDGBGBPSWIFT\",\n      \"type\": \"corridors\",\n      \"attributes\": {\n        \"receiveCurrencyCode\": \"GBP\",\n        \"sendCurrencyCode\": \"USD\",\n        \"receiveCountryCode\": \"GB\",\n        \"sendCountryCode\": \"US\",\n        \"minSendAmount\": \"50\",\n        \"maxSendAmount\": \"1000000\"\n      },\n    ...\n    }\n```\n\nUse the data to enable the user to select a corridor for a new transfer.\n\nCreate a new [Quote](/#reference/quotes) for this corridor to show the current exchange rate and applicable fees for the different payment and delivery options that are available.\n\nThis example uses attributes parsed from the `USUSDGGGBPSWIFT` `corridor` returned in the previous result:\n\n```curl\n \"attributes\": {\n        \"receiveCurrencyCode\": \"GBP\",\n        \"sendCurrencyCode\": \"USD\",\n        \"receiveCountryCode\": \"GB\",\n        \"sendCountryCode\": \"US\"\n      },\n```\n\nAssemble the required data and call [`POST /quotes`](/#reference/quotes/quotes/create-quote).\n\n#### `POST` Create quote\n\n<a name=\"b2b2c-3\"></a>\n\n```curl\nPOST /quotes\n```\n\n##### Request\n\nExample request, a curl command line:\n\n```curl\ncurl --include \\\n     --request POST \\\n     --header \"Content-Type: application/vnd.api+json\" \\\n     --header \"Authorization: REPLACE_ME\" \\\n     --data-binary \"{\n  \"data\": {\n    \"type\": \"quotes\",\n    \"attributes\": {\n      \"receiveCountryCode\": \"GB\",\n      \"receiveCurrencyCode\": \"GBP\",\n      \"sendCountryCode\": \"US\",\n      \"sendCurrencyCode\": \"USD\",\n      \"amountType\": \"SEND\",\n      \"amount\": \"200.00\",\n      \"promoCode\": \"null\"\n    }\n  }\n}\" \\\n'https://REPLACE_ME/quotes'\n```\n\nReplace the strings in the code above as indicated with:\n\n+ `url` The base path of the API version you are using e.g. for API v2 `https://imt.sandbox.digital.travelex.net/v2`\n\n+ `Authorization` The session token returned by `login`\n\n##### Response\n\n201 if successful.\n\nThe response body is a `quotes` object that contains an `id` that you can use to reference the quote in future API calls. Quoted prices and options are guaranteed for ~30 minutes:\n\n```curl\n    {\n    \"data\": {\n    \"id\": \"55544824-91e8-4719-8241-4fed636a1efe\",\n    \"type\": \"quotes\",\n    \"attributes\": {\n    ...\n    }\n   }\n   }\n```\n\nA `methods` array details the delivery methods available, and a `quoteDetails` array shows the exchange rate offered, applicable fees, and delivery dates for all available combinations of `paymentMethod` and `deliveryMethod`, in this example:\n\n|`deliveryMethod`|`paymentMethod`|\n|:----------|:--------|\n|`LOCAL`|`BANK_TRANSFER`|\n|`LOCAL`|`ACH`|\n|`SWIFT`|`BANK_TRANSFER`|\n|`SWIFT`|`ACH`|\n|`CASH`|`BANK_TRANSFER`|\n\n```curl\n    { ...,\n       \"quoteDetails : {\n          \"receiveAmount\": \"693.20\",\n          \"sendAmount\": \"1000.00\",\n          \"midMarketRate\": \"0.7102\",\n          \"customerRate\": \"0.6932\",\n          \"deliveryMethod\": \"LOCAL\",\n          \"paymentMethod\": \"BANK_TRANSFER\",\n          \"estimatedDeliveryDate\": \"2018-09-17\",\n          \"fees\": [\n            {\n              \"name\": \"LOCAL delivery\",\n              \"amount\": \"8\"\n            }\n          ]\n       },\n   }\n```\n\nOther relevant details include minimum and maximum `limits` for payment and delivery options.\n\nUse the data to enable the user to choose a quote to suit their needs whether based on cost, speed, convenience of payment or collection method, and so on.\n\n### 3. Customers\n\n<a name=\"b2b2c-4\"></a>\n\nThe [Customer](/#reference/customers) is your application user, who will originate the transfer.\n\nTo procede with creating the transfer you must first create your application user as a new customer. To do so you need to know what customer identity details are required for this specific corridor.\n\n> Required customer details may vary depending on the country in which money is being sent or received. Always dynamically request the required details as the first step in creating a new customer resource.\n\n#### `GET` Required details &mdash; individual customer US\n\n```curl\nGET /required-details\n```\n\nCall [`GET /required-details`](/#reference/required-details/required-details) with filters for:\n\n+ `countryCode` which must be the `sendCountryCode` from the chosen corridor, for example `US`\n\n+ `requirementsType` in this case `customer`\n\n+ `requirementsSubType` in this case `individual`\n\n##### Request\n\nExample request, a curl command line:\n\n```curl\ncurl --request GET \\\n  --url 'http://EXAMPLE_URL/required-details?filter[countryCode]=US&filter[requirementsType]=customer&filter[requirementsSubType]=individual' \\\n  --header 'Authorization: SESSION_TOKEN' \\\n  --header 'X-Auth: xAuth'\n```\n\nReplace the strings in the code above as indicated with:\n\n+ `url` The base path of the API version you are using e.g. for API v2 `https://imt.sandbox.digital.travelex.net/v2`\n\n+ `Authorization` The session token returned by `login`\n\n##### Response\n\n201 if successful.\n\nThe response body is a `required-details` object with attributes `\"countryCode\": \"US\"`, `\"requirementsType\": \"customer\"`, and `\"requirementsSubType\": \"individual\"` that describes the identity information you need to create a new customer and includes useful extras, for example regexs to parse user input and standard error messages in the language of the country code.\n\nThis is enough information to request identity details from your user and to create the new customer.\n\n#### `POST` Create customer\n\n<a name=\"b2b2c-5\"></a>\n\n```curl\nPOST /individual-customers\n```\n\n##### Request\n\nCall [`POST /individual-customers`](/#reference/customers/individual/create-individual-customer) with the user information, for example:\n\n```curl\ncurl --request POST \\\n  --url 'http://EXAMPLE_URL/individual-customers' \\\n  --header 'Authorization: SESSION_TOKEN' \\\n  --header 'Content-Type: application/vnd.api+json' \\\n  --header 'X-Auth: xAuth' \\\n  --data '{\n  \"data\": {\n    \"type\": \"individual-customers\",\n    \"attributes\": {\n      \"countryCode\": \"US\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Smith\",\n      \"nationalId\": \"123-45-6789\",\n      \"dateOfBirth\": \"1980-01-30\",\n      \"phoneNumber\": \"1234\",\n      \"termsAndConditionsConsent\": true\n    }\n  }\n}'\n```\n\nReplace the strings in the code above as indicated with:\n\n+ `url` The base path of the API version you are using e.g. for API v2 `https://imt.sandbox.digital.travelex.net/v2`\n\n+ `Authorization` The session token returned by `login`\n\n##### Response\n\n201 if successful.\n\nThe response body includes an `id` which is the unique id for this customer.\n\nTo complete the customer setup with sufficient details to make a transfer you also need address information.\n\n> Address details and formats vary from country to country. Always dynamically request the required details as the first step in creating a new address.\n\n#### `GET` Required details &mdash; US address\n\n```curl\nGET /required-details\n```\n\nCall [`GET /required-details`](/#reference/required-details/required-details) with filters for:\n\n+ `countryCode` which must be the `sendCountryCode` from the chosen corridor, for example `US`\n\n+ `requirementsType` in this case `address`\n\n##### Request\n\nExample request, a curl command line:\n\n```curl\ncurl --request GET \\\n  --url 'http://EXAMPLE_URL/required-details?filter[countryCode]=US&filter[requirementsType]=address' \\\n    --header 'Authorization: SESSION_TOKEN' \\\n  --header 'X-Auth: xAuth'\n```\n\nReplace the strings in the code above as indicated with:\n\n+ `url` The base path of the API version you are using e.g. for API v2 `https://imt.sandbox.digital.travelex.net/v2`\n\n+ `Authorization` The session token returned by `login`\n\n##### Response\n\n200 if successful.\n\nThe response body is a `required-details` object with attributes `\"countryCode\": \"US\"`, `\"requirementsType\": \"address\"` and `\"requirementsSubType\": \"address\"` that describes the information you need to create a new address, for example the expected format of street address and postal code, with useful extras including  regex parsers and standard error messages in the language of the country code.\n\nTo add the address `POST` to the `addresses` link in this customer's `relationships` data.\n\n#### `POST` Individual customer by Id &mdash; `addresses` link\n\n```http\nPOST /individual-customers/<CUSTOMER_ID>/addresses\n```\n\nSee [API Patterns](/#introduction/api-patterns/relationships-between-resources) for more about relationships and links.\n\n##### Request\n\nExample request, a curl command line:\n\n```curl\ncurl --request POST \\\n  --url 'http://EXAMPLE_URL/individual-customers/<CUSTOMER_ID>/addresses' \\\n    --header 'Authorization: SESSION_TOKEN' \\\n  --header 'Content-Type: application/vnd.api+json' \\\n  --header 'X-Auth: xAuth' \\\n  --data '{\n  \"data\": {\n    \"type\": \"addresses\",\n    \"attributes\": {\n      \"countryCode\": \"US\",\n      \"houseNumber\": \"1600\",\n      \"street1\": \"Pennsylvania Avenue\",\n      \"city\": \"Washington\",\n      \"state\": \"DC\",\n      \"postalCode\": \"20500\",\n      \"type\": \"PRIMARY\"\n    }\n  }\n}'\n```\n\nReplace the strings in the code above as indicated with:\n\n+ `url` The base path of the API version you are using e.g. for API v2 `https://imt.sandbox.digital.travelex.net/v2`\n\n+ `Authorization` The session token returned by `login`\n\n##### Response\n\n201 if successful.\n\n### 4. Payment Method\n\n<a name=\"b2b2c-6\"></a>\n\nIn this example we assume the user has chosen to pay with a payment card that has been added to a mobile wallet or mobile payment service, see [Tokenized Cards](/#reference/payment-details/tokenized-cards).\n\nRequired details are the same for all cards and therefore a dynamic request for required details is not necessary.\n\nTo enable payment with the payment card, create a new card instance and specify its ownership in the `relationships` link to associate the card with a specific customer.\n\nFor future use, we can refer to this card by its Id and prompt the user for card confirmation details rather than recreating the card. A customer's stored payments methods can be found by requesting `paymentDetails` with a customer Id, see [Payment Details](/#reference/payment-details).\n\nDetails required to create a new card resource are:\n\n| Attribute | Description | Example Value |\n| ----------| ----------- | ------------- |\n| countryCode | ISO two digit country code | `\"US\"` |\n| currencyCode | Currency code for the currency in which payment will be taken | `\"USD\"` |\n| cardScheme | The type of the card | `\"VISA\"`|\n| expirationMonth | Two digit expiry month | `\"07\"` |\n| expirationYear | Two digit expiry year| `\"20\"`|\n\n#### `POST` Create tokenized card\n\n```curl\nPOST /tokenized-cards\n```\n\n##### Request\n\nExample request, a curl command line:\n\n```curl\ncurl --request POST \\\n  --url 'http://EXAMPLE_URL/tokenized-cards' \\\n  --header 'Authorization: SESSION_TOKEN' \\\n  --header 'Content-Type: application/vnd.api+json' \\\n  --header 'X-Auth: xAuth' \\\n  --data '{\n  \"data\": {\n    \"type\": \"tokenized-cards\",\n    \"attributes\": {\n      \"countryCode\": \"US\",\n      \"currencyCode\": \"USD\",\n      \"cardScheme\": \"VISA\",\n      \"expirationMonth\": \"07\",\n      \"expirationYear\": \"20\"\n    },\n    \"relationships\": {\n        \"owner\": {\n            \"data\": {\n                \"type\": \"individual-customers\",\n                \"id\": \"CUSTOMER_ID\"\n            }\n        }\n    }\n  }\n}'\n```\n\nReplace the strings in the code above as indicated with:\n\n+ `url` The base path of the API version you are using e.g. for API v2 `https://imt.sandbox.digital.travelex.net/v2`\n\n+ `Authorization` The session token returned by `login`\n\n+ `owner` `id` The customer this `tokenized-card` payment method belongs to\n\n##### Response\n\n201 if successful.\n\n### 5. Beneficiary and Relationships\n\n<a name=\"b2b2c-8\"></a>\n\nThe [Beneficiary](/#reference/beneficiaries) is the recipient of this money transfer, the individual or company  your customer is sending money to. A new beneficiary is always created as a standalone resource owned and linked from a customer.\n\nTo set up a new beneficiary you need to know what beneficiary details are required for this corridor.\n\n> Required beneficiary details may vary depending on the country in which money is being sent or received. Always dynamically request the required details as the first step in creating a new beneficiary resource.\n\n#### `GET` Required details &mdash; individual beneficiary GB\n\n```curl\nGET /required-details\n```\n\nCall [`GET /required-details`](/#reference/required-details/required-details) with filters for:\n\n+ `countryCode` which must be the `receiveCountryCode` from the chosen corridor, in this case `GB`\n\n+ `requirementsType` in this case `beneficiary`\n\n+ `requirementsSubType` in this case `individual`\n\n##### Request\n\nExample request, a curl command line:\n\n```curl\ncurl --request GET \\\n  --url 'http://EXAMPLE_URL/required-details?filter[countryCode]=GB&filter[requirementsType]=beneficiary&filter[requirementsSubType]=individual' \\\n  --header 'Authorization: SESSION_TOKEN' \\\n  --header 'X-Auth: xAuth'\n```\n\nReplace the strings in the code above as indicated with:\n\n+ `url` The base path of the API version you are using e.g. for API v2 `https://imt.sandbox.digital.travelex.net/v2`\n\n+ `Authorization` The session token returned by `login`\n\n##### Response\n\n201 if successful.\n\nThe response body is a `required-details` object with attributes `\"countryCode\": \"GB\"`, `\"requirementsType\": \"beneficiary\"`, and `\"requirementsSubType\": \"individual\"` that describes the identity information you need to create a new beneficiary and includes useful extras, for example regexs to parse user input and standard error messages in the language of the country code.\n\nYou can now request the necessary information from your user and create the new beneficiary.\n\n#### `POST` Create beneficiary\n\n```curl\nPOST /individual-beneficiaries\n```\n\n##### Request\n\nCall [`POST /individual-beneficiaries`](/#reference/beneficiaries/individuals/create-individual-beneficiary) with the beneficiary information and the customer Id, for example:\n\n```curl\ncurl --request POST \\\n  --url 'http://EXAMPLE_URL/individual-beneficiaries' \\\n  --header 'Authorization: SESSION_TOKEN' \\\n  --header 'Content-Type: application/vnd.api+json' \\\n  --header 'X-Auth: xAuth' \\\n  --data '{\n  \"data\": {\n    \"type\": \"individual-beneficiaries\",\n    \"attributes\": {\n      \"countryCode\": \"GB\",\n      \"firstName\": \"David\",\n      \"lastName\": \"Jones\"\n    },\n   \"relationships\": {\n      \"owner\": {\n        \"data\": {\n          \"type\": \"customers\",\n          \"id\": \"CUSTOMER_ID\"\n        }\n     }\n  }\n}'\n```\n\nReplace the strings in the code above as indicated with:\n\n+ `url` The base path of the API version you are using e.g. for API v2 `https://imt.sandbox.digital.travelex.net/v2`\n\n+ `Authorization` The session token returned by `login`\n\n+ `owner` `id` The customer this beneficiary is linked to\n\n##### Response\n\n201 if successful.\n\nThe response body includes a unique Id for this beneficiary, and relationship links including the following:\n\n+ `owner` The Id of the customer who will make the transfer to this beneficiary\n\n+ `addresses` One or more contact addresses for the beneficiary\n\n+ `paymentDetails` Details of one or more payment methods that can be used to receive money\n\n```curl\n{\n  \"data\": {\n    \"id\": \"74b94eb2-f414-4d8d-b193-301f0f111cd9\",\n    \"type\": \"individual-beneficiaries\",\n    \"attributes\": {\n      \"lastName\": \"Smith\",\n      \"externalId\": null,\n      \"dateOfBirth\": null,\n      \"partyType\": \"BENEFICIARY\",\n      \"firstName\": \"Josh\",\n      \"phoneNumber\": null,\n      \"nationalId\": null,\n      \"countryCode\": \"GB\",\n      \"audit\": {\n        \"createdAt\": \"2018-08-18T12:00:00.000Z\",\n        \"createdBy\": \"Travelex\"\n      },\n      \"name\": \"Josh Smith\",\n      \"middleName\": null,\n      \"subType\": \"individual\",\n      \"partnerId\": \"US-WBK-20180404-1-2\",\n      \"email\": null\n    },\n    \"relationships\": {\n      \"owner\": {\n        \"data\": {\n          \"id\": \"c168209c-f00e-4cdf-8a5b-23f4f081d7c7\",\n          \"type\": \"parties\"\n        },\n        \"links\": {\n          \"self\": \"http://localhost:8082/api/individual-beneficiaries/74b94eb2-f414-4d8d-b193-301f0f111cd9/relationships/owner\",\n          \"related\": \"http://localhost:8082/api/individual-beneficiaries/74b94eb2-f414-4d8d-b193-301f0f111cd9/owner\"\n        }\n      },\n      \"addresses\": {\n        \"links\": {\n          \"self\": \"http://localhost:8082/api/individual-beneficiaries/74b94eb2-f414-4d8d-b193-301f0f111cd9/relationships/addresses\",\n          \"related\": \"http://localhost:8082/api/individual-beneficiaries/74b94eb2-f414-4d8d-b193-301f0f111cd9/addresses\"\n        }\n      },\n      \"notes\": {\n        \"links\": {\n          \"self\": \"http://localhost:8082/api/individual-beneficiaries/74b94eb2-f414-4d8d-b193-301f0f111cd9/relationships/notes\",\n          \"related\": \"http://localhost:8082/api/individual-beneficiaries/74b94eb2-f414-4d8d-b193-301f0f111cd9/notes\"\n        }\n      },\n      \"paymentDetails\": {\n        \"data\": [\n          {\n            \"id\": \"d2125e58-8151-4ed4-8187-74c97a262038\",\n            \"type\": \"payment-details\"\n          }\n        ],\n        \"links\": {\n          \"self\": \"http://localhost:8082/api/individual-beneficiaries/74b94eb2-f414-4d8d-b193-301f0f111cd9/relationships/paymentDetails\",\n          \"related\": \"http://localhost:8082/api/individual-beneficiaries/74b94eb2-f414-4d8d-b193-301f0f111cd9/paymentDetails\"\n        }\n      }\n    }\n  }\n}\n```\n\nIn this case you need to provide a beneficiary address and a payment method, as specified in the required details response. You can populate these links by posting directly to them with the required information you requested from your application user.\n\nOnce again, before you can populate them you must find out what the required details are for a UK address and UK bank account, since this transfer is to a UK beneficiary.\n\n#### `GET` Required details &mdash; GB address\n\n```curl\nGET /required-details\n```\n\nAs we did for the customer address, we call [`GET /required-details`](/#reference/required-details/required-details) with filters for:\n\n+ `countryCode` which must be the `receiveCountryCode` from the chosen corridor, for example `GB`\n\n+ `requirementsType` in this case `address`\n\n##### Request\n\nExample request, a curl command line:\n\n```curl\ncurl --request GET \\\n  --url 'http://EXAMPLE_URL/required-details?filter[countryCode]=GB&filter[requirementsType]=address' \\\n    --header 'Authorization: SESSION_TOKEN' \\\n  --header 'X-Auth: xAuth'\n```\n\nReplace the strings in the code above as indicated with:\n\n+ `url` The base path of the API version you are using e.g. for API v2 `https://imt.sandbox.digital.travelex.net/v2`\n\n+ `Authorization` The session token returned by `login`\n\n##### Response\n\n200 if successful.\n\nThe response body is a `required-details` object with attributes `\"countryCode\": \"GB\"`, `\"requirementsType\": \"address\"` and `\"requirementsSubType\": \"address\"` that describes the information you need to create a new address, for example the expected format of street address and postal code, with useful extras including  regex parsers and standard error messages in the language of the country code.\n\nRequest the required address details from your application user and `POST` to the `addresses` link in this beneficiary's `relationships` data.\n\n#### `POST` Individual beneficiary by Id &mdash; `addresses` link\n\n```http\nPOST /individual-beneficiaries/<BENEFICIARY_ID>/addresses\n```\n\nSee [API Patterns](/#introduction/api-patterns/relationships-between-resources) for more about relationships and links.\n\n##### Request\n\nExample request, a curl command line:\n\n```curl\ncurl --request POST \\\n  --url 'http://EXAMPLE_URL/individual-beneficiaries/<BENEFICIARY_ID>/addresses' \\\n    --header 'Authorization: SESSION_TOKEN' \\\n  --header 'Content-Type: application/vnd.api+json' \\\n  --header 'X-Auth: xAuth' \\\n  --data '{\n  \"data\": {\n    \"type\": \"addresses\",\n    \"attributes\": {\n      ...\n    }\n  }\n}'\n```\n\nReplace the strings in the code above as indicated with:\n\n+ `url` The base path of the API version you are using e.g. for API v2 `https://imt.sandbox.digital.travelex.net/v2`\n\n+ `Authorization` The session token returned by `login`\n\n##### Response\n\n201 if successful.\n\nUnlike the customer's tokenized card used for payment, the details required to create a new bank account instance to receive payment differ between countries, with different conventions and numerical formats for identifying accounts. For some examples, and for mock data that you can use to test payments flows in many different countries, see [Bank Account Mock Data](/#introduction/bank-account-mock-data).\n\nAs with all potentially variable required details call [`GET Required details`](/#reference/required-details) with appropriate filters to find out the information and formats needed to create this account instance.\n\n#### `GET` Required details &mdash; GB bank account\n\n```curl\nGET /required-details\n```\n\nCall [`GET /required-details`](/#reference/required-details/required-details) with filters for:\n\n+ `countryCode` which must be the `receiveCountryCode` from the chosen corridor, in this case `GB`\n\n+ `requirementsType` in this case `payments-details`\n\n+ `requirementsSubType` in this case `bank-account`\n\n##### Request\n\nExample request, a curl command line:\n\n```curl\ncurl --request GET \\\n  --url 'http://EXAMPLE_URL/required-details?filter[countryCode]=GB&filter[requirementsType]=payment-details&filter[requirementsSubType]=bank-account' \\\n  --header 'Authorization: SESSION_TOKEN' \\\n  --header 'X-Auth: xAuth'\n```\n\nReplace the strings in the code above as indicated with:\n\n+ `url` The base path of the API version you are using e.g. for API v2 `https://imt.sandbox.digital.travelex.net/v2`\n\n+ `Authorization` The session token returned by `login`\n\n##### Response\n\n200 if successful.\n\nThe response body is a `required-details` object with attributes `\"countryCode\": \"GB\"`, `\"requirementsType\": \"payment-details\"` and `\"requirementsSubType\": \"bank-account\"`.\n\nAs with previous calls to this endpoint the result is comprehensive and provides us with everything we need to know to request appropriate details from the application user and check the information the user provides for correct types and formats.\n\nAfter collecting the details from your application user, create the [Bank Account](/#reference/payment-details/bank-accounts/create-bank-account).\n\n#### `POST` Create beneficiary bank account\n\n<a name=\"b2b2c-10\"></a>\n\n```curl\nPOST /bank-accounts\n```\n\nSimilarly to the customer payment method tokenized card, specify the ownership of this bank account in the relationships link to associate the card with a specific beneficiary.\n\nFor future use, we can refer to this bank account by its Id and prompt the user for details in a future transaction, rather than recreating the account. A beneficiary's stored payments methods can be found by requesting `paymentDetails` with a beneficiary Id, see [Payment Details](/#reference/payment-details).\n\nSee [API Patterns](/#introduction/api-patterns/resource-and-data-relationships) for more about relationships and data links.\n\n##### Request\n\nExample request, a curl command line:\n\n```curl\ncurl --request POST \\\n  --url 'http://EXAMPLE_URL/bank-accounts' \\\n  --header 'Authorization: SESSION_TOKEN' \\\n  --header 'Content-Type: application/vnd.api+json' \\\n  --header 'X-Auth: xAuth' \\\n  --data '{\n  \"data\": {\n    \"type\": \"bank-accounts\",\n    \"attributes\": {\n      \"countryCode\": \"GB\",\n      \"currencyCode\": \"GBP\",\n      \"bankCode\": \"404212\",\n      \"accountNumber\": \"01705415\"\n    },\n    \"relationships\": {\n        \"owner\": {\n            \"data\": {\n                \"type\": \"beneficiaries\",\n                \"id\": \"BENEFICIARY_ID\"\n            }\n        }\n     }\n  }\n}'\n```\n\nReplace the strings in the code above as indicated with:\n\n+ `url` The base path of the API version you are using e.g. for API v2 `https://imt.sandbox.digital.travelex.net/v2`\n\n+ `Authorization` The session token returned by `login`\n\n+ `owner` `id` The beneficiary this payment method belongs to\n\n##### Response\n\n201 if successful.\n\n### 6. Transfers\n\n<a name=\"b2b2c-11\"></a>\n\nThis completes the steps needed to make the transfer, with all the required information encapsulated in persistent resources outside the application and linked to the primary resource, the customer who wants to make the transfer.\n\nWe have created:\n\n+ A quote for the chosen transfer corridor in the form of a timebound offer of a [rate](/#introduction/glossary) with fees\n\n+ A customer to whom all details of this transfer belong\n\n+ A payment card from which to take payment from the customer\n\n+ A beneficiary to whom payment will be made\n\n+ A beneficiary bank account into which the money will be paid\n\nTo initiate the payment call [`POST /transfers/`](/#reference/transfers/transfers/create-transfer) with a request body that specifies Ids for the quote, the payment card from which payment will be taken and the beneficiary bank account to which money will be delivered.\n\nNo explicit identifying information about the customer or beneficiary appears in the final transfer. Instead all details of the customer and beneficiary are implicit in links from the referenced resource instances.\n\nNote that the workflow has followed a rather simplistic order of resource creation, and has assumed that each resource must be created. In a more realistic example some resources are likely to exist and some not.\n\nWe could also have taken a more incremental approach to requesting details from the application user and creating the required resources. An incremental approach has the added convenience of allowing a customer to create a partial draft for a transfer, which can be returned to and retrieved by Id for completion.\n\n#### `POST` Create transfer\n\n```curl\nPOST /transfers\n```\n\n##### Request\n\nExample request, a curl command line:\n\n```curl\ncurl --request POST \\\n  --url 'http://EXAMPLE_URL/transfers' \\\n  --header 'Authorization: SESSION_TOKEN' \\\n  --header 'Content-Type: application/vnd.api+json' \\\n  --header 'X-Auth: xAuth' \\\n  --data '{\n  \"data\": {\n    \"type\": \"transfers\",\n    \"attributes\": {\n      \"deliveryMethod\": \"SWIFT\",\n      \"paymentMethod\": \"BANK_TRANSFER\",\n      \"purpose\": \"Charitable donation\",\n      \"reference\": \"reference notes\"\n    },\n    \"relationships\": {\n      \"quote\": {\n        \"data\": {\n          \"type\": \"quotes\",\n          \"id\": \"QUOTE_ID\"\n        }\n      },\n      \"customerPaymentDetails\": {\n        \"data\": {\n          \"type\": \"tokenized-cards\",\n          \"id\": \"TOKENIZEDCARD_ID\"\n        }\n      },\n      \"beneficiaryPaymentDetails\": {\n        \"data\": {\n          \"type\": \"bank-accounts\",\n          \"id\": \"BENEFICIARY_PAYMENT_DETAILS_ID\"\n        }\n      }\n    }\n  }\n}'\n```\n\nReplace the strings in the code above as indicated with:\n\n+ `url` The base path of the API version you are using e.g. for API v2 `https://imt.sandbox.digital.travelex.net/v2`\n\n+ `Authorization` The session token returned by `login`\n\n+ `relationships` `quote` The Id of the quote this transfer is based on\n\n+ `relationships` `customerPaymentDetails` The Id of the customer payment method resource, in this case a tokenized card\n\n+ `relationships` `beneficiaryPaymentDetails` The Id of the beneficiary payment method resource, in this case a bank account\n\n##### Response\n\n200 if successful.\n\nThe response body is a complete `transfers` instance.\n\n```curl\n{\n  \"data\": {\n    \"id\": \"3f7ef20c-f285-4346-930c-a6793cd63172\",\n    \"type\": \"transfers\",\n    \"attributes\": {\n      \"reference\": \"reference notes\",\n      \"deliveryMethod\": \"SWIFT\",\n      \"purpose\": \"Charitable donation\",\n      \"audit\": {\n        \"createdAt\": \"2018-11-11T19:15:05.395Z\",\n        \"createdBy\": \"df028f6b-89b9-4eef-9037-d00b4a39397c\"\n      },\n      \"additionalRequirements\": null,\n      \"externalId\": null,\n      \"sourceOfFunds\": null,\n      \"partnerId\": \"US-SAM-20180702-SAJN00-1\",\n      \"ownerId\": null,\n      \"status\": \"DRAFT\"\n    },\n    \"relationships\": {\n      \"quote\": {\n        \"data\": {\n          \"id\": \"2c2c2719-dcb5-4093-a3e4-5b9d58d48963\",\n          \"type\": \"quotes\"\n        },\n        \"links\": {\n          \"self\": \"https://imt.sandbox.digital.travelex.net/v2/transfers/3f7ef20c-f285-4346-930c-a6793cd63172/relationships/quote\",\n          \"related\": \"https://imt.sandbox.digital.travelex.net/v2/transfers/3f7ef20c-f285-4346-930c-a6793cd63172/quote\"\n        }\n      },\n      \"notes\": {\n        \"links\": {\n          \"self\": \"https://imt.sandbox.digital.travelex.net/v2/transfers/3f7ef20c-f285-4346-930c-a6793cd63172/relationships/notes\",\n          \"related\": \"https://imt.sandbox.digital.travelex.net/v2/transfers/3f7ef20c-f285-4346-930c-a6793cd63172/notes\"\n        }\n      },\n      \"beneficiaryPaymentDetails\": {\n        \"data\": {\n          \"id\": \"293e7610-6cbc-4c52-868b-8aaa4144a807\",\n          \"type\": \"payment-details\"\n        },\n        \"links\": {\n          \"self\": \"https://imt.sandbox.digital.travelex.net/v2/transfers/3f7ef20c-f285-4346-930c-a6793cd63172/relationships/beneficiaryPaymentDetails\",\n          \"related\": \"https://imt.sandbox.digital.travelex.net/v2/transfers/3f7ef20c-f285-4346-930c-a6793cd63172/beneficiaryPaymentDetails\"\n        }\n      },\n      \"customerPaymentDetails\": {\n        \"data\": {\n          \"id\": \"8faefecd-60cd-4f4d-9a29-5692c02b651b\",\n          \"type\": \"payment-details\"\n        },\n        \"links\": {\n          \"self\": \"https://imt.sandbox.digital.travelex.net/v2/transfers/3f7ef20c-f285-4346-930c-a6793cd63172/relationships/customerPaymentDetails\",\n          \"related\": \"https://imt.sandbox.digital.travelex.net/v2/transfers/3f7ef20c-f285-4346-930c-a6793cd63172/customerPaymentDetails\"\n        }\n      }\n    },\n    \"links\": {\n      \"self\": \"https://imt.sandbox.digital.travelex.net/v2/transfers/3f7ef20c-f285-4346-930c-a6793cd63172\"\n    }\n  }\n}\n```\n\nOnce we have created the transfer, the payment cycle is automatically initiated by the service.\n\nA first thing an application might do is to retrieve a newly created transfer by Id and include the quote information, for example in order to display the FX amounts, rates, and fees to the customer as part of a transfer summary.\n\n#### `GET` Get transfer\n\n```curl\nGET /transfers/{transferId}?include=quote{url}/transfers\n```\n\nNote that `include` is used to include the quote details and represent the quote Id by its URL, which appears as the `self` link in the `Relationships` `links` structure of the returned `transfers` object:\n\n```curl\n  \"links\": {\n      \"self\": \"https://imt.sandbox.digital.travelex.net/v2/transfers/3f7ef20c-f285-4346-930c-a6793cd63172\"\n    }\n```\n\n##### Request\n\n```curl\ncurl --request GET \\\n  --url 'http://EXAMPLE_URL/transfers/TRANSFER_ID?include=quote' \\\n  --header 'Authorization: SESSION_TOKEN' \\\n  --header 'X-Auth: xAuth'\n```\n\nReplace the strings in the code above as indicated with:\n\n+ `url` The base path of the API version you are using e.g. for API v2 `https://imt.sandbox.digital.travelex.net/v2`\n\n+ `Authorization` The session token returned by `login`\n\n##### Response\n\n201 if successful.\n\nThe quote data is included in the result body in the `included` section:\n\n```curl\n \"included\": [\n    {\n      \"id\": \"2c2c2719-dcb5-4093-a3e4-5b9d58d48963\",\n      \"type\": \"quotes\",\n      \"attributes\": {\n        \"amountType\": \"SEND\",\n        \"amount\": \"1000.00\",\n        \"receiveCurrencyCode\": \"GBP\",\n        \"methods\": [\n          {\n            \"paymentMethod\": \"ACH\",\n            \"deliveryMethods\": [\n              \"LOCAL\",\n              \"SWIFT\"\n            ]\n          },\n          {\n            \"paymentMethod\": \"BANK_TRANSFER\",\n            \"deliveryMethods\": [\n              \"LOCAL\",\n              \"CASH\",\n              \"SWIFT\"\n            ]\n          }\n        ],\n    ...\n    }\n}\n```\n\nAfter completing a transfer, an application can also use the [Hooks](/#reference/hooks) endpoint to track the progress of the transfer and to report eventual success or failure to the user.\n\n# Bank Account Mock Data\n\nThe conventions for identifying bank accounts vary quite widely across countries, with different local conventions for the terminology used and the data required.\nThe table below provides useful bank account data for more than twenty five countries around the world in which Travelex operates, including the Americas, Europe, Oceana, Africa and Asia, and the Middle and Far East.\n\nOne of the most common reasons for a transfer to fail is providing incorrect bank details either at the sending or receiving end.\n\nThe data below lists bank account details in the local format expected, sorted by country, which you can use in the sandbox to create mock transactions and test all aspects of your payments workflows, including:\n\n+ Verifying bank information using [Required Details](/#reference/required-details) regex parsers and format rules\n\n+ Creating new linked [Bank Accounts](/#reference/payment-details/bank-accounts) payment details for customers and beneficiaries\n\n+ Retrieving, selecting, and deleting linked Bank Accounts\n\n+ Creating and initiating [Transfers](/#reference/transfers/transfers) for any chosen corridor\n\n+ Tracking transfer states using [Hooks](/#reference/hooks/hooks)\n\n> While these are real bank accounts they will not complete live transactions, but can be used to create end-to-end mock transfers in the sandbox.\n\n| Country | Required bank details | Data |\n|:--------|:----------------------|------|\n| Australia | BSB Code | 083051 |\n|| BIC / SWIFT Code | NATAAU33 |\n|| Account Number | 586249962 |\n| Austria | IBAN | AT483200000012345864 |\n| Belgium | IBAN | BE71096123456769 |\n| Canada | Institution Number / Transit Code | 003 / 01372 |\n|| Account Number | 00562475123 |\n| China | BIC / SWIFT Code | ABOCCNBJ010 |\n|| Account Number | 28282828 |\n| France | IBAN | FR1420041010050500013M02606 |\n| Germany | IBAN | DE89370400440532013000 |\n| India | IFSC Code/ Account Type | SBIN0000058 |\n|| Account Number | 00470330000063 |\n| Italy | IBAN | IT60X0542811101000000123456 |\n| Japan | BIC / SWIFT Code | SMBCJPJT |\n|| Account Number | 2000252748 |\n| Kenya | BIC / SWIFT Code | KCBLKENX |\n| Lebanon | IBAN | LB55012300012313542646346437 |\n| Mexico | Account Number | 032180000118359719 |\n| Netherlands | IBAN | NL91ABNA0417164300 |\n| New Zealand | BIC / SWIFT Code | BKNZNZ22 |\n|| Account Number | 020108029186610 |\n| Peru | BIC / SWIFT Code | BSUDPEPL |\n|| Account Number | 1234567890123456 |\n| Phillipines | BIC / SWIFT Code | BKKBPHMM |\n|| Account Number | 992287398 |\n| Portugal | IBAN | PT50002700000001234567833 |\n| Singapore | BIC / SWIFT Code | DBSSSGSG |\n|| Account Number | 0039398027 |\n| South Africa | BIC / SWIFT Code | SBZAZAJJ |\n|| Account Number | 7551993 |\n| Spain | IBAN | ES9121000418450200051332 |\n| Sweden | IBAN | SE4550000000058398257466 |\n| Switzerland | IBAN | CH78005540A1024502601 |\n| Turkey | IBAN | TR300004600233888001242354 |\n| UAE | IBAN | AE460090000000123456789 |\n| United Kingdom | IBAN | GB21HBUK40421201705415 |\n|| Bank Sort Code | 404212 |\n|| Account Number | 01705415 |\n| Vietnam | BIC / SWIFT Code | ANZBVNVX472 |\n|| Account Number | 839276927 |\n\n# Glossary\n\n| Abbreviation or term | Meaning | Description |\n|:-------------|:--------|:------------|\n| <a name=\"ach\"/> ACH | (Local) Automated Clearing House | A network that coordinates electronic payments and automated money transfers. ACH is a way to move money between banks without using paper cheques, wire transfers, credit card networks, or cash |\n| <a name=\"bic\"/> BIC | Banking Identifier Code | 8- or 11-digits that encode Country, City, Bank identifier, and (11-digit version) Branch. Also known as the bank Clearing Code |\n| <a name=\"iso-country\"/> Country code | ISO Country Code | International standard country identifier code, a two letter code that identifies a country, for example the United Kingdom is denoted GB |\n| <a name=\"cross-border\"/>Cross-border payment | Cross-border payment or IMT| A transaction in which a customer in one country transfers money to a beneficiary in another country by making a foreign exchange (FX) transaction using a bank or service, for example Travelex IMT services |\n| <a name=\"iso-currency\"/>Currency code | ISO Currency Code | International standard currency identifier code, adds a letter e.g. \"D\" for Dollar to an ISO Country Code to identify the currency for that country, for example the Hong Kong Dollar is denoted HKD |\n| <a name=\"fx\"/> FX  | Foreign Exchange | Converting money between currencies, it should be assumed that conversion is made at a given rate |\n| <a name=\"iban\"/> IBAN | International Bank Account Number | Standard format Account and branch Sort Code adopted in most countries, especially the Eurozone, for use in cross border payments |\n| <a name=\"imt\"/> IMT | International Money Transfer | International transfersalso known as cross-border payments |\n| <a name=\"kyc\"/> KYC | Know Your Customer/Client | Know Your Customer is an anti- money laundering requirement made on financial institutions to formally verify customer identity and to understand the purpose and expected volumes and jurisdictions of a customer's financial trading activity |\n| <a name=\"quote\"/> Quote | An FX quote | A quote for foreign exchange  made by a broker or seller to a customer. A quote may be a rate quote or a complete quote for a transaction including transaction fees |\n| <a name=\"rate\"/> Rate | Exchange rate | The value of one currency expressed in the value of a different currency, which in effect is the price of one currency expressed in terms of another excluding any transaction fees |\n| <a name=\"swift\"/> SWIFT | Society for Worldwide Interbank Financial Telecommunication | Same as BIC |"
    },
    "host": "imt.sandbox.digital.travelex.net",
    "basePath": "/v2",
    "schemes": [
        "https"
    ],
    "paths": {
        "/login": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": {
                                    "id": "b229e9b0-48fh-4446-9966-71008cdfbbea",
                                    "type": "login",
                                    "attributes": {
                                        "username": "user@travelex.com",
                                        "password": "******",
                                        "sessionToken": "Y3NjLXRlc3RzOmlhNHVWMU",
                                        "audit": {
                                            "createdAt": "2018-08-18T12:00:00.000Z",
                                            "createdBy": "Travelex"
                                        }
                                    },
                                    "links": {
                                        "self": "http://localhost:8082/api/login/b229e9b0-48fh-4446-9966-71008cdfbbea"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "username": {
                                                    "type": "string"
                                                },
                                                "password": {
                                                    "type": "string"
                                                },
                                                "sessionToken": {
                                                    "type": "string",
                                                    "description": "The session token to be used as Authorization header"
                                                },
                                                "loginDate": {
                                                    "type": "string",
                                                    "description": "The date when the user logged in"
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        }
                    }
                },
                "summary": "Login",
                "description": "",
                "tags": [
                    "Authentication"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "username": {
                                                    "type": "string",
                                                    "description": "The user being logged in"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "description": "The password for the user"
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            },
                            "example": {
                                "data": {
                                    "type": "login",
                                    "attributes": {
                                        "username": "user@travelex.com",
                                        "password": "password"
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/beneficiaries/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": {
                                    "id": "2233efab-000a-439b-85cc-2b26d607615d",
                                    "type": "beneficiaries",
                                    "attributes": {
                                        "countryCode": "GB",
                                        "audit": {
                                            "createdAt": "2018-08-18T12:00:00.000Z",
                                            "createdBy": "Travelex"
                                        },
                                        "name": "Josh Smith",
                                        "externalId": null,
                                        "subType": "individual",
                                        "partnerId": "US-WBK-20180404-1-2",
                                        "partyType": "BENEFICIARY"
                                    },
                                    "relationships": {
                                        "owner": {
                                            "links": {
                                                "self": "http://localhost:8082/api/beneficiaries/2233efab-000a-439b-85cc-2b26d607615d/relationships/owner",
                                                "related": "http://localhost:8082/api/beneficiaries/2233efab-000a-439b-85cc-2b26d607615d/owner"
                                            }
                                        },
                                        "addresses": {
                                            "links": {
                                                "self": "http://localhost:8082/api/beneficiaries/2233efab-000a-439b-85cc-2b26d607615d/relationships/addresses",
                                                "related": "http://localhost:8082/api/beneficiaries/2233efab-000a-439b-85cc-2b26d607615d/addresses"
                                            }
                                        },
                                        "notes": {
                                            "links": {
                                                "self": "http://localhost:8082/api/beneficiaries/2233efab-000a-439b-85cc-2b26d607615d/relationships/notes",
                                                "related": "http://localhost:8082/api/beneficiaries/2233efab-000a-439b-85cc-2b26d607615d/notes"
                                            }
                                        },
                                        "paymentDetails": {
                                            "links": {
                                                "self": "http://localhost:8082/api/beneficiaries/2233efab-000a-439b-85cc-2b26d607615d/relationships/paymentDetails",
                                                "related": "http://localhost:8082/api/beneficiaries/2233efab-000a-439b-85cc-2b26d607615d/paymentDetails"
                                            }
                                        }
                                    },
                                    "links": {
                                        "furtherInformation": "http://localhost:8082/api/individual-beneficiary/2233efab-000a-439b-85cc-2b26d607615d",
                                        "self": "http://localhost:8082/api/beneficiaries/2233efab-000a-439b-85cc-2b26d607615d"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which the beneficiary is receiving funds."
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "description": "The first name of the customer."
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "description": "The last name of the customer."
                                                },
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "houseNumber": {
                                                            "type": "string"
                                                        },
                                                        "street1": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "postalCode": {
                                                            "type": "string"
                                                        },
                                                        "countryCode": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "houseNumber",
                                                        "street1",
                                                        "city",
                                                        "postalCode",
                                                        "countryCode"
                                                    ],
                                                    "description": "The residential address of the beneficiary (this may be in a different country)."
                                                },
                                                "email": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "An email address for the customer."
                                                },
                                                "nationalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "An ID for customer in the country that the money is being sent to."
                                                },
                                                "dateOfBirth": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The Date of Birth of the customer in YYYY-MM-DD format"
                                                },
                                                "middleName": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The middle name of the customer."
                                                },
                                                "audit": {
                                                    "type": "object",
                                                    "properties": {
                                                        "createdAt": {
                                                            "type": "string",
                                                            "description": "When this resource was created."
                                                        },
                                                        "createdBy": {
                                                            "type": "string",
                                                            "description": "Which user created this resource."
                                                        }
                                                    },
                                                    "required": [
                                                        "createdAt",
                                                        "createdBy"
                                                    ],
                                                    "description": "Audit details for this resource"
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID this resource was created against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID this resource was created with"
                                                }
                                            }
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "owner": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                },
                                                "addresses": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                },
                                                "paymentDetails": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "owner",
                                                "addresses",
                                                "paymentDetails"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes",
                                        "relationships"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Get beneficiary",
                "description": "",
                "tags": [
                    "Beneficiaries"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Beneficiary ID (`id`)",
                        "required": true,
                        "x-example": "2233efab-000a-439b-85cc-2b26d607615d",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Delete beneficiary",
                "description": "",
                "tags": [
                    "Beneficiaries"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Beneficiary ID (`id`)",
                        "required": true,
                        "x-example": "2233efab-000a-439b-85cc-2b26d607615d",
                        "type": "string"
                    }
                ]
            }
        },
        "/individual-beneficiaries": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": {
                                    "id": "74b94eb2-f414-4d8d-b193-301f0f111cd9",
                                    "type": "individual-beneficiaries",
                                    "attributes": {
                                        "lastName": "Smith",
                                        "externalId": null,
                                        "dateOfBirth": null,
                                        "partyType": "BENEFICIARY",
                                        "firstName": "Josh",
                                        "phoneNumber": null,
                                        "nationalId": null,
                                        "countryCode": "GB",
                                        "audit": {
                                            "createdAt": "2018-08-18T12:00:00.000Z",
                                            "createdBy": "Travelex"
                                        },
                                        "name": "Josh Smith",
                                        "middleName": null,
                                        "subType": "individual",
                                        "partnerId": "US-WBK-20180404-1-2",
                                        "email": null
                                    },
                                    "relationships": {
                                        "owner": {
                                            "data": {
                                                "id": "c168209c-f00e-4cdf-8a5b-23f4f081d7c7",
                                                "type": "parties"
                                            },
                                            "links": {
                                                "self": "http://localhost:8082/api/individual-beneficiaries/74b94eb2-f414-4d8d-b193-301f0f111cd9/relationships/owner",
                                                "related": "http://localhost:8082/api/individual-beneficiaries/74b94eb2-f414-4d8d-b193-301f0f111cd9/owner"
                                            }
                                        },
                                        "addresses": {
                                            "links": {
                                                "self": "http://localhost:8082/api/individual-beneficiaries/74b94eb2-f414-4d8d-b193-301f0f111cd9/relationships/addresses",
                                                "related": "http://localhost:8082/api/individual-beneficiaries/74b94eb2-f414-4d8d-b193-301f0f111cd9/addresses"
                                            }
                                        },
                                        "notes": {
                                            "links": {
                                                "self": "http://localhost:8082/api/individual-beneficiaries/74b94eb2-f414-4d8d-b193-301f0f111cd9/relationships/notes",
                                                "related": "http://localhost:8082/api/individual-beneficiaries/74b94eb2-f414-4d8d-b193-301f0f111cd9/notes"
                                            }
                                        },
                                        "paymentDetails": {
                                            "data": [
                                                {
                                                    "id": "d2125e58-8151-4ed4-8187-74c97a262038",
                                                    "type": "payment-details"
                                                }
                                            ],
                                            "links": {
                                                "self": "http://localhost:8082/api/individual-beneficiaries/74b94eb2-f414-4d8d-b193-301f0f111cd9/relationships/paymentDetails",
                                                "related": "http://localhost:8082/api/individual-beneficiaries/74b94eb2-f414-4d8d-b193-301f0f111cd9/paymentDetails"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which the beneficiary is receiving funds."
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "description": "The first name of the customer."
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "description": "The last name of the customer."
                                                },
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "houseNumber": {
                                                            "type": "string"
                                                        },
                                                        "street1": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "postalCode": {
                                                            "type": "string"
                                                        },
                                                        "countryCode": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "houseNumber",
                                                        "street1",
                                                        "city",
                                                        "postalCode",
                                                        "countryCode"
                                                    ],
                                                    "description": "The residential address of the beneficiary (this may be in a different country)."
                                                },
                                                "email": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "An email address for the customer."
                                                },
                                                "nationalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "An ID for customer in the country that the money is being sent to."
                                                },
                                                "dateOfBirth": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The Date of Birth of the customer in YYYY-MM-DD format"
                                                },
                                                "middleName": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The middle name of the customer."
                                                },
                                                "audit": {
                                                    "type": "object",
                                                    "properties": {
                                                        "createdAt": {
                                                            "type": "string",
                                                            "description": "When this resource was created."
                                                        },
                                                        "createdBy": {
                                                            "type": "string",
                                                            "description": "Which user created this resource."
                                                        }
                                                    },
                                                    "required": [
                                                        "createdAt",
                                                        "createdBy"
                                                    ],
                                                    "description": "Audit details for this resource"
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID this resource was created against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID this resource was created with"
                                                }
                                            }
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "owner": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                },
                                                "addresses": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                },
                                                "paymentDetails": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "owner",
                                                "addresses",
                                                "paymentDetails"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes",
                                        "relationships"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Create individual beneficiary",
                "description": "",
                "tags": [
                    "Beneficiaries"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "countryCode": {
                                                        "type": "string",
                                                        "description": "The country code of the beneficiary."
                                                    },
                                                    "firstName": {
                                                        "type": "string",
                                                        "description": "The first name of the beneficiary."
                                                    },
                                                    "lastName": {
                                                        "type": "string",
                                                        "description": "The last name of the beneficiary."
                                                    },
                                                    "address": {
                                                        "type": "object",
                                                        "properties": {
                                                            "houseNumber": {
                                                                "type": "string"
                                                            },
                                                            "street1": {
                                                                "type": "string"
                                                            },
                                                            "city": {
                                                                "type": "string"
                                                            },
                                                            "state": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "postalCode": {
                                                                "type": "string"
                                                            },
                                                            "countryCode": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "houseNumber",
                                                            "street1",
                                                            "city",
                                                            "postalCode",
                                                            "countryCode"
                                                        ],
                                                        "description": "The residential address of the beneficiary (this may be in a different country)."
                                                    },
                                                    "email": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "An email for the beneficiary."
                                                    },
                                                    "nationalId": {
                                                        "type": "string",
                                                        "description": "An ID for the beneficiary in the country that the money is being sent to."
                                                    },
                                                    "dateOfBirth": {
                                                        "type": "string",
                                                        "description": "The Date of Birth of the customer in YYYY-MM-DD format"
                                                    },
                                                    "middleName": {
                                                        "type": "string",
                                                        "description": "The middle name of the customer."
                                                    },
                                                    "partnerId": {
                                                        "type": "string",
                                                        "description": "The partner ID to create this resource against"
                                                    },
                                                    "externalId": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "The external ID to add to this resource"
                                                    }
                                                }
                                            },
                                            "relationships": {
                                                "type": "object",
                                                "properties": {
                                                    "owner": {
                                                        "type": "object",
                                                        "properties": {
                                                            "links": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "self": {
                                                                        "type": "string"
                                                                    },
                                                                    "related": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "self",
                                                                    "related"
                                                                ]
                                                            }
                                                        },
                                                        "required": [
                                                            "links"
                                                        ]
                                                    },
                                                    "addresses": {
                                                        "type": "object",
                                                        "properties": {
                                                            "links": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "self": {
                                                                        "type": "string"
                                                                    },
                                                                    "related": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "self",
                                                                    "related"
                                                                ]
                                                            }
                                                        },
                                                        "required": [
                                                            "links"
                                                        ]
                                                    },
                                                    "paymentDetails": {
                                                        "type": "object",
                                                        "properties": {
                                                            "links": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "self": {
                                                                        "type": "string"
                                                                    },
                                                                    "related": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "self",
                                                                    "related"
                                                                ]
                                                            }
                                                        },
                                                        "required": [
                                                            "links"
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "owner",
                                                    "addresses",
                                                    "paymentDetails"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "attributes",
                                            "relationships"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ],
                            "example": {
                                "data": {
                                    "type": "individual-beneficiaries",
                                    "attributes": {
                                        "countryCode": "GB",
                                        "lastName": "Smith",
                                        "firstName": "John"
                                    },
                                    "relationships": {
                                        "paymentDetails": {
                                            "data": {
                                                "type": "bank-accounts",
                                                "id": "d2125e58-8151-4ed4-8187-74c97a262038"
                                            }
                                        },
                                        "owner": {
                                            "data": {
                                                "type": "customers",
                                                "id": "c168209c-f00e-4cdf-8a5b-23f4f081d7c7"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/company-beneficiaries": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": {
                                    "id": "60fa334a-7be1-433f-88c9-7d5291653ffd",
                                    "type": "company-beneficiaries",
                                    "attributes": {
                                        "tradingName": "Travelex UK",
                                        "phoneNumber": "123456789",
                                        "registrationNumber": "regoNum",
                                        "countryCode": "GB",
                                        "audit": {
                                            "createdAt": "2018-08-18T12:00:00.000Z",
                                            "createdBy": "Travelex"
                                        },
                                        "name": "Travelex Ltd",
                                        "externalId": null,
                                        "subType": "company",
                                        "partnerId": "US-WBK-20180404-1-2",
                                        "officialName": "Travelex Ltd",
                                        "partyType": "BENEFICIARY",
                                        "email": "email@email.com"
                                    },
                                    "relationships": {
                                        "owner": {
                                            "data": {
                                                "id": "91b551c3-b78f-458a-a786-ed2dd3c73725",
                                                "type": "parties"
                                            },
                                            "links": {
                                                "self": "http://localhost:8082/api/company-beneficiaries/60fa334a-7be1-433f-88c9-7d5291653ffd/relationships/owner",
                                                "related": "http://localhost:8082/api/company-beneficiaries/60fa334a-7be1-433f-88c9-7d5291653ffd/owner"
                                            }
                                        },
                                        "addresses": {
                                            "links": {
                                                "self": "http://localhost:8082/api/company-beneficiaries/60fa334a-7be1-433f-88c9-7d5291653ffd/relationships/addresses",
                                                "related": "http://localhost:8082/api/company-beneficiaries/60fa334a-7be1-433f-88c9-7d5291653ffd/addresses"
                                            }
                                        },
                                        "notes": {
                                            "links": {
                                                "self": "http://localhost:8082/api/company-beneficiaries/60fa334a-7be1-433f-88c9-7d5291653ffd/relationships/notes",
                                                "related": "http://localhost:8082/api/company-beneficiaries/60fa334a-7be1-433f-88c9-7d5291653ffd/notes"
                                            }
                                        },
                                        "paymentDetails": {
                                            "data": [
                                                {
                                                    "id": "489af9e4-7e97-4f3b-a7a4-2a79307bf57d",
                                                    "type": "payment-details"
                                                }
                                            ],
                                            "links": {
                                                "self": "http://localhost:8082/api/company-beneficiaries/60fa334a-7be1-433f-88c9-7d5291653ffd/relationships/paymentDetails",
                                                "related": "http://localhost:8082/api/company-beneficiaries/60fa334a-7be1-433f-88c9-7d5291653ffd/paymentDetails"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which this beneficiary is receiving the money."
                                                },
                                                "officialName": {
                                                    "type": "string",
                                                    "description": "The legal name of the entity that appears on all official documents or legal papers"
                                                },
                                                "tradingName": {
                                                    "type": "string",
                                                    "description": "Any other name the ordering company is commonly known by or trades under"
                                                },
                                                "registrationNumber": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "A tax or company registration number"
                                                },
                                                "email": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Email address of the company"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "description": "Phone number of the company including country code"
                                                },
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "houseNumber": {
                                                            "type": "string"
                                                        },
                                                        "street1": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "postalCode": {
                                                            "type": "string"
                                                        },
                                                        "countryCode": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "houseNumber",
                                                        "street1",
                                                        "city",
                                                        "postalCode",
                                                        "countryCode"
                                                    ],
                                                    "description": "Address of the company"
                                                },
                                                "`enoughDetailsFor` array[string]": {
                                                    "type": "string",
                                                    "description": "The delivery methods for which this company has enough details to create a transfer."
                                                },
                                                "audit": {
                                                    "type": "object",
                                                    "properties": {
                                                        "createdAt": {
                                                            "type": "string",
                                                            "description": "When this resource was created."
                                                        },
                                                        "createdBy": {
                                                            "type": "string",
                                                            "description": "Which user created this resource."
                                                        }
                                                    },
                                                    "required": [
                                                        "createdAt",
                                                        "createdBy"
                                                    ],
                                                    "description": "Audit details for this resource"
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID this resource was created against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID this resource was created with"
                                                }
                                            },
                                            "required": [
                                                "countryCode",
                                                "officialName",
                                                "tradingName"
                                            ]
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "paymentDetails": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "paymentDetails"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Create company beneficiary",
                "description": "",
                "tags": [
                    "Beneficiaries"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which this beneficiary is receiving the money."
                                                },
                                                "officialName": {
                                                    "type": "string",
                                                    "description": "The legal name of the entity that appears on all official documents or legal papers"
                                                },
                                                "tradingName": {
                                                    "type": "string",
                                                    "description": "Any other name the ordering company is commonly known by or trades under"
                                                },
                                                "registrationNumber": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "A tax or company registration number"
                                                },
                                                "email": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Email address of the company"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "description": "Phone number of the company including country code"
                                                },
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "houseNumber": {
                                                            "type": "string"
                                                        },
                                                        "street1": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "postalCode": {
                                                            "type": "string"
                                                        },
                                                        "countryCode": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "houseNumber",
                                                        "street1",
                                                        "city",
                                                        "postalCode",
                                                        "countryCode"
                                                    ],
                                                    "description": "Address of the company"
                                                },
                                                "`enoughDetailsFor` array[string]": {
                                                    "type": "string",
                                                    "description": "The delivery methods for which this company has enough details to create a transfer."
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID to create this resource against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID to add to this resource"
                                                }
                                            },
                                            "required": [
                                                "countryCode",
                                                "officialName",
                                                "tradingName"
                                            ]
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "owner": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                },
                                                "addresses": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                },
                                                "paymentDetails": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "owner",
                                                "addresses",
                                                "paymentDetails"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes",
                                        "relationships"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ],
                            "example": {
                                "data": {
                                    "type": "company-beneficiaries",
                                    "attributes": {
                                        "countryCode": "GB",
                                        "officialName": "Travelex Ltd",
                                        "tradingName": "Travelex UK",
                                        "registrationNumber": "regoNum",
                                        "email": "email@email.com",
                                        "phoneNumber": "123456789"
                                    },
                                    "relationships": {
                                        "paymentDetails": {
                                            "data": {
                                                "type": "bank-accounts",
                                                "id": "489af9e4-7e97-4f3b-a7a4-2a79307bf57d"
                                            }
                                        },
                                        "owner": {
                                            "data": {
                                                "type": "customers",
                                                "id": "91b551c3-b78f-458a-a786-ed2dd3c73725"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/corridors": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": [
                                    {
                                        "id": "USUSDMUMURSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "MUR",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "MU",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDMUMURSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDMUMURSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDMUMURSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDMUMURSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDMUMURSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDSKUSDSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "USD",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "SK",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDSKUSDSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDSKUSDSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDSKUSDSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDSKUSDSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDSKUSDSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDPLPLNSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "PLN",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "PL",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDPLPLNSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDPLPLNSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDPLPLNSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDPLPLNSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDPLPLNSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDRWUSDSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "USD",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "RW",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDRWUSDSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDRWUSDSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDRWUSDSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDRWUSDSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDRWUSDSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDUYUSDSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "USD",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "UY",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDUYUSDSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDUYUSDSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDUYUSDSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDUYUSDSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDUYUSDSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDUAEURSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "EUR",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "UA",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDUAEURSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDUAEURSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDUAEURSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDUAEURSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDUAEURSWIFT"
                                        }
                                    },
                                    {
                                        "id": "AUAUDIEEURSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "EUR",
                                            "sendCurrencyCode": "AUD",
                                            "receiveCountryCode": "IE",
                                            "sendCountryCode": "AU",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/AUAUDIEEURSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/AUAUDIEEURSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/AUAUDIEEURSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/AUAUDIEEURSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/AUAUDIEEURSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDAOUSDSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "USD",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "AO",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDAOUSDSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDAOUSDSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDAOUSDSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDAOUSDSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDAOUSDSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDTHTHBSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "THB",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "TH",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDTHTHBSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDTHTHBSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDTHTHBSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDTHTHBSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDTHTHBSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDGSUSDSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "USD",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "GS",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDGSUSDSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDGSUSDSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDGSUSDSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDGSUSDSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDGSUSDSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDVNVNDSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "VND",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "VN",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDVNVNDSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDVNVNDSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDVNVNDSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDVNVNDSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDVNVNDSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDLSUSDSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "USD",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "LS",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDLSUSDSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDLSUSDSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDLSUSDSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDLSUSDSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDLSUSDSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDBVUSDSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "USD",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "BV",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDBVUSDSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDBVUSDSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDBVUSDSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDBVUSDSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDBVUSDSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDIQUSDSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "USD",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "IQ",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDIQUSDSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDIQUSDSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDIQUSDSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDIQUSDSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDIQUSDSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDTRUSDSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "USD",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "TR",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDTRUSDSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDTRUSDSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDTRUSDSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDTRUSDSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDTRUSDSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDGNEURSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "EUR",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "GN",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDGNEURSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDGNEURSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDGNEURSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDGNEURSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDGNEURSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDCHEURSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "EUR",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "CH",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDCHEURSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDCHEURSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDCHEURSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDCHEURSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDCHEURSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDESEURSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "EUR",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "ES",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDESEURSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDESEURSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDESEURSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDESEURSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDESEURSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDGGGBPSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "GBP",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "GG",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDGGGBPSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDGGGBPSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDGGGBPSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDGGGBPSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDGGGBPSWIFT"
                                        }
                                    },
                                    {
                                        "id": "USUSDCMUSDSWIFT",
                                        "type": "corridors",
                                        "attributes": {
                                            "receiveCurrencyCode": "USD",
                                            "sendCurrencyCode": "USD",
                                            "receiveCountryCode": "CM",
                                            "sendCountryCode": "US",
                                            "minSendAmount": "50",
                                            "maxSendAmount": "1000000"
                                        },
                                        "relationships": {
                                            "sendCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDCMUSDSWIFT/relationships/sendCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDCMUSDSWIFT/sendCurrencyCodeDetails"
                                                }
                                            },
                                            "receiveCurrencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/corridors/USUSDCMUSDSWIFT/relationships/receiveCurrencyCodeDetails",
                                                    "related": "http://localhost:8082/api/corridors/USUSDCMUSDSWIFT/receiveCurrencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/corridors/USUSDCMUSDSWIFT"
                                        }
                                    }
                                ],
                                "links": {
                                    "first": "http://localhost:8082/api/corridors?page[limit]=20",
                                    "last": "http://localhost:8082/api/corridors?page[limit]=20&page[offset]=540",
                                    "next": "http://localhost:8082/api/corridors?page[limit]=20&page[offset]=20"
                                },
                                "meta": {
                                    "totalResourceCount": 558
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "sendCountryCode": {
                                                        "type": "string",
                                                        "description": "The country from which the transfer is originating."
                                                    },
                                                    "sendCurrencyCode": {
                                                        "type": "string",
                                                        "description": "The currency of the payment details being used to fund the transfer."
                                                    },
                                                    "receiveCountryCode": {
                                                        "type": "string",
                                                        "description": "The country that the currency is being received in."
                                                    },
                                                    "receiveCurrencyCode": {
                                                        "type": "string",
                                                        "description": "The currency of the payment details receiving the money."
                                                    },
                                                    "minSendAmount": {
                                                        "type": "string",
                                                        "description": "The minimum amount in the send currency which can be sent through this corridor."
                                                    },
                                                    "maxSendAmount": {
                                                        "type": "string",
                                                        "description": "The maximum amount in the send currency which can be sent through this corridor."
                                                    }
                                                },
                                                "required": [
                                                    "sendCountryCode",
                                                    "sendCurrencyCode",
                                                    "receiveCountryCode",
                                                    "receiveCurrencyCode",
                                                    "minSendAmount",
                                                    "maxSendAmount"
                                                ]
                                            },
                                            "relationships": {
                                                "type": "object",
                                                "properties": {
                                                    "sendCurrencyCodeDetails": {
                                                        "type": "object",
                                                        "properties": {},
                                                        "description": "More information about the sendCurrencyCode."
                                                    },
                                                    "receiveCurrencyCodeDetails": {
                                                        "type": "object",
                                                        "properties": {},
                                                        "description": "More information about the receiveCurrencyCode."
                                                    }
                                                },
                                                "required": [
                                                    "sendCurrencyCodeDetails",
                                                    "receiveCurrencyCodeDetails"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "attributes",
                                            "relationships"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Get Corridors",
                "description": "",
                "tags": [
                    "Corridors"
                ],
                "parameters": [],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/currencies": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": [
                                    {
                                        "id": "MXN",
                                        "type": "currencies",
                                        "attributes": {
                                            "decimalPlaces": 2,
                                            "name": "Mexican Peso"
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/currencies/MXN"
                                        }
                                    },
                                    {
                                        "id": "BBD",
                                        "type": "currencies",
                                        "attributes": {
                                            "decimalPlaces": 2,
                                            "name": "Barbadian Dollar"
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/currencies/BBD"
                                        }
                                    },
                                    {
                                        "id": "UGX",
                                        "type": "currencies",
                                        "attributes": {
                                            "decimalPlaces": 0,
                                            "name": "Ugandan Shilling"
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/currencies/UGX"
                                        }
                                    },
                                    {
                                        "id": "ZAR",
                                        "type": "currencies",
                                        "attributes": {
                                            "decimalPlaces": 2,
                                            "name": "South African Rand"
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/currencies/ZAR"
                                        }
                                    },
                                    {
                                        "id": "BSD",
                                        "type": "currencies",
                                        "attributes": {
                                            "decimalPlaces": 2,
                                            "name": "Bahamian Dollar"
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/currencies/BSD"
                                        }
                                    },
                                    {
                                        "id": "TWD",
                                        "type": "currencies",
                                        "attributes": {
                                            "decimalPlaces": 2,
                                            "name": "New Taiwan Dollar"
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/currencies/TWD"
                                        }
                                    }
                                ],
                                "links": {
                                    "first": "http://localhost:8082/api/currencies?page[limit]=20",
                                    "last": "http://localhost:8082/api/currencies?page[limit]=20&page[offset]=220",
                                    "next": "http://localhost:8082/api/currencies?page[limit]=20&page[offset]=20"
                                },
                                "meta": {
                                    "totalResourceCount": 225
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "decimalPlaces": {
                                                        "type": "number",
                                                        "description": "The exponent of the minor currency unit."
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "description": "The full name of the currency."
                                                    }
                                                },
                                                "required": [
                                                    "decimalPlaces",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "attributes"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Get Currencies",
                "description": "",
                "tags": [
                    "Currencies"
                ],
                "parameters": [],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/individual-customers": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": {
                                    "id": "04e05408-3a10-46a3-b28f-6d04193e233d",
                                    "type": "individual-customers",
                                    "attributes": {
                                        "lastName": "Smith",
                                        "externalId": null,
                                        "dateOfBirth": "1985-01-15",
                                        "partyType": "CUSTOMER",
                                        "firstName": "John",
                                        "phoneNumber": "+447123456789",
                                        "nationalId": null,
                                        "countryCode": "US",
                                        "audit": {
                                            "createdAt": "2018-08-18T12:00:00.000Z",
                                            "createdBy": "Travelex"
                                        },
                                        "termsAndConditionsConsent": true,
                                        "name": "John Smith",
                                        "middleName": null,
                                        "subType": "individual",
                                        "partnerId": "US-WBK-20180404-1-2",
                                        "email": null
                                    },
                                    "relationships": {
                                        "addresses": {
                                            "links": {
                                                "self": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/relationships/addresses",
                                                "related": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/addresses"
                                            }
                                        },
                                        "notes": {
                                            "links": {
                                                "self": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/relationships/notes",
                                                "related": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/notes"
                                            }
                                        },
                                        "transfers": {
                                            "links": {
                                                "self": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/relationships/transfers",
                                                "related": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/transfers"
                                            }
                                        },
                                        "paymentDetails": {
                                            "links": {
                                                "self": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/relationships/paymentDetails",
                                                "related": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/paymentDetails"
                                            }
                                        },
                                        "beneficiaries": {
                                            "links": {
                                                "self": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/relationships/beneficiaries",
                                                "related": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/beneficiaries"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "The UUID we have assigned to this customer"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which this customer is conducting the financial transaction."
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "description": "The first name of the individual."
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "description": "The last name of the individual."
                                                },
                                                "termsAndConditionsConsent": {
                                                    "type": "boolean",
                                                    "description": "Whether or not the individual has agreed to the terms and conditions."
                                                },
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "houseNumber": {
                                                            "type": "string"
                                                        },
                                                        "street1": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "postalCode": {
                                                            "type": "string"
                                                        },
                                                        "countryCode": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "houseNumber",
                                                        "street1",
                                                        "city",
                                                        "postalCode",
                                                        "countryCode"
                                                    ],
                                                    "description": "The residential address of the individual (this may be in a different country)."
                                                },
                                                "email": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "An email for the individual."
                                                },
                                                "nationalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "An ID for individual in the country that the money is being sent from."
                                                },
                                                "dateOfBirth": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The Date of Birth of the individual in YYYY-MM-DD format"
                                                },
                                                "middleName": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The middle name of the individual."
                                                },
                                                "`acceptableDeliveryMethods` array[string]": {
                                                    "type": "string",
                                                    "description": "The delivery methods for which this individual has enough details to create a transfer."
                                                },
                                                "phoneNumber": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The phone number of the individual including country code."
                                                },
                                                "audit": {
                                                    "type": "object",
                                                    "properties": {
                                                        "createdAt": {
                                                            "type": "string",
                                                            "description": "When this resource was created."
                                                        },
                                                        "createdBy": {
                                                            "type": "string",
                                                            "description": "Which user created this resource."
                                                        }
                                                    },
                                                    "required": [
                                                        "createdAt",
                                                        "createdBy"
                                                    ],
                                                    "description": "Audit details for this resource"
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID this resource was created against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID this resource was created with"
                                                }
                                            },
                                            "required": [
                                                "countryCode",
                                                "firstName",
                                                "lastName",
                                                "termsAndConditionsConsent"
                                            ]
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "paymentDetails": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "paymentDetails"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Create individual customer",
                "description": "",
                "tags": [
                    "Customers"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which this customer is conducting the financial transaction."
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "description": "The first name of the individual."
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "description": "The last name of the individual."
                                                },
                                                "termsAndConditionsConsent": {
                                                    "type": "boolean",
                                                    "description": "Whether or not the individual has agreed to the terms and conditions."
                                                },
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "houseNumber": {
                                                            "type": "string"
                                                        },
                                                        "street1": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "postalCode": {
                                                            "type": "string"
                                                        },
                                                        "countryCode": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "houseNumber",
                                                        "street1",
                                                        "city",
                                                        "postalCode",
                                                        "countryCode"
                                                    ],
                                                    "description": "The residential address of the individual (this may be in a different country)."
                                                },
                                                "email": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "An email for the individual."
                                                },
                                                "nationalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "An ID for individual in the country that the money is being sent from."
                                                },
                                                "dateOfBirth": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The Date of Birth of the individual in YYYY-MM-DD format"
                                                },
                                                "middleName": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The middle name of the individual."
                                                },
                                                "`acceptableDeliveryMethods` array[string]": {
                                                    "type": "string",
                                                    "description": "The delivery methods for which this individual has enough details to create a transfer."
                                                },
                                                "phoneNumber": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The phone number of the individual including country code."
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID to create this resource against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID to add to this resource"
                                                }
                                            },
                                            "required": [
                                                "countryCode",
                                                "firstName",
                                                "lastName",
                                                "termsAndConditionsConsent"
                                            ]
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "paymentDetails": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "paymentDetails"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ],
                            "example": {
                                "data": {
                                    "type": "individual-customers",
                                    "attributes": {
                                        "countryCode": "US",
                                        "dateOfBirth": "1985-01-15",
                                        "firstName": "John",
                                        "lastName": "Smith",
                                        "phoneNumber": "+447123456789",
                                        "termsAndConditionsConsent": true
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/individual-customers/{id}": {
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": {
                                    "id": "04e05408-3a10-46a3-b28f-6d04193e233d",
                                    "type": "individual-customers",
                                    "attributes": {
                                        "lastName": "Smith",
                                        "externalId": null,
                                        "dateOfBirth": "1985-01-15",
                                        "partyType": "CUSTOMER",
                                        "firstName": "John",
                                        "phoneNumber": "+447123456789",
                                        "nationalId": null,
                                        "countryCode": "US",
                                        "audit": {
                                            "createdAt": "2018-08-18T12:00:00.000Z",
                                            "createdBy": "Travelex"
                                        },
                                        "termsAndConditionsConsent": true,
                                        "name": "John Smith",
                                        "middleName": null,
                                        "subType": "individual",
                                        "partnerId": "US-WBK-20180404-1-2",
                                        "email": null
                                    },
                                    "relationships": {
                                        "addresses": {
                                            "links": {
                                                "self": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/relationships/addresses",
                                                "related": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/addresses"
                                            }
                                        },
                                        "notes": {
                                            "links": {
                                                "self": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/relationships/notes",
                                                "related": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/notes"
                                            }
                                        },
                                        "transfers": {
                                            "links": {
                                                "self": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/relationships/transfers",
                                                "related": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/transfers"
                                            }
                                        },
                                        "paymentDetails": {
                                            "links": {
                                                "self": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/relationships/paymentDetails",
                                                "related": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/paymentDetails"
                                            }
                                        },
                                        "beneficiaries": {
                                            "links": {
                                                "self": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/relationships/beneficiaries",
                                                "related": "http://localhost:8082/api/individual-customers/04e05408-3a10-46a3-b28f-6d04193e233d/beneficiaries"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "The UUID we have assigned to this customer"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which this customer is conducting the financial transaction."
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "description": "The first name of the individual."
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "description": "The last name of the individual."
                                                },
                                                "termsAndConditionsConsent": {
                                                    "type": "boolean",
                                                    "description": "Whether or not the individual has agreed to the terms and conditions."
                                                },
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "houseNumber": {
                                                            "type": "string"
                                                        },
                                                        "street1": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "postalCode": {
                                                            "type": "string"
                                                        },
                                                        "countryCode": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "houseNumber",
                                                        "street1",
                                                        "city",
                                                        "postalCode",
                                                        "countryCode"
                                                    ],
                                                    "description": "The residential address of the individual (this may be in a different country)."
                                                },
                                                "email": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "An email for the individual."
                                                },
                                                "nationalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "An ID for individual in the country that the money is being sent from."
                                                },
                                                "dateOfBirth": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The Date of Birth of the individual in YYYY-MM-DD format"
                                                },
                                                "middleName": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The middle name of the individual."
                                                },
                                                "`acceptableDeliveryMethods` array[string]": {
                                                    "type": "string",
                                                    "description": "The delivery methods for which this individual has enough details to create a transfer."
                                                },
                                                "phoneNumber": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The phone number of the individual including country code."
                                                },
                                                "audit": {
                                                    "type": "object",
                                                    "properties": {
                                                        "createdAt": {
                                                            "type": "string",
                                                            "description": "When this resource was created."
                                                        },
                                                        "createdBy": {
                                                            "type": "string",
                                                            "description": "Which user created this resource."
                                                        }
                                                    },
                                                    "required": [
                                                        "createdAt",
                                                        "createdBy"
                                                    ],
                                                    "description": "Audit details for this resource"
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID this resource was created against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID this resource was created with"
                                                }
                                            },
                                            "required": [
                                                "countryCode",
                                                "firstName",
                                                "lastName",
                                                "termsAndConditionsConsent"
                                            ]
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "paymentDetails": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "paymentDetails"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Update individual customer",
                "description": "",
                "tags": [
                    "Customers"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID (`id`)",
                        "required": true,
                        "x-example": "04e05408-3a10-46a3-b28f-6d04193e233d",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which this customer is conducting the financial transaction."
                                                },
                                                "firstName": {
                                                    "type": "string",
                                                    "description": "The first name of the individual."
                                                },
                                                "lastName": {
                                                    "type": "string",
                                                    "description": "The last name of the individual."
                                                },
                                                "termsAndConditionsConsent": {
                                                    "type": "boolean",
                                                    "description": "Whether or not the individual has agreed to the terms and conditions."
                                                },
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "houseNumber": {
                                                            "type": "string"
                                                        },
                                                        "street1": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "postalCode": {
                                                            "type": "string"
                                                        },
                                                        "countryCode": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "houseNumber",
                                                        "street1",
                                                        "city",
                                                        "postalCode",
                                                        "countryCode"
                                                    ],
                                                    "description": "The residential address of the individual (this may be in a different country)."
                                                },
                                                "email": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "An email for the individual."
                                                },
                                                "nationalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "An ID for individual in the country that the money is being sent from."
                                                },
                                                "dateOfBirth": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The Date of Birth of the individual in YYYY-MM-DD format"
                                                },
                                                "middleName": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The middle name of the individual."
                                                },
                                                "`acceptableDeliveryMethods` array[string]": {
                                                    "type": "string",
                                                    "description": "The delivery methods for which this individual has enough details to create a transfer."
                                                },
                                                "phoneNumber": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The phone number of the individual including country code."
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID to create this resource against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID to add to this resource"
                                                }
                                            },
                                            "required": [
                                                "countryCode",
                                                "firstName",
                                                "lastName",
                                                "termsAndConditionsConsent"
                                            ]
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "paymentDetails": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "paymentDetails"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ],
                            "example": {
                                "data": {
                                    "type": "individual-customers",
                                    "attributes": {
                                        "email": "john@smith.com"
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/company-customers": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": {
                                    "id": "7faa55d4-ce5e-4e74-ad2b-4143b12022c7",
                                    "type": "company-customers",
                                    "attributes": {
                                        "tradingName": "Travelex UK",
                                        "externalId": null,
                                        "officialName": "Travelex Ltd",
                                        "partyType": "CUSTOMER",
                                        "phoneNumber": "123456789",
                                        "registrationNumber": null,
                                        "countryCode": "US",
                                        "audit": {
                                            "createdAt": "2018-08-18T12:00:00.000Z",
                                            "createdBy": "Travelex"
                                        },
                                        "termsAndConditionsConsent": false,
                                        "name": "Travelex Ltd",
                                        "subType": "company",
                                        "partnerId": "US-WBK-20180404-1-2",
                                        "email": null
                                    },
                                    "relationships": {
                                        "addresses": {
                                            "links": {
                                                "self": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/relationships/addresses",
                                                "related": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/addresses"
                                            }
                                        },
                                        "notes": {
                                            "links": {
                                                "self": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/relationships/notes",
                                                "related": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/notes"
                                            }
                                        },
                                        "transfers": {
                                            "links": {
                                                "self": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/relationships/transfers",
                                                "related": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/transfers"
                                            }
                                        },
                                        "paymentDetails": {
                                            "links": {
                                                "self": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/relationships/paymentDetails",
                                                "related": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/paymentDetails"
                                            }
                                        },
                                        "beneficiaries": {
                                            "links": {
                                                "self": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/relationships/beneficiaries",
                                                "related": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/beneficiaries"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which this customer is conducting the financial transaction."
                                                },
                                                "officialName": {
                                                    "type": "string",
                                                    "description": "The legal name of the entity that appears on all official documents or legal papers"
                                                },
                                                "tradingName": {
                                                    "type": "string",
                                                    "description": "Any other name the ordering company is commonly known by or trades under"
                                                },
                                                "registrationNumber": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "A tax or company registration number"
                                                },
                                                "email": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Email address of the company"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "description": "Phone number of the company including country code"
                                                },
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "houseNumber": {
                                                            "type": "string"
                                                        },
                                                        "street1": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "postalCode": {
                                                            "type": "string"
                                                        },
                                                        "countryCode": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "houseNumber",
                                                        "street1",
                                                        "city",
                                                        "postalCode",
                                                        "countryCode"
                                                    ],
                                                    "description": "Address of the company"
                                                },
                                                "`enoughDetailsFor` array[string]": {
                                                    "type": "string",
                                                    "description": "The delivery methods for which this company has enough details to create a transfer."
                                                },
                                                "audit": {
                                                    "type": "object",
                                                    "properties": {
                                                        "createdAt": {
                                                            "type": "string",
                                                            "description": "When this resource was created."
                                                        },
                                                        "createdBy": {
                                                            "type": "string",
                                                            "description": "Which user created this resource."
                                                        }
                                                    },
                                                    "required": [
                                                        "createdAt",
                                                        "createdBy"
                                                    ],
                                                    "description": "Audit details for this resource"
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID this resource was created against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID this resource was created with"
                                                }
                                            },
                                            "required": [
                                                "countryCode",
                                                "officialName",
                                                "tradingName"
                                            ]
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "paymentDetails": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "paymentDetails"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Create company customer",
                "description": "",
                "tags": [
                    "Customers"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which this customer is conducting the financial transaction."
                                                },
                                                "officialName": {
                                                    "type": "string",
                                                    "description": "The legal name of the entity that appears on all official documents or legal papers"
                                                },
                                                "tradingName": {
                                                    "type": "string",
                                                    "description": "Any other name the ordering company is commonly known by or trades under"
                                                },
                                                "registrationNumber": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "A tax or company registration number"
                                                },
                                                "email": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Email address of the company"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "description": "Phone number of the company including country code"
                                                },
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "houseNumber": {
                                                            "type": "string"
                                                        },
                                                        "street1": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "postalCode": {
                                                            "type": "string"
                                                        },
                                                        "countryCode": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "houseNumber",
                                                        "street1",
                                                        "city",
                                                        "postalCode",
                                                        "countryCode"
                                                    ],
                                                    "description": "Address of the company"
                                                },
                                                "`enoughDetailsFor` array[string]": {
                                                    "type": "string",
                                                    "description": "The delivery methods for which this company has enough details to create a transfer."
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID to create this resource against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID to add to this resource"
                                                }
                                            },
                                            "required": [
                                                "countryCode",
                                                "officialName",
                                                "tradingName"
                                            ]
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "paymentDetails": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "paymentDetails"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ],
                            "example": {
                                "data": {
                                    "type": "company-customers",
                                    "attributes": {
                                        "countryCode": "US",
                                        "officialName": "Travelex Ltd",
                                        "tradingName": "Travelex UK",
                                        "phoneNumber": "123456789"
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/company-customers/{id}": {
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": {
                                    "id": "7faa55d4-ce5e-4e74-ad2b-4143b12022c7",
                                    "type": "company-customers",
                                    "attributes": {
                                        "tradingName": "Travelex UK",
                                        "externalId": null,
                                        "officialName": "Travelex Ltd",
                                        "partyType": "CUSTOMER",
                                        "phoneNumber": "123456789",
                                        "registrationNumber": null,
                                        "countryCode": "US",
                                        "audit": {
                                            "createdAt": "2018-08-18T12:00:00.000Z",
                                            "createdBy": "Travelex"
                                        },
                                        "termsAndConditionsConsent": false,
                                        "name": "Travelex Ltd",
                                        "subType": "company",
                                        "partnerId": "US-WBK-20180404-1-2",
                                        "email": "john@smith.com"
                                    },
                                    "relationships": {
                                        "addresses": {
                                            "links": {
                                                "self": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/relationships/addresses",
                                                "related": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/addresses"
                                            }
                                        },
                                        "notes": {
                                            "links": {
                                                "self": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/relationships/notes",
                                                "related": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/notes"
                                            }
                                        },
                                        "transfers": {
                                            "links": {
                                                "self": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/relationships/transfers",
                                                "related": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/transfers"
                                            }
                                        },
                                        "paymentDetails": {
                                            "links": {
                                                "self": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/relationships/paymentDetails",
                                                "related": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/paymentDetails"
                                            }
                                        },
                                        "beneficiaries": {
                                            "links": {
                                                "self": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/relationships/beneficiaries",
                                                "related": "http://localhost:8082/api/company-customers/7faa55d4-ce5e-4e74-ad2b-4143b12022c7/beneficiaries"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which this customer is conducting the financial transaction."
                                                },
                                                "officialName": {
                                                    "type": "string",
                                                    "description": "The legal name of the entity that appears on all official documents or legal papers"
                                                },
                                                "tradingName": {
                                                    "type": "string",
                                                    "description": "Any other name the ordering company is commonly known by or trades under"
                                                },
                                                "registrationNumber": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "A tax or company registration number"
                                                },
                                                "email": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Email address of the company"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "description": "Phone number of the company including country code"
                                                },
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "houseNumber": {
                                                            "type": "string"
                                                        },
                                                        "street1": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "postalCode": {
                                                            "type": "string"
                                                        },
                                                        "countryCode": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "houseNumber",
                                                        "street1",
                                                        "city",
                                                        "postalCode",
                                                        "countryCode"
                                                    ],
                                                    "description": "Address of the company"
                                                },
                                                "`enoughDetailsFor` array[string]": {
                                                    "type": "string",
                                                    "description": "The delivery methods for which this company has enough details to create a transfer."
                                                },
                                                "audit": {
                                                    "type": "object",
                                                    "properties": {
                                                        "createdAt": {
                                                            "type": "string",
                                                            "description": "When this resource was created."
                                                        },
                                                        "createdBy": {
                                                            "type": "string",
                                                            "description": "Which user created this resource."
                                                        }
                                                    },
                                                    "required": [
                                                        "createdAt",
                                                        "createdBy"
                                                    ],
                                                    "description": "Audit details for this resource"
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID this resource was created against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID this resource was created with"
                                                }
                                            },
                                            "required": [
                                                "countryCode",
                                                "officialName",
                                                "tradingName"
                                            ]
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "paymentDetails": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "paymentDetails"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Update company customer",
                "description": "",
                "tags": [
                    "Customers"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID (`id`)",
                        "required": true,
                        "x-example": "7faa55d4-ce5e-4e74-ad2b-4143b12022c7",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which this customer is conducting the financial transaction."
                                                },
                                                "officialName": {
                                                    "type": "string",
                                                    "description": "The legal name of the entity that appears on all official documents or legal papers"
                                                },
                                                "tradingName": {
                                                    "type": "string",
                                                    "description": "Any other name the ordering company is commonly known by or trades under"
                                                },
                                                "registrationNumber": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "A tax or company registration number"
                                                },
                                                "email": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Email address of the company"
                                                },
                                                "phoneNumber": {
                                                    "type": "string",
                                                    "description": "Phone number of the company including country code"
                                                },
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "houseNumber": {
                                                            "type": "string"
                                                        },
                                                        "street1": {
                                                            "type": "string"
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "postalCode": {
                                                            "type": "string"
                                                        },
                                                        "countryCode": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "houseNumber",
                                                        "street1",
                                                        "city",
                                                        "postalCode",
                                                        "countryCode"
                                                    ],
                                                    "description": "Address of the company"
                                                },
                                                "`enoughDetailsFor` array[string]": {
                                                    "type": "string",
                                                    "description": "The delivery methods for which this company has enough details to create a transfer."
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID to create this resource against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID to add to this resource"
                                                }
                                            },
                                            "required": [
                                                "countryCode",
                                                "officialName",
                                                "tradingName"
                                            ]
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "paymentDetails": {
                                                    "type": "object",
                                                    "properties": {
                                                        "links": {
                                                            "type": "object",
                                                            "properties": {
                                                                "self": {
                                                                    "type": "string"
                                                                },
                                                                "related": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "self",
                                                                "related"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "links"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "paymentDetails"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ],
                            "example": {
                                "data": {
                                    "type": "company-customers",
                                    "attributes": {
                                        "email": "john@smith.com"
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/customers/{id}/addresses": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": [
                                    {
                                        "id": "2e17b954-d1ec-4827-ab85-d1634a9ed3fa",
                                        "type": "addresses",
                                        "attributes": {
                                            "houseNumber": "123",
                                            "street1": "York Way",
                                            "city": "London",
                                            "postalCode": "N1 9AG",
                                            "countryCode": "GB"
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/addresses/2e17b954-d1ec-4827-ab85-d1634a9ed3fa"
                                        }
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "houseNumber": {
                                                        "type": "string"
                                                    },
                                                    "street1": {
                                                        "type": "string"
                                                    },
                                                    "city": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "postalCode": {
                                                        "type": "string"
                                                    },
                                                    "countryCode": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "houseNumber",
                                                    "street1",
                                                    "city",
                                                    "postalCode",
                                                    "countryCode"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "attributes"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Addresses",
                "description": "",
                "tags": [
                    "Customers"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID (`id`)",
                        "required": true,
                        "x-example": "c168209c-f00e-4cdf-8a5b-23f4f081d7c7",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/customers/{id}/beneficiaries": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": [
                                    {
                                        "id": "56c056aa-2e3f-4f7d-a37e-77dc2e0021b9",
                                        "type": "beneficiaries",
                                        "attributes": {
                                            "countryCode": "GB",
                                            "audit": {
                                                "createdAt": "2018-08-18T12:00:00.000Z",
                                                "createdBy": "Travelex"
                                            },
                                            "name": "Josh Smith",
                                            "externalId": null,
                                            "subType": "individual",
                                            "partnerId": "US-WBK-20180404-1-2",
                                            "partyType": "BENEFICIARY"
                                        },
                                        "relationships": {
                                            "owner": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/beneficiaries/56c056aa-2e3f-4f7d-a37e-77dc2e0021b9/relationships/owner",
                                                    "related": "http://localhost:8082/api/beneficiaries/56c056aa-2e3f-4f7d-a37e-77dc2e0021b9/owner"
                                                }
                                            },
                                            "addresses": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/beneficiaries/56c056aa-2e3f-4f7d-a37e-77dc2e0021b9/relationships/addresses",
                                                    "related": "http://localhost:8082/api/beneficiaries/56c056aa-2e3f-4f7d-a37e-77dc2e0021b9/addresses"
                                                }
                                            },
                                            "notes": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/beneficiaries/56c056aa-2e3f-4f7d-a37e-77dc2e0021b9/relationships/notes",
                                                    "related": "http://localhost:8082/api/beneficiaries/56c056aa-2e3f-4f7d-a37e-77dc2e0021b9/notes"
                                                }
                                            },
                                            "paymentDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/beneficiaries/56c056aa-2e3f-4f7d-a37e-77dc2e0021b9/relationships/paymentDetails",
                                                    "related": "http://localhost:8082/api/beneficiaries/56c056aa-2e3f-4f7d-a37e-77dc2e0021b9/paymentDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "furtherInformation": "http://localhost:8082/api/individual-beneficiary/56c056aa-2e3f-4f7d-a37e-77dc2e0021b9",
                                            "self": "http://localhost:8082/api/beneficiaries/56c056aa-2e3f-4f7d-a37e-77dc2e0021b9"
                                        }
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "countryCode": {
                                                        "type": "string",
                                                        "description": "The country in which the beneficiary is receiving funds."
                                                    },
                                                    "firstName": {
                                                        "type": "string",
                                                        "description": "The first name of the customer."
                                                    },
                                                    "lastName": {
                                                        "type": "string",
                                                        "description": "The last name of the customer."
                                                    },
                                                    "address": {
                                                        "type": "object",
                                                        "properties": {
                                                            "houseNumber": {
                                                                "type": "string"
                                                            },
                                                            "street1": {
                                                                "type": "string"
                                                            },
                                                            "city": {
                                                                "type": "string"
                                                            },
                                                            "state": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "postalCode": {
                                                                "type": "string"
                                                            },
                                                            "countryCode": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "houseNumber",
                                                            "street1",
                                                            "city",
                                                            "postalCode",
                                                            "countryCode"
                                                        ],
                                                        "description": "The residential address of the beneficiary (this may be in a different country)."
                                                    },
                                                    "email": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "An email address for the customer."
                                                    },
                                                    "nationalId": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "An ID for customer in the country that the money is being sent to."
                                                    },
                                                    "dateOfBirth": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "The Date of Birth of the customer in YYYY-MM-DD format"
                                                    },
                                                    "middleName": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "The middle name of the customer."
                                                    },
                                                    "audit": {
                                                        "type": "object",
                                                        "properties": {
                                                            "createdAt": {
                                                                "type": "string",
                                                                "description": "When this resource was created."
                                                            },
                                                            "createdBy": {
                                                                "type": "string",
                                                                "description": "Which user created this resource."
                                                            }
                                                        },
                                                        "required": [
                                                            "createdAt",
                                                            "createdBy"
                                                        ],
                                                        "description": "Audit details for this resource"
                                                    },
                                                    "partnerId": {
                                                        "type": "string",
                                                        "description": "The partner ID this resource was created against"
                                                    },
                                                    "externalId": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "The external ID this resource was created with"
                                                    }
                                                }
                                            },
                                            "relationships": {
                                                "type": "object",
                                                "properties": {
                                                    "owner": {
                                                        "type": "object",
                                                        "properties": {
                                                            "links": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "self": {
                                                                        "type": "string"
                                                                    },
                                                                    "related": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "self",
                                                                    "related"
                                                                ]
                                                            }
                                                        },
                                                        "required": [
                                                            "links"
                                                        ]
                                                    },
                                                    "addresses": {
                                                        "type": "object",
                                                        "properties": {
                                                            "links": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "self": {
                                                                        "type": "string"
                                                                    },
                                                                    "related": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "self",
                                                                    "related"
                                                                ]
                                                            }
                                                        },
                                                        "required": [
                                                            "links"
                                                        ]
                                                    },
                                                    "paymentDetails": {
                                                        "type": "object",
                                                        "properties": {
                                                            "links": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "self": {
                                                                        "type": "string"
                                                                    },
                                                                    "related": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "self",
                                                                    "related"
                                                                ]
                                                            }
                                                        },
                                                        "required": [
                                                            "links"
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "owner",
                                                    "addresses",
                                                    "paymentDetails"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "attributes",
                                            "relationships"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Beneficiaries",
                "description": "",
                "tags": [
                    "Customers"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID (`id`)",
                        "required": true,
                        "x-example": "c168209c-f00e-4cdf-8a5b-23f4f081d7c7",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/customers/{id}/transfers": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": [
                                    {
                                        "id": "f5f4bdb7-0e08-491a-a1bb-cf1aecc84093",
                                        "type": "transfers",
                                        "attributes": {
                                            "status": "DRAFT",
                                            "deliveryMethod": "SWIFT",
                                            "purpose": "Charitable donation",
                                            "reference": "Donation from Tim",
                                            "audit": {
                                                "createdAt": "2018-08-18T12:00:00.000Z",
                                                "createdBy": "Travelex"
                                            },
                                            "externalId": null,
                                            "partnerId": "US-WBK-20180404-1-2"
                                        },
                                        "relationships": {
                                            "quote": {
                                                "data": {
                                                    "id": "5be6fd38-2c67-4db7-9473-46bcadbffcda",
                                                    "type": "quotes"
                                                },
                                                "links": {
                                                    "self": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/relationships/quote",
                                                    "related": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/quote"
                                                }
                                            },
                                            "customerPaymentDetails": {
                                                "data": {
                                                    "id": "81354794-21d9-4f25-8511-996ac59c6d45",
                                                    "type": "payment-details"
                                                },
                                                "links": {
                                                    "self": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/relationships/customerPaymentDetails",
                                                    "related": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/customerPaymentDetails"
                                                }
                                            },
                                            "beneficiaryPaymentDetails": {
                                                "data": {
                                                    "id": "2325b9a3-0a07-4de2-b7ed-529bf93b86e9",
                                                    "type": "payment-details"
                                                },
                                                "links": {
                                                    "self": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/relationships/beneficiaryPaymentDetails",
                                                    "related": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/beneficiaryPaymentDetails"
                                                }
                                            },
                                            "additionalRequirements": {
                                                "data": {
                                                    "id": "a8a873bf-3226-40e6-811a-fcf4c87690fe",
                                                    "type": "additional-requirements"
                                                },
                                                "links": {
                                                    "self": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/relationships/beneficiaryPaymentDetails",
                                                    "related": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/beneficiaryPaymentDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093"
                                        }
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "audit": {
                                                        "type": "object",
                                                        "properties": {
                                                            "createdAt": {
                                                                "type": "string",
                                                                "description": "When this resource was created."
                                                            },
                                                            "createdBy": {
                                                                "type": "string",
                                                                "description": "Which user created this resource."
                                                            }
                                                        },
                                                        "required": [
                                                            "createdAt",
                                                            "createdBy"
                                                        ],
                                                        "description": "Audit details for this resource"
                                                    },
                                                    "partnerId": {
                                                        "type": "string",
                                                        "description": "The partner ID this resource was created against"
                                                    },
                                                    "externalId": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "The external ID this resource was created with"
                                                    },
                                                    "deliveryMethod": {
                                                        "type": "string",
                                                        "enum": [
                                                            "SWIFT",
                                                            "LOCAL",
                                                            "CASH"
                                                        ],
                                                        "description": "The delivery method to be used for this transfer."
                                                    },
                                                    "purpose": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Purchase of Good(s)",
                                                            "Purchase of Service(s)",
                                                            "Professional fees payment (i.e. legal, accountant)",
                                                            "Payroll/Personnel payment",
                                                            "Payment for a loan or deposit",
                                                            "Bill payment (i.e. credit card, utility)",
                                                            "Research and Development",
                                                            "Business venture (i.e. merger, acquisition)",
                                                            "Intercompany payment",
                                                            "Charitable donation",
                                                            "Purchase of property / real estate",
                                                            "Estate settlement / Inheritance",
                                                            "Government related payment",
                                                            "Investment related payment",
                                                            "Other"
                                                        ],
                                                        "description": "The purpose of this transfer, required for regulatory purposes before this transfer will be accepted."
                                                    },
                                                    "reference": {
                                                        "type": "string",
                                                        "description": "The reference which for bank transfers may appear on the beneficiaries bank statement."
                                                    },
                                                    "encryptedPaymentData": {
                                                        "type": "string",
                                                        "description": "Encrypted payment data, which must be provided to have transfers funded by tokenized card accepted."
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "DRAFT",
                                                            "ACCEPTED",
                                                            "AWAITING_COLLECTION",
                                                            "COMPLETED",
                                                            "CANCELLED",
                                                            "FAILED"
                                                        ],
                                                        "description": "The status of the transfer."
                                                    }
                                                },
                                                "required": [
                                                    "deliveryMethod",
                                                    "status"
                                                ]
                                            },
                                            "relationships": {
                                                "type": "object",
                                                "properties": {
                                                    "quote": {
                                                        "type": "object",
                                                        "properties": {},
                                                        "description": "The quote to be used for this transfer."
                                                    },
                                                    "customerPaymentDetails": {
                                                        "type": "object",
                                                        "properties": {},
                                                        "description": "Details about how the transfer is to be funded."
                                                    },
                                                    "beneficiaryPaymentDetails": {
                                                        "type": "object",
                                                        "properties": {},
                                                        "description": "Details about how funds are to be received."
                                                    },
                                                    "additionalRequirements": {
                                                        "type": "object",
                                                        "properties": {},
                                                        "description": "Additional details required about the customer in order for the transfer to be accepted, specified in the same format as the required-details resource."
                                                    }
                                                }
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "attributes",
                                            "relationships"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Transfers",
                "description": "",
                "tags": [
                    "Customers"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID (`id`)",
                        "required": true,
                        "x-example": "c168209c-f00e-4cdf-8a5b-23f4f081d7c7",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/customers/{id}/paymentDetails": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": [
                                    {
                                        "id": "f5b2c7cc-5674-4826-8998-c1bceb1f4a62",
                                        "type": "bank-accounts",
                                        "attributes": {
                                            "bankCode": "404212",
                                            "address": null,
                                            "intermediaryBankAddress": null,
                                            "accountType": null,
                                            "intermediaryBankBicSwiftCode": null,
                                            "externalId": null,
                                            "accountNumber": "01705415",
                                            "branchCode": null,
                                            "bicSwiftCode": null,
                                            "countryCode": "GB",
                                            "audit": {
                                                "createdAt": "2018-08-18T12:00:00.000Z",
                                                "createdBy": "Travelex"
                                            },
                                            "iban": null,
                                            "partnerId": "US-WBK-20180404-1-2",
                                            "currencyCode": "GBP"
                                        },
                                        "relationships": {
                                            "owner": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/bank-accounts/f5b2c7cc-5674-4826-8998-c1bceb1f4a62/relationships/owner",
                                                    "related": "http://localhost:8082/api/bank-accounts/f5b2c7cc-5674-4826-8998-c1bceb1f4a62/owner"
                                                }
                                            },
                                            "currencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/bank-accounts/f5b2c7cc-5674-4826-8998-c1bceb1f4a62/relationships/currencyCodeDetails",
                                                    "related": "http://localhost:8082/api/bank-accounts/f5b2c7cc-5674-4826-8998-c1bceb1f4a62/currencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/bank-accounts/f5b2c7cc-5674-4826-8998-c1bceb1f4a62"
                                        }
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "audit": {
                                                        "type": "object",
                                                        "properties": {
                                                            "createdAt": {
                                                                "type": "string",
                                                                "description": "When this resource was created."
                                                            },
                                                            "createdBy": {
                                                                "type": "string",
                                                                "description": "Which user created this resource."
                                                            }
                                                        },
                                                        "required": [
                                                            "createdAt",
                                                            "createdBy"
                                                        ],
                                                        "description": "Audit details for this resource"
                                                    },
                                                    "partnerId": {
                                                        "type": "string",
                                                        "description": "The partner ID this resource was created against"
                                                    },
                                                    "externalId": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "The external ID this resource was created with"
                                                    },
                                                    "branchCode": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "An identifier of the branch the bank account is held at underneath the bank code (Transit code in Canada for example)"
                                                    },
                                                    "bicSwiftCode": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "BIC/SWIFT code of the bank."
                                                    },
                                                    "iban": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "IBAN of the bank account."
                                                    },
                                                    "accountType": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "enum": [
                                                            "CHECKING",
                                                            "SAVINGS",
                                                            null
                                                        ],
                                                        "description": "What type of bank account this is."
                                                    },
                                                    "intermediaryBankBicSwiftCode": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "Optionally tell us to route payments to this bank account via the intermediary bank with this BIC/SWIFT code."
                                                    },
                                                    "countryCode": {
                                                        "type": "string",
                                                        "description": "The country in which this bank account is registered."
                                                    },
                                                    "bankCode": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "An identifier of the bank that is not a BIC/SWIFT code (Sort Code in GB for example)"
                                                    },
                                                    "accountNumber": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "The account number of this bank account (not an IBAN)."
                                                    },
                                                    "bankName": {
                                                        "type": "string",
                                                        "description": "The name of the bank"
                                                    }
                                                },
                                                "required": [
                                                    "countryCode"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "attributes"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Payment details",
                "description": "",
                "tags": [
                    "Customers"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID (`id`)",
                        "required": true,
                        "x-example": "c168209c-f00e-4cdf-8a5b-23f4f081d7c7",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/documents": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": {
                                    "id": "949f2372-d80c-4847-a522-9e1b259f9466",
                                    "type": "documents",
                                    "attributes": {
                                        "type": "passport",
                                        "fileName": "passport_photo.png"
                                    },
                                    "relationships": {
                                        "owner": {
                                            "links": {
                                                "self": "http://localhost:8082/api/documents/949f2372-d80c-4847-a522-9e1b259f9466/relationships/owner",
                                                "related": "http://localhost:8082/api/documents/949f2372-d80c-4847-a522-9e1b259f9466/owner"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "The type of document"
                                                },
                                                "fileName": {
                                                    "type": "string",
                                                    "description": "The name of the file being uploaded"
                                                },
                                                "encryptedDocument": {
                                                    "type": "string",
                                                    "description": "The encrypted representation of the document"
                                                },
                                                "encryptionKey": {
                                                    "type": "string",
                                                    "description": "A key which can be used to decrypt the encryptedDocument"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "fileName",
                                                "encryptedDocument",
                                                "encryptionKey"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Upload document",
                "description": "_Note: It is expected that the `encryptionKey` field is provided as encrypted data._",
                "tags": [
                    "Documents"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "The type of document"
                                                },
                                                "fileName": {
                                                    "type": "string",
                                                    "description": "The name of the file being uploaded"
                                                },
                                                "encryptedDocument": {
                                                    "type": "string",
                                                    "description": "The encrypted representation of the document"
                                                },
                                                "encryptionKey": {
                                                    "type": "string",
                                                    "description": "A key which can be used to decrypt the encryptedDocument"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "fileName",
                                                "encryptedDocument",
                                                "encryptionKey"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ],
                            "example": {
                                "data": {
                                    "type": "documents",
                                    "attributes": {
                                        "type": "passport",
                                        "fileName": "passport_photo.png",
                                        "encryptedDocument": "YmlnIGJsb2Igb2YgZW5jcnlwdGVkIGRhdGEg",
                                        "encryptionKey": "secret"
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/hooks": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": [
                                    {
                                        "id": "2a968c95-e563-423c-bec8-1061c95ca69f",
                                        "type": "hooks",
                                        "attributes": {
                                            "url": "https://callback.com/updates",
                                            "events": [
                                                "TRANSFER_STATUS_UPDATE"
                                            ],
                                            "audit": {
                                                "createdAt": "2018-08-18T12:00:00.000Z",
                                                "createdBy": "Travelex"
                                            },
                                            "externalId": null,
                                            "partnerId": "US-WBK-20180404-1-2"
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/hooks/2a968c95-e563-423c-bec8-1061c95ca69f"
                                        }
                                    },
                                    {
                                        "id": "f4a09af1-6710-4523-b6ce-57e28c3392f3",
                                        "type": "hooks",
                                        "attributes": {
                                            "url": "https://transfers.com/audit",
                                            "events": [
                                                "TRANSFER_STATUS_UPDATE"
                                            ],
                                            "audit": {
                                                "createdAt": "2018-08-18T12:00:00.000Z",
                                                "createdBy": "Travelex"
                                            },
                                            "externalId": null,
                                            "partnerId": "US-WBK-20180404-1-2"
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/hooks/f4a09af1-6710-4523-b6ce-57e28c3392f3"
                                        }
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "type": "string",
                                                        "description": "The URL to be called when one of the events occurs."
                                                    },
                                                    "events": {
                                                        "type": "array",
                                                        "description": "The events this hook is subscribing to."
                                                    }
                                                },
                                                "required": [
                                                    "url",
                                                    "events"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "attributes"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "List hooks",
                "description": "",
                "tags": [
                    "Hooks"
                ],
                "parameters": [],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": {
                                    "id": "2a968c95-e563-423c-bec8-1061c95ca69f",
                                    "type": "hooks",
                                    "attributes": {
                                        "url": "https://callback.com/updates",
                                        "events": [
                                            "TRANSFER_STATUS_UPDATE"
                                        ],
                                        "audit": {
                                            "createdAt": "2018-08-18T12:00:00.000Z",
                                            "createdBy": "Travelex"
                                        },
                                        "externalId": null,
                                        "partnerId": "US-WBK-20180404-1-2"
                                    }
                                },
                                "links": {
                                    "self": "http://localhost:8082/api/hooks/2a968c95-e563-423c-bec8-1061c95ca69f"
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "url": {
                                                    "type": "string",
                                                    "description": "The URL to be called when one of the events occurs."
                                                },
                                                "events": {
                                                    "type": "array",
                                                    "description": "The events this hook is subscribing to.",
                                                    "items": {}
                                                }
                                            },
                                            "required": [
                                                "url",
                                                "events"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Create hook",
                "description": "",
                "tags": [
                    "Hooks"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "url": {
                                                    "type": "string",
                                                    "description": "The URL to be called when one of the events occurs."
                                                },
                                                "events": {
                                                    "type": "array",
                                                    "description": "The events this hook is subscribing to."
                                                }
                                            },
                                            "required": [
                                                "url",
                                                "events"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ],
                            "example": {
                                "data": {
                                    "type": "hooks",
                                    "attributes": {
                                        "url": "https://callback.com/updates",
                                        "events": [
                                            "TRANSFER_STATUS_UPDATE"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/hooks/{id}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Delete hook",
                "description": "",
                "tags": [
                    "Hooks"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Hook ID (`id`)",
                        "required": true,
                        "x-example": "2a968c95-e563-423c-bec8-1061c95ca69f",
                        "type": "string"
                    }
                ]
            }
        },
        "/bank-accounts": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": {
                                    "id": "f5b2c7cc-5674-4826-8998-c1bceb1f4a62",
                                    "type": "bank-accounts",
                                    "attributes": {
                                        "bankCode": "404212",
                                        "address": null,
                                        "intermediaryBankAddress": null,
                                        "accountType": null,
                                        "intermediaryBankBicSwiftCode": null,
                                        "externalId": null,
                                        "accountNumber": "01705415",
                                        "branchCode": null,
                                        "bicSwiftCode": null,
                                        "countryCode": "GB",
                                        "bankName": "Starling Bank",
                                        "audit": {
                                            "createdAt": "2018-08-18T12:00:00.000Z",
                                            "createdBy": "Travelex"
                                        },
                                        "iban": null,
                                        "partnerId": "US-WBK-20180404-1-2",
                                        "currencyCode": "GBP"
                                    },
                                    "relationships": {
                                        "owner": {
                                            "links": {
                                                "self": "http://localhost:8082/api/bank-accounts/f5b2c7cc-5674-4826-8998-c1bceb1f4a62/relationships/owner",
                                                "related": "http://localhost:8082/api/bank-accounts/f5b2c7cc-5674-4826-8998-c1bceb1f4a62/owner"
                                            }
                                        },
                                        "currencyCodeDetails": {
                                            "links": {
                                                "self": "http://localhost:8082/api/bank-accounts/f5b2c7cc-5674-4826-8998-c1bceb1f4a62/relationships/currencyCodeDetails",
                                                "related": "http://localhost:8082/api/bank-accounts/f5b2c7cc-5674-4826-8998-c1bceb1f4a62/currencyCodeDetails"
                                            }
                                        }
                                    },
                                    "links": {
                                        "self": "http://localhost:8082/api/bank-accounts/f5b2c7cc-5674-4826-8998-c1bceb1f4a62"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "audit": {
                                                    "type": "object",
                                                    "properties": {
                                                        "createdAt": {
                                                            "type": "string",
                                                            "description": "When this resource was created."
                                                        },
                                                        "createdBy": {
                                                            "type": "string",
                                                            "description": "Which user created this resource."
                                                        }
                                                    },
                                                    "required": [
                                                        "createdAt",
                                                        "createdBy"
                                                    ],
                                                    "description": "Audit details for this resource"
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID this resource was created against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID this resource was created with"
                                                },
                                                "branchCode": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "An identifier of the branch the bank account is held at underneath the bank code (Transit code in Canada for example)"
                                                },
                                                "bicSwiftCode": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "BIC/SWIFT code of the bank."
                                                },
                                                "iban": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "IBAN of the bank account."
                                                },
                                                "accountType": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "enum": [
                                                        "CHECKING",
                                                        "SAVINGS",
                                                        null
                                                    ],
                                                    "description": "What type of bank account this is."
                                                },
                                                "intermediaryBankBicSwiftCode": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Optionally tell us to route payments to this bank account via the intermediary bank with this BIC/SWIFT code."
                                                },
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which this bank account is registered."
                                                },
                                                "bankCode": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "An identifier of the bank that is not a BIC/SWIFT code (Sort Code in GB for example)"
                                                },
                                                "accountNumber": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The account number of this bank account (not an IBAN)."
                                                },
                                                "bankName": {
                                                    "type": "string",
                                                    "description": "The name of the bank"
                                                }
                                            },
                                            "required": [
                                                "countryCode"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Create bank account",
                "description": "",
                "tags": [
                    "Payment Details"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "branchCode": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "An identifier of the branch the bank account is held at underneath the bank code (Transit code in Canada for example)"
                                                },
                                                "bicSwiftCode": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "BIC/SWIFT code of the bank."
                                                },
                                                "iban": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "IBAN of the bank account."
                                                },
                                                "accountType": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "enum": [
                                                        "CHECKING",
                                                        "SAVINGS",
                                                        null
                                                    ],
                                                    "description": "What type of bank account this is."
                                                },
                                                "intermediaryBankBicSwiftCode": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Optionally tell us to route payments to this bank account via the intermediary bank with this BIC/SWIFT code."
                                                },
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which this bank account is registered."
                                                },
                                                "bankCode": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "An identifier of the bank that is not a BIC/SWIFT code (Sort Code in GB for example)"
                                                },
                                                "accountNumber": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The account number of this bank account (not an IBAN)."
                                                }
                                            },
                                            "required": [
                                                "countryCode"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ],
                            "example": {
                                "data": {
                                    "type": "bank-accounts",
                                    "attributes": {
                                        "countryCode": "GB",
                                        "currencyCode": "GBP",
                                        "bankCode": "404212",
                                        "accountNumber": "01705415"
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": [
                                    {
                                        "id": "f5b2c7cc-5674-4826-8998-c1bceb1f4a62",
                                        "type": "bank-accounts",
                                        "attributes": {
                                            "bankCode": "404212",
                                            "address": null,
                                            "intermediaryBankAddress": null,
                                            "accountType": null,
                                            "intermediaryBankBicSwiftCode": null,
                                            "externalId": null,
                                            "accountNumber": "01705415",
                                            "branchCode": null,
                                            "bicSwiftCode": null,
                                            "countryCode": "GB",
                                            "bankName": "Starling Bank",
                                            "audit": {
                                                "createdAt": "2018-08-18T12:00:00.000Z",
                                                "createdBy": "Travelex"
                                            },
                                            "iban": null,
                                            "partnerId": "US-WBK-20180404-1-2",
                                            "currencyCode": "GBP"
                                        },
                                        "relationships": {
                                            "owner": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/bank-accounts/f5b2c7cc-5674-4826-8998-c1bceb1f4a62/relationships/owner",
                                                    "related": "http://localhost:8082/api/bank-accounts/f5b2c7cc-5674-4826-8998-c1bceb1f4a62/owner"
                                                }
                                            },
                                            "currencyCodeDetails": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/bank-accounts/f5b2c7cc-5674-4826-8998-c1bceb1f4a62/relationships/currencyCodeDetails",
                                                    "related": "http://localhost:8082/api/bank-accounts/f5b2c7cc-5674-4826-8998-c1bceb1f4a62/currencyCodeDetails"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/bank-accounts/f5b2c7cc-5674-4826-8998-c1bceb1f4a62"
                                        }
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "audit": {
                                                        "type": "object",
                                                        "properties": {
                                                            "createdAt": {
                                                                "type": "string",
                                                                "description": "When this resource was created."
                                                            },
                                                            "createdBy": {
                                                                "type": "string",
                                                                "description": "Which user created this resource."
                                                            }
                                                        },
                                                        "required": [
                                                            "createdAt",
                                                            "createdBy"
                                                        ],
                                                        "description": "Audit details for this resource"
                                                    },
                                                    "partnerId": {
                                                        "type": "string",
                                                        "description": "The partner ID this resource was created against"
                                                    },
                                                    "externalId": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "The external ID this resource was created with"
                                                    },
                                                    "branchCode": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "An identifier of the branch the bank account is held at underneath the bank code (Transit code in Canada for example)"
                                                    },
                                                    "bicSwiftCode": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "BIC/SWIFT code of the bank."
                                                    },
                                                    "iban": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "IBAN of the bank account."
                                                    },
                                                    "accountType": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "enum": [
                                                            "CHECKING",
                                                            "SAVINGS",
                                                            null
                                                        ],
                                                        "description": "What type of bank account this is."
                                                    },
                                                    "intermediaryBankBicSwiftCode": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "Optionally tell us to route payments to this bank account via the intermediary bank with this BIC/SWIFT code."
                                                    },
                                                    "countryCode": {
                                                        "type": "string",
                                                        "description": "The country in which this bank account is registered."
                                                    },
                                                    "bankCode": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "An identifier of the bank that is not a BIC/SWIFT code (Sort Code in GB for example)"
                                                    },
                                                    "accountNumber": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "The account number of this bank account (not an IBAN)."
                                                    },
                                                    "bankName": {
                                                        "type": "string",
                                                        "description": "The name of the bank"
                                                    }
                                                },
                                                "required": [
                                                    "countryCode"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "attributes"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Get bank accounts",
                "description": "",
                "tags": [
                    "Payment Details"
                ],
                "parameters": [],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/tokenized-cards": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": {
                                    "id": "61f77b0b-10fd-4e3b-a944-ff248ae2bf19",
                                    "type": "tokenized-cards",
                                    "attributes": {
                                        "countryCode": "GB",
                                        "cardScheme": "VISA",
                                        "externalId": "1234",
                                        "expirationMonth": 12,
                                        "expirationYear": 20,
                                        "audit": {
                                            "createdAt": "2018-08-18T12:00:00.000Z",
                                            "createdBy": "Travelex"
                                        }
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which this card was issued."
                                                },
                                                "cardScheme": {
                                                    "type": "string",
                                                    "enum": [
                                                        "VISA",
                                                        "MASTERCARD",
                                                        "AMEX"
                                                    ]
                                                },
                                                "expirationMonth": {
                                                    "type": "number",
                                                    "description": "The month of the year in which this card expires"
                                                },
                                                "expirationYear": {
                                                    "type": "number",
                                                    "description": "The year in which this card expires"
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID to create this resource against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID to add to this resource"
                                                }
                                            },
                                            "required": [
                                                "countryCode",
                                                "cardScheme",
                                                "expirationMonth",
                                                "expirationYear"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Create tokenized card",
                "description": "",
                "tags": [
                    "Payment Details"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which this card was issued."
                                                },
                                                "cardScheme": {
                                                    "type": "string",
                                                    "enum": [
                                                        "VISA",
                                                        "MASTERCARD",
                                                        "AMEX"
                                                    ]
                                                },
                                                "expirationMonth": {
                                                    "type": "number",
                                                    "description": "The month of the year in which this card expires"
                                                },
                                                "expirationYear": {
                                                    "type": "number",
                                                    "description": "The year in which this card expires"
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID to create this resource against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID to add to this resource"
                                                }
                                            },
                                            "required": [
                                                "countryCode",
                                                "cardScheme",
                                                "expirationMonth",
                                                "expirationYear"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ],
                            "example": {
                                "data": {
                                    "type": "tokenized-cards",
                                    "attributes": {
                                        "countryCode": "GB",
                                        "currencyCode": "GBP",
                                        "cardScheme": "VISA",
                                        "externalId": "1234",
                                        "expirationMonth": 12,
                                        "expirationYear": 20
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/store-payment-details": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": {
                                    "id": "d205ba6e-0f76-4956-9373-6857ce563196",
                                    "type": "store-payment-details",
                                    "attributes": {
                                        "countryCode": "GB",
                                        "audit": {
                                            "createdAt": "2018-08-18T12:00:00.000Z",
                                            "createdBy": "Travelex"
                                        }
                                    }
                                },
                                "relationships": {
                                    "store": {
                                        "data": {
                                            "type": "store",
                                            "id": "ecfb9fb4-c5fc-48e8-bdc6-14764b429c19"
                                        }
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which cash will be collected."
                                                }
                                            },
                                            "required": [
                                                "countryCode"
                                            ]
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "store": {
                                                    "type": "string",
                                                    "description": "The specific store from which cash will be collected. This is only required for countries which do not support collect anywhere."
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Create store payment details",
                "description": "",
                "tags": [
                    "Payment Details"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "countryCode": {
                                                    "type": "string",
                                                    "description": "The country in which cash will be collected."
                                                }
                                            },
                                            "required": [
                                                "countryCode"
                                            ]
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "store": {
                                                    "type": "string",
                                                    "description": "The specific store from which cash will be collected. This is only required for countries which do not support collect anywhere."
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ],
                            "example": {
                                "data": {
                                    "type": "store-payment-details",
                                    "attributes": {
                                        "countryCode": "GB"
                                    }
                                },
                                "relationships": {
                                    "store": {
                                        "data": {
                                            "type": "store",
                                            "id": "ecfb9fb4-c5fc-48e8-bdc6-14764b429c19"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/quotes": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": {
                                    "id": "55544824-91e8-4719-8241-4fed636a1efe",
                                    "type": "quotes",
                                    "attributes": {
                                        "amountType": "SEND",
                                        "sendCurrencyCode": "USD",
                                        "receiveCurrencyCode": "GBP",
                                        "amount": "1000.00",
                                        "quoteDetails": [
                                            {
                                                "receiveAmount": "693.90",
                                                "sendAmount": "1000.00",
                                                "midMarketRate": "0.7102",
                                                "customerRate": "0.6939",
                                                "deliveryMethod": "SWIFT",
                                                "paymentMethod": "BANK_TRANSFER",
                                                "estimatedDeliveryDate": "2018-09-17",
                                                "fees": [
                                                    {
                                                        "name": "SWIFT delivery",
                                                        "amount": "12"
                                                    }
                                                ]
                                            },
                                            {
                                                "receiveAmount": "693.90",
                                                "sendAmount": "1000.00",
                                                "midMarketRate": "0.7102",
                                                "customerRate": "0.6939",
                                                "deliveryMethod": "CASH",
                                                "paymentMethod": "BANK_TRANSFER",
                                                "estimatedDeliveryDate": "2018-09-17",
                                                "fees": [
                                                    {
                                                        "name": "CASH delivery",
                                                        "amount": "5"
                                                    }
                                                ]
                                            },
                                            {
                                                "receiveAmount": "693.20",
                                                "sendAmount": "1000.00",
                                                "midMarketRate": "0.7102",
                                                "customerRate": "0.6932",
                                                "deliveryMethod": "LOCAL",
                                                "paymentMethod": "BANK_TRANSFER",
                                                "estimatedDeliveryDate": "2018-09-17",
                                                "fees": [
                                                    {
                                                        "name": "LOCAL delivery",
                                                        "amount": "8"
                                                    }
                                                ]
                                            }
                                        ],
                                        "methods": [
                                            {
                                                "paymentMethod": "ACH",
                                                "deliveryMethods": [
                                                    "LOCAL",
                                                    "SWIFT"
                                                ]
                                            }
                                        ],
                                        "limits": {
                                            "paymentMethods": [
                                                {
                                                    "method": "ACH",
                                                    "min": "50",
                                                    "max": "1000"
                                                }
                                            ],
                                            "deliveryMethods": [
                                                {
                                                    "method": "LOCAL",
                                                    "min": "100",
                                                    "max": "1000"
                                                },
                                                {
                                                    "method": "SWIFT",
                                                    "min": "100",
                                                    "max": "10000"
                                                },
                                                {
                                                    "method": "CASH",
                                                    "min": "50",
                                                    "max": "100"
                                                }
                                            ]
                                        },
                                        "audit": {
                                            "createdAt": "2018-08-18T12:00:00.000Z",
                                            "createdBy": "Travelex"
                                        },
                                        "receiveCountryCode": "GB",
                                        "promoCode": null,
                                        "expiration": "2018-05-08T09:35:00+0100",
                                        "partnerId": "US-WBK-20180404-1-2",
                                        "sendCountryCode": "US"
                                    },
                                    "relationships": {
                                        "corridor": {
                                            "links": {
                                                "self": "http://localhost:8082/api/quotes/55544824-91e8-4719-8241-4fed636a1efe/relationships/corridor",
                                                "related": "http://localhost:8082/api/quotes/55544824-91e8-4719-8241-4fed636a1efe/corridor"
                                            }
                                        },
                                        "beneficiaryRequirements": {
                                            "links": {
                                                "self": "http://localhost:8082/api/quotes/55544824-91e8-4719-8241-4fed636a1efe/relationships/beneficiaryRequirements",
                                                "related": "http://localhost:8082/api/quotes/55544824-91e8-4719-8241-4fed636a1efe/beneficiaryRequirements"
                                            }
                                        },
                                        "customerRequirements": {
                                            "links": {
                                                "self": "http://localhost:8082/api/quotes/55544824-91e8-4719-8241-4fed636a1efe/relationships/customerRequirements",
                                                "related": "http://localhost:8082/api/quotes/55544824-91e8-4719-8241-4fed636a1efe/customerRequirements"
                                            }
                                        },
                                        "paymentDetailsRequirements": {
                                            "links": {
                                                "self": "http://localhost:8082/api/quotes/55544824-91e8-4719-8241-4fed636a1efe/relationships/paymentDetailsRequirements",
                                                "related": "http://localhost:8082/api/quotes/55544824-91e8-4719-8241-4fed636a1efe/paymentDetailsRequirements"
                                            }
                                        }
                                    },
                                    "links": {
                                        "self": "http://localhost:8082/api/quotes/55544824-91e8-4719-8241-4fed636a1efe"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "receiveCountryCode": {
                                                    "type": "string",
                                                    "description": "The country that the currency is being received in."
                                                },
                                                "receiveCurrencyCode": {
                                                    "type": "string",
                                                    "description": "The currency of the payment details that is receiving the money"
                                                },
                                                "sendCountryCode": {
                                                    "type": "string",
                                                    "description": "The country from which the transaction is originating."
                                                },
                                                "sendCurrencyCode": {
                                                    "type": "string",
                                                    "description": "The currency of the payment details which is being used to pay for the transaction."
                                                },
                                                "amountType": {
                                                    "type": "string",
                                                    "description": "Whether the amount you entered refers to the amount you want to receive (RECEIVE) or the amount to send (SEND). For example, if the customer\nwants to send 100 Dollars to France in Euros then they would enter amount 100.00 and amount type SEND. However, if they wanted the beneficiary\nto receive 100 Euros, then they would enter amount 100.00 and amount type RECEIVE."
                                                },
                                                "amount": {
                                                    "type": "string",
                                                    "description": "The amount of currency that you want to send/receive (depending on amountType). The number of decimal places must match the currency you are\nreferring to (cf Currencies in reference data)."
                                                },
                                                "quoteDetails": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "paymentMethod": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "ACH",
                                                                    "BANK_TRANSFER"
                                                                ],
                                                                "description": "The payment method for these quote details."
                                                            },
                                                            "deliveryMethod": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "SWIFT",
                                                                    "LOCAL",
                                                                    "CASH"
                                                                ],
                                                                "description": "The delivery method."
                                                            },
                                                            "receiveAmount": {
                                                                "type": "string",
                                                                "description": "The amount that the beneficiary will receive."
                                                            },
                                                            "sendAmount": {
                                                                "type": "string",
                                                                "description": "The amount that will be charged."
                                                            },
                                                            "midMarketRate": {
                                                                "type": "string",
                                                                "description": "The rate which Travelex receives (for reference)."
                                                            },
                                                            "customerRate": {
                                                                "type": "string",
                                                                "description": "The rate which you will receive (you will be billed at this rate)."
                                                            },
                                                            "estimatedDeliveryDate": {
                                                                "type": "string",
                                                                "description": "The estimated delivery date (YYYY-MM-DD)."
                                                            },
                                                            "fees": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string",
                                                                            "description": "The name of this fee"
                                                                        },
                                                                        "amount": {
                                                                            "type": "string",
                                                                            "description": "The amount of this fee"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name",
                                                                        "amount"
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        "required": [
                                                            "paymentMethod",
                                                            "deliveryMethod",
                                                            "receiveAmount",
                                                            "sendAmount",
                                                            "midMarketRate",
                                                            "customerRate",
                                                            "estimatedDeliveryDate",
                                                            "fees"
                                                        ]
                                                    },
                                                    "description": "The rates and fees for each delivery method."
                                                },
                                                "methods": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "paymentMethod": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "ACH",
                                                                    "BANK_TRANSFER"
                                                                ],
                                                                "description": "The payment method for these quote details."
                                                            },
                                                            "deliveryMethods": {
                                                                "type": "array"
                                                            }
                                                        },
                                                        "required": [
                                                            "paymentMethod",
                                                            "deliveryMethods"
                                                        ]
                                                    },
                                                    "description": "All combinations of payment/delivery methods available with this corridor, regardless of limits."
                                                },
                                                "limits": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "paymentMethods": {
                                                                "type": "array"
                                                            },
                                                            "deliveryMethods": {
                                                                "type": "array"
                                                            }
                                                        },
                                                        "required": [
                                                            "paymentMethods",
                                                            "deliveryMethods"
                                                        ]
                                                    },
                                                    "description": "Payment limits associated with each method available for this corridor."
                                                },
                                                "audit": {
                                                    "type": "object",
                                                    "properties": {
                                                        "createdAt": {
                                                            "type": "string",
                                                            "description": "When this resource was created."
                                                        },
                                                        "createdBy": {
                                                            "type": "string",
                                                            "description": "Which user created this resource."
                                                        }
                                                    },
                                                    "required": [
                                                        "createdAt",
                                                        "createdBy"
                                                    ],
                                                    "description": "Details about when and who created this quote."
                                                },
                                                "expiration": {
                                                    "type": "string",
                                                    "description": "When this quote is valid until. After this time, you cannot create a transfer with it."
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner this quote was created against."
                                                },
                                                "promoCode": {
                                                    "type": "string",
                                                    "description": "The promotional code used when generating this quote."
                                                }
                                            },
                                            "required": [
                                                "receiveCountryCode",
                                                "receiveCurrencyCode",
                                                "sendCountryCode",
                                                "sendCurrencyCode",
                                                "amountType",
                                                "amount",
                                                "quoteDetails",
                                                "methods",
                                                "limits",
                                                "audit",
                                                "expiration",
                                                "partnerId"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Create quote",
                "description": "",
                "tags": [
                    "Quotes"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "receiveCountryCode": {
                                                    "type": "string",
                                                    "description": "The country that the currency is being received in."
                                                },
                                                "receiveCurrencyCode": {
                                                    "type": "string",
                                                    "description": "The currency of the payment details that is receiving the money"
                                                },
                                                "sendCountryCode": {
                                                    "type": "string",
                                                    "description": "The country from which the transaction is originating."
                                                },
                                                "sendCurrencyCode": {
                                                    "type": "string",
                                                    "description": "The currency of the payment details which is being used to pay for the transaction."
                                                },
                                                "amountType": {
                                                    "type": "string",
                                                    "description": "Whether the amount you entered refers to the amount you want to receive (RECEIVE) or the amount to send (SEND). For example, if the customer\nwants to send 100 Dollars to France in Euros then they would enter amount 100.00 and amount type SEND. However, if they wanted the beneficiary\nto receive 100 Euros, then they would enter amount 100.00 and amount type RECEIVE."
                                                },
                                                "amount": {
                                                    "type": "string",
                                                    "description": "The amount of currency that you want to send/receive (depending on amountType). The number of decimal places must match the currency you are\nreferring to (cf Currencies in reference data)."
                                                },
                                                "promoCode": {
                                                    "type": "string",
                                                    "description": "A promotional code to be used when generating this quote which may reduce the margin or fees."
                                                }
                                            },
                                            "required": [
                                                "receiveCountryCode",
                                                "receiveCurrencyCode",
                                                "sendCountryCode",
                                                "sendCurrencyCode",
                                                "amountType",
                                                "amount"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ],
                            "example": {
                                "data": {
                                    "type": "quotes",
                                    "attributes": {
                                        "receiveCountryCode": "GB",
                                        "receiveCurrencyCode": "GBP",
                                        "sendCountryCode": "US",
                                        "sendCurrencyCode": "USD",
                                        "amountType": "SEND",
                                        "amount": "1000.00",
                                        "promoCode": "FOOBAR123"
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/required-details?filter[requirementsType]=customer&filter[requirementsSubType]=individual&filter[countryCode]=US": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": [
                                    {
                                        "id": "06e0a265-da96-35b7-af61-c49eabbd73a5",
                                        "type": "required-details",
                                        "attributes": {
                                            "requiredAlternatives": [],
                                            "countryCode": "US",
                                            "requirementsType": "customer",
                                            "requirementsSubType": "individual",
                                            "fields": [
                                                {
                                                    "localName": "First Name",
                                                    "apiName": "firstName",
                                                    "regex": "^.{1,50}$",
                                                    "minLength": 1,
                                                    "maxLength": 50,
                                                    "type": "string",
                                                    "errorMessage": "First Name must contain only symbols",
                                                    "explanationMessage": "The recipient's legal first name",
                                                    "allowedValues": null,
                                                    "group": "NAME",
                                                    "required": "YES",
                                                    "explanationPicture": null
                                                },
                                                {
                                                    "localName": "Last Name",
                                                    "apiName": "lastName",
                                                    "regex": "^.{1,50}$",
                                                    "minLength": 1,
                                                    "maxLength": 50,
                                                    "type": "string",
                                                    "errorMessage": "Last Name must contain only symbols",
                                                    "explanationMessage": "The recipient's legal last name",
                                                    "allowedValues": null,
                                                    "group": "NAME",
                                                    "required": "YES",
                                                    "explanationPicture": null
                                                }
                                            ]
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/required-details/06e0a265-da96-35b7-af61-c49eabbd73a5"
                                        }
                                    }
                                ],
                                "links": {
                                    "first": "http://localhost:8082/api/required-details?page[limit]=20&filter[required-details][countryCode][EQ]=US&filter[required-details][requirementsSubType][EQ]=individual&filter[required-details][requirementsType][EQ]=customer",
                                    "last": "http://localhost:8082/api/required-details?page[limit]=20&filter[required-details][countryCode][EQ]=US&filter[required-details][requirementsSubType][EQ]=individual&filter[required-details][requirementsType][EQ]=customer"
                                },
                                "meta": {
                                    "totalResourceCount": 1
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The UUID of this required detail"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "requirementsType": {
                                                        "type": "string",
                                                        "enum": [
                                                            "address",
                                                            "beneficiary",
                                                            "customer",
                                                            "payment-details"
                                                        ],
                                                        "description": "The base type for which this requirement is relevant. For example, to retrieve required details for the individual-customer endpoint, you should look for required details with requirementsType=customer and requirementsSubType=individual."
                                                    },
                                                    "requirementsSubType": {
                                                        "type": "string",
                                                        "enum": [
                                                            "address",
                                                            "individual",
                                                            "company",
                                                            "bank-account",
                                                            "tokenized-card"
                                                        ]
                                                    },
                                                    "countryCode": {
                                                        "type": "string",
                                                        "description": "The country code for which these required details are relevant. This refers to different countries depending on the endpoint. For example, when creating a beneficiary, this refers\nto the country in which the beneficiary is receiving the money i.e. where the bank account is based or where the cash is being picked up."
                                                    },
                                                    "requiredAlternatives": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "group": {
                                                                    "type": "string",
                                                                    "description": "A textual label of this set of alternatives."
                                                                },
                                                                "data": {
                                                                    "type": "array",
                                                                    "description": "A list of lists. Each of the internal lists is the apiName for the required detail inside the alternative set."
                                                                }
                                                            },
                                                            "required": [
                                                                "group"
                                                            ]
                                                        },
                                                        "description": "If part of the requirements have an either/or requirement then this is listed here. For example, when specifying a bank account in GB, you can present either an IBAN or the Sort Code along with the Account Number. This will correlate with \"required\":\"BY_GROUP\" inside\nthe fields."
                                                    },
                                                    "fields": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "apiName": {
                                                                    "type": "string",
                                                                    "description": "The literal name of this field on the API endpoint it refers to. For example, there will be a field on the bank-accounts resource endpoint with name `bankCode`"
                                                                },
                                                                "localName": {
                                                                    "type": "string",
                                                                    "description": "The local (in the country for which is being created) name. For example, `bankCode` refers to any way to identify a single bank in the world, but in GB they identify a bank using the `Sort Code`."
                                                                },
                                                                "regex": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A regex to check entered information against"
                                                                },
                                                                "minLength": {
                                                                    "type": "number",
                                                                    "description": "The minimum length that entered information can be for this field"
                                                                },
                                                                "maxLength": {
                                                                    "type": "number",
                                                                    "description": "The maximum length that entered information can be for this field"
                                                                },
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "string",
                                                                        "address",
                                                                        "datetime"
                                                                    ],
                                                                    "description": "Which of the `primitives` you must provide here."
                                                                },
                                                                "errorMessage": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "An error message to show if the entered information doesn't match the regex"
                                                                },
                                                                "explanationMessage": {
                                                                    "type": "string",
                                                                    "description": "A message to explain what this field means and possibly how to find it"
                                                                },
                                                                "explanationPicture": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A URL to a picture that helps to explain where to find the information"
                                                                },
                                                                "allowedValues": {
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ],
                                                                    "description": "If this field is restricted to a list of possible values then the possible values are listed here"
                                                                },
                                                                "group": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A way of grouping required fields together, for example you'd want to ask for all name fields in the same section."
                                                                },
                                                                "required": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "YES",
                                                                        "NO",
                                                                        "BY_GROUP"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "apiName",
                                                                "localName",
                                                                "minLength",
                                                                "maxLength",
                                                                "required"
                                                            ]
                                                        },
                                                        "description": "Detail about the required details fields."
                                                    }
                                                },
                                                "required": [
                                                    "requirementsType",
                                                    "requirementsSubType",
                                                    "countryCode",
                                                    "requiredAlternatives",
                                                    "fields"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "type",
                                            "attributes"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Individual customer in the US",
                "description": "+ `requirementsType=customer`\n\n+ `requirementsSubType=individual`\n\n+ `countryCode=US`",
                "tags": [
                    "Required Details"
                ],
                "parameters": [],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/required-details?filter[requirementsType]=address&filter[countryCode]=US": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": [
                                    {
                                        "id": "2922f9fe-1a02-38f1-8ab3-1844d95e9c69",
                                        "type": "required-details",
                                        "attributes": {
                                            "requiredAlternatives": [],
                                            "countryCode": "US",
                                            "requirementsType": "address",
                                            "requirementsSubType": "address",
                                            "fields": [
                                                {
                                                    "localName": "City",
                                                    "apiName": "city",
                                                    "regex": "^.{3,50}$",
                                                    "minLength": 3,
                                                    "maxLength": 50,
                                                    "type": "string",
                                                    "errorMessage": "City must must contain only symbols",
                                                    "explanationMessage": "The city of this address",
                                                    "allowedValues": null,
                                                    "group": "ADDRESS",
                                                    "required": "YES",
                                                    "explanationPicture": null
                                                },
                                                {
                                                    "localName": "Address Type",
                                                    "apiName": "type",
                                                    "regex": null,
                                                    "minLength": 0,
                                                    "maxLength": 0,
                                                    "type": "string",
                                                    "errorMessage": null,
                                                    "explanationMessage": "The address type",
                                                    "allowedValues": [
                                                        "PRIMARY",
                                                        "SECONDARY",
                                                        "POSTAL"
                                                    ],
                                                    "group": "ADDRESS",
                                                    "required": "YES",
                                                    "explanationPicture": null
                                                }
                                            ]
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/required-details/2922f9fe-1a02-38f1-8ab3-1844d95e9c69"
                                        }
                                    }
                                ],
                                "links": {
                                    "first": "http://localhost:8082/api/required-details?page[limit]=20&filter[required-details][countryCode][EQ]=US&filter[required-details][requirementsType][EQ]=address",
                                    "last": "http://localhost:8082/api/required-details?page[limit]=20&filter[required-details][countryCode][EQ]=US&filter[required-details][requirementsType][EQ]=address"
                                },
                                "meta": {
                                    "totalResourceCount": 1
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The UUID of this required detail"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "requirementsType": {
                                                        "type": "string",
                                                        "enum": [
                                                            "address",
                                                            "beneficiary",
                                                            "customer",
                                                            "payment-details"
                                                        ],
                                                        "description": "The base type for which this requirement is relevant. For example, to retrieve required details for the individual-customer endpoint, you should look for required details with requirementsType=customer and requirementsSubType=individual."
                                                    },
                                                    "requirementsSubType": {
                                                        "type": "string",
                                                        "enum": [
                                                            "address",
                                                            "individual",
                                                            "company",
                                                            "bank-account",
                                                            "tokenized-card"
                                                        ]
                                                    },
                                                    "countryCode": {
                                                        "type": "string",
                                                        "description": "The country code for which these required details are relevant. This refers to different countries depending on the endpoint. For example, when creating a beneficiary, this refers\nto the country in which the beneficiary is receiving the money i.e. where the bank account is based or where the cash is being picked up."
                                                    },
                                                    "requiredAlternatives": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "group": {
                                                                    "type": "string",
                                                                    "description": "A textual label of this set of alternatives."
                                                                },
                                                                "data": {
                                                                    "type": "array",
                                                                    "description": "A list of lists. Each of the internal lists is the apiName for the required detail inside the alternative set."
                                                                }
                                                            },
                                                            "required": [
                                                                "group"
                                                            ]
                                                        },
                                                        "description": "If part of the requirements have an either/or requirement then this is listed here. For example, when specifying a bank account in GB, you can present either an IBAN or the Sort Code along with the Account Number. This will correlate with \"required\":\"BY_GROUP\" inside\nthe fields."
                                                    },
                                                    "fields": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "apiName": {
                                                                    "type": "string",
                                                                    "description": "The literal name of this field on the API endpoint it refers to. For example, there will be a field on the bank-accounts resource endpoint with name `bankCode`"
                                                                },
                                                                "localName": {
                                                                    "type": "string",
                                                                    "description": "The local (in the country for which is being created) name. For example, `bankCode` refers to any way to identify a single bank in the world, but in GB they identify a bank using the `Sort Code`."
                                                                },
                                                                "regex": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A regex to check entered information against"
                                                                },
                                                                "minLength": {
                                                                    "type": "number",
                                                                    "description": "The minimum length that entered information can be for this field"
                                                                },
                                                                "maxLength": {
                                                                    "type": "number",
                                                                    "description": "The maximum length that entered information can be for this field"
                                                                },
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "string",
                                                                        "address",
                                                                        "datetime"
                                                                    ],
                                                                    "description": "Which of the `primitives` you must provide here."
                                                                },
                                                                "errorMessage": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "An error message to show if the entered information doesn't match the regex"
                                                                },
                                                                "explanationMessage": {
                                                                    "type": "string",
                                                                    "description": "A message to explain what this field means and possibly how to find it"
                                                                },
                                                                "explanationPicture": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A URL to a picture that helps to explain where to find the information"
                                                                },
                                                                "allowedValues": {
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ],
                                                                    "description": "If this field is restricted to a list of possible values then the possible values are listed here"
                                                                },
                                                                "group": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A way of grouping required fields together, for example you'd want to ask for all name fields in the same section."
                                                                },
                                                                "required": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "YES",
                                                                        "NO",
                                                                        "BY_GROUP"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "apiName",
                                                                "localName",
                                                                "minLength",
                                                                "maxLength",
                                                                "required"
                                                            ]
                                                        },
                                                        "description": "Detail about the required details fields."
                                                    }
                                                },
                                                "required": [
                                                    "requirementsType",
                                                    "requirementsSubType",
                                                    "countryCode",
                                                    "requiredAlternatives",
                                                    "fields"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "type",
                                            "attributes"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "US address required details",
                "description": "When creating resources with an address, there are also required details that are for the specific country that address is for. These can be found using a similar request to that bellow:\n\n+ `requirementsType=address`\n\n+ `requirementsSubType=address`\n\n+ `countryCode=US`",
                "tags": [
                    "Required Details"
                ],
                "parameters": [],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/required-details?filter[requirementsType]=beneficiary&filter[requirementsSubType]=company&filter[countryCode]=DE": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": [
                                    {
                                        "id": "538ab163-95ec-30cb-9620-d39f358e113f",
                                        "type": "required-details",
                                        "attributes": {
                                            "requiredAlternatives": [],
                                            "countryCode": "DE",
                                            "requirementsType": "beneficiary",
                                            "requirementsSubType": "company",
                                            "fields": [
                                                {
                                                    "localName": "Official Name",
                                                    "apiName": "officialName",
                                                    "regex": "^.{3,50}$",
                                                    "minLength": 3,
                                                    "maxLength": 50,
                                                    "type": "string",
                                                    "errorMessage": "Official Name must contain only symbols",
                                                    "explanationMessage": "The city of this address",
                                                    "allowedValues": null,
                                                    "group": "NAME",
                                                    "required": "YES",
                                                    "explanationPicture": null
                                                }
                                            ]
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/required-details/538ab163-95ec-30cb-9620-d39f358e113f"
                                        }
                                    }
                                ],
                                "links": {
                                    "first": "http://localhost:8082/api/required-details?page[limit]=20&filter[required-details][countryCode][EQ]=DE&filter[required-details][requirementsSubType][EQ]=company&filter[required-details][requirementsType][EQ]=beneficiary",
                                    "last": "http://localhost:8082/api/required-details?page[limit]=20&filter[required-details][countryCode][EQ]=DE&filter[required-details][requirementsSubType][EQ]=company&filter[required-details][requirementsType][EQ]=beneficiary"
                                },
                                "meta": {
                                    "totalResourceCount": 1
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The UUID of this required detail"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "requirementsType": {
                                                        "type": "string",
                                                        "enum": [
                                                            "address",
                                                            "beneficiary",
                                                            "customer",
                                                            "payment-details"
                                                        ],
                                                        "description": "The base type for which this requirement is relevant. For example, to retrieve required details for the individual-customer endpoint, you should look for required details with requirementsType=customer and requirementsSubType=individual."
                                                    },
                                                    "requirementsSubType": {
                                                        "type": "string",
                                                        "enum": [
                                                            "address",
                                                            "individual",
                                                            "company",
                                                            "bank-account",
                                                            "tokenized-card"
                                                        ]
                                                    },
                                                    "countryCode": {
                                                        "type": "string",
                                                        "description": "The country code for which these required details are relevant. This refers to different countries depending on the endpoint. For example, when creating a beneficiary, this refers\nto the country in which the beneficiary is receiving the money i.e. where the bank account is based or where the cash is being picked up."
                                                    },
                                                    "requiredAlternatives": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "group": {
                                                                    "type": "string",
                                                                    "description": "A textual label of this set of alternatives."
                                                                },
                                                                "data": {
                                                                    "type": "array",
                                                                    "description": "A list of lists. Each of the internal lists is the apiName for the required detail inside the alternative set."
                                                                }
                                                            },
                                                            "required": [
                                                                "group"
                                                            ]
                                                        },
                                                        "description": "If part of the requirements have an either/or requirement then this is listed here. For example, when specifying a bank account in GB, you can present either an IBAN or the Sort Code along with the Account Number. This will correlate with \"required\":\"BY_GROUP\" inside\nthe fields."
                                                    },
                                                    "fields": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "apiName": {
                                                                    "type": "string",
                                                                    "description": "The literal name of this field on the API endpoint it refers to. For example, there will be a field on the bank-accounts resource endpoint with name `bankCode`"
                                                                },
                                                                "localName": {
                                                                    "type": "string",
                                                                    "description": "The local (in the country for which is being created) name. For example, `bankCode` refers to any way to identify a single bank in the world, but in GB they identify a bank using the `Sort Code`."
                                                                },
                                                                "regex": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A regex to check entered information against"
                                                                },
                                                                "minLength": {
                                                                    "type": "number",
                                                                    "description": "The minimum length that entered information can be for this field"
                                                                },
                                                                "maxLength": {
                                                                    "type": "number",
                                                                    "description": "The maximum length that entered information can be for this field"
                                                                },
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "string",
                                                                        "address",
                                                                        "datetime"
                                                                    ],
                                                                    "description": "Which of the `primitives` you must provide here."
                                                                },
                                                                "errorMessage": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "An error message to show if the entered information doesn't match the regex"
                                                                },
                                                                "explanationMessage": {
                                                                    "type": "string",
                                                                    "description": "A message to explain what this field means and possibly how to find it"
                                                                },
                                                                "explanationPicture": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A URL to a picture that helps to explain where to find the information"
                                                                },
                                                                "allowedValues": {
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ],
                                                                    "description": "If this field is restricted to a list of possible values then the possible values are listed here"
                                                                },
                                                                "group": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A way of grouping required fields together, for example you'd want to ask for all name fields in the same section."
                                                                },
                                                                "required": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "YES",
                                                                        "NO",
                                                                        "BY_GROUP"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "apiName",
                                                                "localName",
                                                                "minLength",
                                                                "maxLength",
                                                                "required"
                                                            ]
                                                        },
                                                        "description": "Detail about the required details fields."
                                                    }
                                                },
                                                "required": [
                                                    "requirementsType",
                                                    "requirementsSubType",
                                                    "countryCode",
                                                    "requiredAlternatives",
                                                    "fields"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "type",
                                            "attributes"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Company beneficiary in Germany",
                "description": "+ `requirementsType=beneficiary`\n\n+ `requirementsSubType=company`\n\n+ `countryCode=DE`",
                "tags": [
                    "Required Details"
                ],
                "parameters": [],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/required-details?filter[requirementsType]=payment-details&filter[requirementsSubType]=bank-account&filter[countryCode]=MX": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": [
                                    {
                                        "id": "58d26e4a-cdca-37e8-81c4-7c4f46a4f2c5",
                                        "type": "required-details",
                                        "attributes": {
                                            "requiredAlternatives": [],
                                            "countryCode": "MX",
                                            "requirementsType": "payment-details",
                                            "requirementsSubType": "bank-account",
                                            "fields": [
                                                {
                                                    "localName": "BIC/SWIFT Code",
                                                    "apiName": "bicSwiftCode",
                                                    "regex": "^[A-Z]{4}MX[0-9A-Z]{2}([0-9A-Z]{3})?$",
                                                    "minLength": 6,
                                                    "maxLength": 9,
                                                    "type": "string",
                                                    "errorMessage": "BIC/SWIFT Code must look like: ABCDMXA1 or ABCDMXA1B2C'",
                                                    "explanationMessage": "This bank’s international identifier code.",
                                                    "allowedValues": null,
                                                    "group": null,
                                                    "required": "YES",
                                                    "explanationPicture": null
                                                }
                                            ]
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/required-details/58d26e4a-cdca-37e8-81c4-7c4f46a4f2c5"
                                        }
                                    }
                                ],
                                "links": {
                                    "first": "http://localhost:8082/api/required-details?page[limit]=20&filter[required-details][countryCode][EQ]=MX&filter[required-details][requirementsSubType][EQ]=bank-account&filter[required-details][requirementsType][EQ]=payment-details",
                                    "last": "http://localhost:8082/api/required-details?page[limit]=20&filter[required-details][countryCode][EQ]=MX&filter[required-details][requirementsSubType][EQ]=bank-account&filter[required-details][requirementsType][EQ]=payment-details"
                                },
                                "meta": {
                                    "totalResourceCount": 1
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The UUID of this required detail"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "requirementsType": {
                                                        "type": "string",
                                                        "enum": [
                                                            "address",
                                                            "beneficiary",
                                                            "customer",
                                                            "payment-details"
                                                        ],
                                                        "description": "The base type for which this requirement is relevant. For example, to retrieve required details for the individual-customer endpoint, you should look for required details with requirementsType=customer and requirementsSubType=individual."
                                                    },
                                                    "requirementsSubType": {
                                                        "type": "string",
                                                        "enum": [
                                                            "address",
                                                            "individual",
                                                            "company",
                                                            "bank-account",
                                                            "tokenized-card"
                                                        ]
                                                    },
                                                    "countryCode": {
                                                        "type": "string",
                                                        "description": "The country code for which these required details are relevant. This refers to different countries depending on the endpoint. For example, when creating a beneficiary, this refers\nto the country in which the beneficiary is receiving the money i.e. where the bank account is based or where the cash is being picked up."
                                                    },
                                                    "requiredAlternatives": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "group": {
                                                                    "type": "string",
                                                                    "description": "A textual label of this set of alternatives."
                                                                },
                                                                "data": {
                                                                    "type": "array",
                                                                    "description": "A list of lists. Each of the internal lists is the apiName for the required detail inside the alternative set."
                                                                }
                                                            },
                                                            "required": [
                                                                "group"
                                                            ]
                                                        },
                                                        "description": "If part of the requirements have an either/or requirement then this is listed here. For example, when specifying a bank account in GB, you can present either an IBAN or the Sort Code along with the Account Number. This will correlate with \"required\":\"BY_GROUP\" inside\nthe fields."
                                                    },
                                                    "fields": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "apiName": {
                                                                    "type": "string",
                                                                    "description": "The literal name of this field on the API endpoint it refers to. For example, there will be a field on the bank-accounts resource endpoint with name `bankCode`"
                                                                },
                                                                "localName": {
                                                                    "type": "string",
                                                                    "description": "The local (in the country for which is being created) name. For example, `bankCode` refers to any way to identify a single bank in the world, but in GB they identify a bank using the `Sort Code`."
                                                                },
                                                                "regex": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A regex to check entered information against"
                                                                },
                                                                "minLength": {
                                                                    "type": "number",
                                                                    "description": "The minimum length that entered information can be for this field"
                                                                },
                                                                "maxLength": {
                                                                    "type": "number",
                                                                    "description": "The maximum length that entered information can be for this field"
                                                                },
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "string",
                                                                        "address",
                                                                        "datetime"
                                                                    ],
                                                                    "description": "Which of the `primitives` you must provide here."
                                                                },
                                                                "errorMessage": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "An error message to show if the entered information doesn't match the regex"
                                                                },
                                                                "explanationMessage": {
                                                                    "type": "string",
                                                                    "description": "A message to explain what this field means and possibly how to find it"
                                                                },
                                                                "explanationPicture": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A URL to a picture that helps to explain where to find the information"
                                                                },
                                                                "allowedValues": {
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ],
                                                                    "description": "If this field is restricted to a list of possible values then the possible values are listed here"
                                                                },
                                                                "group": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A way of grouping required fields together, for example you'd want to ask for all name fields in the same section."
                                                                },
                                                                "required": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "YES",
                                                                        "NO",
                                                                        "BY_GROUP"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "apiName",
                                                                "localName",
                                                                "minLength",
                                                                "maxLength",
                                                                "required"
                                                            ]
                                                        },
                                                        "description": "Detail about the required details fields."
                                                    }
                                                },
                                                "required": [
                                                    "requirementsType",
                                                    "requirementsSubType",
                                                    "countryCode",
                                                    "requiredAlternatives",
                                                    "fields"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "type",
                                            "attributes"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Bank account in Mexico",
                "description": "+ `requirementsType=payment-details`\n\n+ `requirementsSubType=bank-account`\n\n+ `countryCode=MX`",
                "tags": [
                    "Required Details"
                ],
                "parameters": [],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/transfer-stores": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": [
                                    {
                                        "type": "transfer-stores",
                                        "id": "cded0f35-4322-4527-bb7e-ca42bbc9015b",
                                        "attributes": {
                                            "storeName": "Whitehouse",
                                            "countryCode": "US",
                                            "address": {
                                                "houseNumber": "1600",
                                                "street1": "Pennsylvania Avenue",
                                                "city": "Washington",
                                                "state": "DC",
                                                "postalCode": "20500",
                                                "countryCode": "US"
                                            },
                                            "openingHours": "Mon - Sat: 09:00 - 20:00 Hrs"
                                        },
                                        "relationships": {
                                            "limits": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/transfer-stores/cded0f35-4322-4527-bb7e-ca42bbc9015b/relationships/limits",
                                                    "related": "http://localhost:8082/api/transfer-stores/cded0f35-4322-4527-bb7e-ca42bbc9015b/limits"
                                                }
                                            }
                                        },
                                        "links": {
                                            "self": "http: //localhost:8082/api/transfer-stores/cded0f35-4322-4527-bb7e-ca42bbc9015b"
                                        }
                                    }
                                ],
                                "links": {
                                    "first": "http://localhost:8082/api/transfer-stores?page[limit]=20",
                                    "last": "http://localhost:8082/api/transfer-stores?page[limit]=20&page[offset]=540",
                                    "next": "http://localhost:8082/api/transfer-stores?page[limit]=20&page[offset]=20"
                                },
                                "meta": {
                                    "totalResourceCount": 558
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "storeName": {
                                                        "type": "string",
                                                        "description": "The name of the store."
                                                    },
                                                    "countryCode": {
                                                        "type": "string",
                                                        "description": "The country the store is in - this should match the country code in the store's address"
                                                    },
                                                    "address": {
                                                        "type": "object",
                                                        "properties": {
                                                            "houseNumber": {
                                                                "type": "string"
                                                            },
                                                            "street1": {
                                                                "type": "string"
                                                            },
                                                            "city": {
                                                                "type": "string"
                                                            },
                                                            "state": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "postalCode": {
                                                                "type": "string"
                                                            },
                                                            "countryCode": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "houseNumber",
                                                            "street1",
                                                            "city",
                                                            "postalCode",
                                                            "countryCode"
                                                        ],
                                                        "description": "The address of the store."
                                                    },
                                                    "openingHours": {
                                                        "type": "string",
                                                        "description": "A description of the store's opening hours."
                                                    }
                                                },
                                                "required": [
                                                    "storeName",
                                                    "countryCode",
                                                    "address"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "attributes"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Get Stores",
                "description": "Gets all available stores from which cash can be collected. Typically requests are filtered, for example `GET /transfer-stores?filter[countryCode]=US`.",
                "tags": [
                    "Stores"
                ],
                "parameters": [],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/transfer-store-limits": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": [
                                    {
                                        "type": "transfer-store-limits",
                                        "id": "7dd3d336-26fa-4a61-b25a-f61e70d7964b",
                                        "attributes": {
                                            "currencyCode": "EUR",
                                            "maxAmount": "1000"
                                        },
                                        "relationships": {
                                            "store": {
                                                "links": {
                                                    "self": "http://localhost:8082/api/transfer-store-limits/7dd3d336-26fa-4a61-b25a-f61e70d7964b/relationships/transfer-stores",
                                                    "related": "http://localhost:8082/api/transfer-store-limits/7dd3d336-26fa-4a61-b25a-f61e70d7964b/transfer-stores"
                                                }
                                            }
                                        }
                                    }
                                ],
                                "links": {
                                    "first": "http://localhost:8082/api/transfer-store-limits?page[limit]=20",
                                    "last": "http://localhost:8082/api/transfer-store-limits?page[limit]=20&page[offset]=540",
                                    "next": "http://localhost:8082/api/transfer-store-limits?page[limit]=20&page[offset]=20"
                                },
                                "meta": {
                                    "totalResourceCount": 558
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "currencyCode": {
                                                        "type": "string",
                                                        "description": "The currency this limit is specified in"
                                                    },
                                                    "maxAmount": {
                                                        "type": "string",
                                                        "description": "The maximum amount of this currency which can be collected from the corresponding store."
                                                    }
                                                },
                                                "required": [
                                                    "currencyCode",
                                                    "maxAmount"
                                                ]
                                            },
                                            "`relationships` Transfer store limits relationships, required)": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "attributes"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Get Limits",
                "description": "_COMMENT: Not obvious to me how to use this one?_\n\nGets the transfer limits for each store. This is necessary because each store has different maximum payout amounts for each currency stocked.",
                "tags": [
                    "Stores"
                ],
                "parameters": [],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/transfer-store-countries": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": [
                                    {
                                        "type": "transfer-store-countries",
                                        "id": "GB",
                                        "attributes": {
                                            "collectAnywhere": true
                                        },
                                        "links": {
                                            "self": "http: //localhost:8082/api/transfer-store-countries/GB"
                                        }
                                    }
                                ],
                                "links": {
                                    "first": "http://localhost:8082/api/transfer-store-countries?page[limit]=20",
                                    "last": "http://localhost:8082/api/transfer-store-countries?page[limit]=20&page[offset]=540",
                                    "next": "http://localhost:8082/api/transfer-store-countries?page[limit]=20&page[offset]=20"
                                },
                                "meta": {
                                    "totalResourceCount": 558
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "collectAnywhere": {
                                                        "type": "boolean",
                                                        "description": "Whether or not this country supports collection from any store, without having to specify the store in advance."
                                                    }
                                                },
                                                "required": [
                                                    "collectAnywhere"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "attributes"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Get Countries",
                "description": "Get the ```collectAnywhere``` value for stores in this country.",
                "tags": [
                    "Stores"
                ],
                "parameters": [],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/transfers": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": {
                                    "id": "f5f4bdb7-0e08-491a-a1bb-cf1aecc84093",
                                    "type": "transfers",
                                    "attributes": {
                                        "status": "DRAFT",
                                        "deliveryMethod": "SWIFT",
                                        "purpose": "Charitable donation",
                                        "reference": "Donation from Tim",
                                        "audit": {
                                            "createdAt": "2018-08-18T12:00:00.000Z",
                                            "createdBy": "Travelex"
                                        },
                                        "externalId": null,
                                        "partnerId": "US-WBK-20180404-1-2"
                                    },
                                    "relationships": {
                                        "quote": {
                                            "data": {
                                                "id": "5be6fd38-2c67-4db7-9473-46bcadbffcda",
                                                "type": "quotes"
                                            },
                                            "links": {
                                                "self": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/relationships/quote",
                                                "related": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/quote"
                                            }
                                        },
                                        "customerPaymentDetails": {
                                            "data": {
                                                "id": "81354794-21d9-4f25-8511-996ac59c6d45",
                                                "type": "payment-details"
                                            },
                                            "links": {
                                                "self": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/relationships/customerPaymentDetails",
                                                "related": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/customerPaymentDetails"
                                            }
                                        },
                                        "beneficiaryPaymentDetails": {
                                            "data": {
                                                "id": "2325b9a3-0a07-4de2-b7ed-529bf93b86e9",
                                                "type": "payment-details"
                                            },
                                            "links": {
                                                "self": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/relationships/beneficiaryPaymentDetails",
                                                "related": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/beneficiaryPaymentDetails"
                                            }
                                        },
                                        "additionalRequirements": {
                                            "data": {
                                                "id": "a8a873bf-3226-40e6-811a-fcf4c87690fe",
                                                "type": "additional-requirements"
                                            },
                                            "links": {
                                                "self": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/relationships/beneficiaryPaymentDetails",
                                                "related": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/beneficiaryPaymentDetails"
                                            }
                                        }
                                    },
                                    "links": {
                                        "self": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "audit": {
                                                    "type": "object",
                                                    "properties": {
                                                        "createdAt": {
                                                            "type": "string",
                                                            "description": "When this resource was created."
                                                        },
                                                        "createdBy": {
                                                            "type": "string",
                                                            "description": "Which user created this resource."
                                                        }
                                                    },
                                                    "required": [
                                                        "createdAt",
                                                        "createdBy"
                                                    ],
                                                    "description": "Audit details for this resource"
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID this resource was created against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID this resource was created with"
                                                },
                                                "deliveryMethod": {
                                                    "type": "string",
                                                    "enum": [
                                                        "SWIFT",
                                                        "LOCAL",
                                                        "CASH"
                                                    ],
                                                    "description": "The delivery method to be used for this transfer."
                                                },
                                                "purpose": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Purchase of Good(s)",
                                                        "Purchase of Service(s)",
                                                        "Professional fees payment (i.e. legal, accountant)",
                                                        "Payroll/Personnel payment",
                                                        "Payment for a loan or deposit",
                                                        "Bill payment (i.e. credit card, utility)",
                                                        "Research and Development",
                                                        "Business venture (i.e. merger, acquisition)",
                                                        "Intercompany payment",
                                                        "Charitable donation",
                                                        "Purchase of property / real estate",
                                                        "Estate settlement / Inheritance",
                                                        "Government related payment",
                                                        "Investment related payment",
                                                        "Other"
                                                    ],
                                                    "description": "The purpose of this transfer, required for regulatory purposes before this transfer will be accepted."
                                                },
                                                "reference": {
                                                    "type": "string",
                                                    "description": "The reference which for bank transfers may appear on the beneficiaries bank statement."
                                                },
                                                "encryptedPaymentData": {
                                                    "type": "string",
                                                    "description": "Encrypted payment data, which must be provided to have transfers funded by tokenized card accepted."
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "DRAFT",
                                                        "ACCEPTED",
                                                        "AWAITING_COLLECTION",
                                                        "COMPLETED",
                                                        "CANCELLED",
                                                        "FAILED"
                                                    ],
                                                    "description": "The status of the transfer."
                                                }
                                            },
                                            "required": [
                                                "deliveryMethod",
                                                "status"
                                            ]
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "quote": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "description": "The quote to be used for this transfer."
                                                },
                                                "customerPaymentDetails": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "description": "Details about how the transfer is to be funded."
                                                },
                                                "beneficiaryPaymentDetails": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "description": "Details about how funds are to be received."
                                                },
                                                "additionalRequirements": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "description": "Additional details required about the customer in order for the transfer to be accepted, specified in the same format as the required-details resource."
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes",
                                        "relationships"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Create transfer",
                "description": "",
                "tags": [
                    "Transfers"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "deliveryMethod": {
                                                    "type": "string",
                                                    "enum": [
                                                        "SWIFT",
                                                        "LOCAL",
                                                        "CASH"
                                                    ],
                                                    "description": "The delivery method to be used for this transfer."
                                                },
                                                "purpose": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Purchase of Good(s)",
                                                        "Purchase of Service(s)",
                                                        "Professional fees payment (i.e. legal, accountant)",
                                                        "Payroll/Personnel payment",
                                                        "Payment for a loan or deposit",
                                                        "Bill payment (i.e. credit card, utility)",
                                                        "Research and Development",
                                                        "Business venture (i.e. merger, acquisition)",
                                                        "Intercompany payment",
                                                        "Charitable donation",
                                                        "Purchase of property / real estate",
                                                        "Estate settlement / Inheritance",
                                                        "Government related payment",
                                                        "Investment related payment",
                                                        "Other"
                                                    ],
                                                    "description": "The purpose of this transfer, required for regulatory purposes before this transfer will be accepted."
                                                },
                                                "reference": {
                                                    "type": "string",
                                                    "description": "The reference which for bank transfers may appear on the beneficiaries bank statement."
                                                },
                                                "encryptedPaymentData": {
                                                    "type": "string",
                                                    "description": "Encrypted payment data, which must be provided to have transfers funded by tokenized card accepted."
                                                }
                                            },
                                            "required": [
                                                "deliveryMethod"
                                            ]
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "quote": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "description": "The quote to be used for this transfer."
                                                },
                                                "customerPaymentDetails": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "description": "Details about how the transfer is to be funded."
                                                },
                                                "beneficiaryPaymentDetails": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "description": "Details about how funds are to be received."
                                                },
                                                "additionalRequirements": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "description": "Additional details required about the customer in order for the transfer to be accepted, specified in the same format as the required-details resource."
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes",
                                        "relationships"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ],
                            "example": {
                                "data": {
                                    "type": "transfers",
                                    "attributes": {
                                        "deliveryMethod": "SWIFT",
                                        "purpose": "Charitable donation",
                                        "reference": "Donation from Tim"
                                    },
                                    "relationships": {
                                        "quote": {
                                            "data": {
                                                "type": "quotes",
                                                "id": "cddcd301-a58e-4e7a-8663-581429d42d72"
                                            }
                                        },
                                        "customerPaymentDetails": {
                                            "data": {
                                                "type": "tokenized-cards",
                                                "id": "6ec6316e-4689-4fa0-bdf8-5bd0042f085f"
                                            }
                                        },
                                        "beneficiaryPaymentDetails": {
                                            "data": {
                                                "type": "bank-accounts",
                                                "id": "b5fec1af-b242-4b61-8593-8d41b78b16fb"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/transfers/{id}": {
            "patch": {
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Transfer error"
                        }
                    }
                },
                "summary": "Card decline",
                "description": "Once a transfer has all the required information to be accepted, then as encrypted payment data is added Travelex will synchronously authorise funds for the transfer. If this authorisation is not approved then a 400 response will be returned.",
                "tags": [
                    "Transfers"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transfer ID (`id`)",
                        "required": true,
                        "x-example": "f5f4bdb7-0e08-491a-a1bb-cf1aecc84093",
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "deliveryMethod": {
                                                    "type": "string",
                                                    "enum": [
                                                        "SWIFT",
                                                        "LOCAL",
                                                        "CASH"
                                                    ],
                                                    "description": "The delivery method to be used for this transfer."
                                                },
                                                "purpose": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Purchase of Good(s)",
                                                        "Purchase of Service(s)",
                                                        "Professional fees payment (i.e. legal, accountant)",
                                                        "Payroll/Personnel payment",
                                                        "Payment for a loan or deposit",
                                                        "Bill payment (i.e. credit card, utility)",
                                                        "Research and Development",
                                                        "Business venture (i.e. merger, acquisition)",
                                                        "Intercompany payment",
                                                        "Charitable donation",
                                                        "Purchase of property / real estate",
                                                        "Estate settlement / Inheritance",
                                                        "Government related payment",
                                                        "Investment related payment",
                                                        "Other"
                                                    ],
                                                    "description": "The purpose of this transfer, required for regulatory purposes before this transfer will be accepted."
                                                },
                                                "reference": {
                                                    "type": "string",
                                                    "description": "The reference which for bank transfers may appear on the beneficiaries bank statement."
                                                },
                                                "encryptedPaymentData": {
                                                    "type": "string",
                                                    "description": "Encrypted payment data, which must be provided to have transfers funded by tokenized card accepted."
                                                }
                                            },
                                            "required": [
                                                "deliveryMethod"
                                            ]
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "quote": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "description": "The quote to be used for this transfer."
                                                },
                                                "customerPaymentDetails": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "description": "Details about how the transfer is to be funded."
                                                },
                                                "beneficiaryPaymentDetails": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "description": "Details about how funds are to be received."
                                                },
                                                "additionalRequirements": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "description": "Additional details required about the customer in order for the transfer to be accepted, specified in the same format as the required-details resource."
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes",
                                        "relationships"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ],
                            "example": {
                                "data": {
                                    "attributes": {
                                        "encryptedPaymentData": "eyJhbGciOiJSU0ExXzUiLCJraWQiOiJoZ2EreTBvZEwwcU5MSVlqNEtLTmUyL1l4VjFpTlhCSFhlYWZzTmdvemFFPSIsInR5cCI6IkpPU0UiLCJjaGFubmVsU2VjdXJpdHlDb250ZXh0IjoiUlNBX1BLSSIsImVuYyI6IkExMjhHQ00ifQ.ZwCN5leweMyhsG8v176E0ijExMfvMWqO0BO7dnQSMuhGKy3uEj0eoHJvtZSKq6pPlVqUgIFnvMtfsbM05Btq3EKRS1upd__hJa1m5toZtw1OH6uk5Uo9BA3tUlSOGbc-AKhdi2ESUR-zOAwnMfuMWxhBLeBPYZXW5p4aaqUDSoKWzvvIOgBDmeks9wp3EACPGvky0fw-DzFdxMhQGJA2--ufWIo_qtvd5KzIA2FIRAYWeULYfF8XowFzMjb-HqZvs5RRLIUTF5F0wdWwSa7b3RKtyR_Sc2iNOV1rh4hAYejRVyc4r4Hou8va_3Dud8B1gk4dgAH_tLb_LHB1NetAWA.r_ppy5MWhXUW_4wD.oggp8bZcEa-LUaFLnriwFnrk8cqNyZ-TOyJbeJxfjt7Q9ZaEi-p8ViUfMwiHaggp6UmzHudT4iO2-TFMgQIEUJrm5GyryReOZ7RqWgc4v5UA1a5lvTFIdmPfDBks33zpWan_WfPmYyUhSBOCy3KFXkxBQCn_P6fgu9yEN_Vq8CrhqigBsPQrG1o0cNGLWlnLd-B67xUmnlYN_iQsq7d2PH3tI34GGMfvJR-9KdZB3INjQT2nRn2F22E.yw0DoUb0X7Z_cXFR-OIDjQ"
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": {
                                    "id": "f5f4bdb7-0e08-491a-a1bb-cf1aecc84093",
                                    "type": "transfers",
                                    "attributes": {
                                        "status": "ACCEPTED",
                                        "deliveryMethod": "SWIFT",
                                        "purpose": "Charitable donation",
                                        "reference": "Donation from Tim",
                                        "audit": {
                                            "createdAt": "2018-08-18T12:00:00.000Z",
                                            "createdBy": "Travelex"
                                        },
                                        "externalId": null,
                                        "partnerId": "US-WBK-20180404-1-2",
                                        "encryptedPaymentData": "***"
                                    },
                                    "relationships": {
                                        "quote": {
                                            "data": {
                                                "id": "5be6fd38-2c67-4db7-9473-46bcadbffcda",
                                                "type": "quotes"
                                            },
                                            "links": {
                                                "self": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/relationships/quote",
                                                "related": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/quote"
                                            }
                                        },
                                        "customerPaymentDetails": {
                                            "data": {
                                                "id": "81354794-21d9-4f25-8511-996ac59c6d45",
                                                "type": "payment-details"
                                            },
                                            "links": {
                                                "self": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/relationships/customerPaymentDetails",
                                                "related": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/customerPaymentDetails"
                                            }
                                        },
                                        "beneficiaryPaymentDetails": {
                                            "data": {
                                                "id": "2325b9a3-0a07-4de2-b7ed-529bf93b86e9",
                                                "type": "payment-details"
                                            },
                                            "links": {
                                                "self": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/relationships/beneficiaryPaymentDetails",
                                                "related": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093/beneficiaryPaymentDetails"
                                            }
                                        }
                                    },
                                    "links": {
                                        "self": "http://localhost:8082/api/transfers/f5f4bdb7-0e08-491a-a1bb-cf1aecc84093"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "properties": {
                                                "audit": {
                                                    "type": "object",
                                                    "properties": {
                                                        "createdAt": {
                                                            "type": "string",
                                                            "description": "When this resource was created."
                                                        },
                                                        "createdBy": {
                                                            "type": "string",
                                                            "description": "Which user created this resource."
                                                        }
                                                    },
                                                    "required": [
                                                        "createdAt",
                                                        "createdBy"
                                                    ],
                                                    "description": "Audit details for this resource"
                                                },
                                                "partnerId": {
                                                    "type": "string",
                                                    "description": "The partner ID this resource was created against"
                                                },
                                                "externalId": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The external ID this resource was created with"
                                                },
                                                "deliveryMethod": {
                                                    "type": "string",
                                                    "enum": [
                                                        "SWIFT",
                                                        "LOCAL",
                                                        "CASH"
                                                    ],
                                                    "description": "The delivery method to be used for this transfer."
                                                },
                                                "purpose": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Purchase of Good(s)",
                                                        "Purchase of Service(s)",
                                                        "Professional fees payment (i.e. legal, accountant)",
                                                        "Payroll/Personnel payment",
                                                        "Payment for a loan or deposit",
                                                        "Bill payment (i.e. credit card, utility)",
                                                        "Research and Development",
                                                        "Business venture (i.e. merger, acquisition)",
                                                        "Intercompany payment",
                                                        "Charitable donation",
                                                        "Purchase of property / real estate",
                                                        "Estate settlement / Inheritance",
                                                        "Government related payment",
                                                        "Investment related payment",
                                                        "Other"
                                                    ],
                                                    "description": "The purpose of this transfer, required for regulatory purposes before this transfer will be accepted."
                                                },
                                                "reference": {
                                                    "type": "string",
                                                    "description": "The reference which for bank transfers may appear on the beneficiaries bank statement."
                                                },
                                                "encryptedPaymentData": {
                                                    "type": "string",
                                                    "description": "Encrypted payment data, which must be provided to have transfers funded by tokenized card accepted."
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "DRAFT",
                                                        "ACCEPTED",
                                                        "AWAITING_COLLECTION",
                                                        "COMPLETED",
                                                        "CANCELLED",
                                                        "FAILED"
                                                    ],
                                                    "description": "The status of the transfer."
                                                }
                                            },
                                            "required": [
                                                "deliveryMethod",
                                                "status"
                                            ]
                                        },
                                        "relationships": {
                                            "type": "object",
                                            "properties": {
                                                "quote": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "description": "The quote to be used for this transfer."
                                                },
                                                "customerPaymentDetails": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "description": "Details about how the transfer is to be funded."
                                                },
                                                "beneficiaryPaymentDetails": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "description": "Details about how funds are to be received."
                                                },
                                                "additionalRequirements": {
                                                    "type": "object",
                                                    "properties": {},
                                                    "description": "Additional details required about the customer in order for the transfer to be accepted, specified in the same format as the required-details resource."
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "attributes",
                                        "relationships"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Get transfer",
                "description": "For an example on how to retrieve transfers for a particular customer, see the [customer relationships section](/#reference/customers/relationships/transfers).",
                "tags": [
                    "Transfers"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transfer ID (`id`)",
                        "required": true,
                        "x-example": "3ccc19e7-e18c-4cb5-b4b5-11ba8642ad4b",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        },
        "/transfers/{id}/relationships/additionalRequirements": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/vnd.api+json; charset=utf-8": {
                                "data": [
                                    {
                                        "id": "a4a6e322-24bb-44ba-aad6-72a91b2ca218",
                                        "type": "required-details",
                                        "attributes": {
                                            "requiredAlternatives": [],
                                            "countryCode": "US",
                                            "requirementsType": "customer",
                                            "requirementsSubType": "individual",
                                            "fields": [
                                                {
                                                    "localName": "Passport Photo",
                                                    "apiName": "documents",
                                                    "regex": null,
                                                    "minLength": null,
                                                    "maxLength": null,
                                                    "type": "document",
                                                    "errorMessage": null,
                                                    "explanationMessage": "A photo of your passport",
                                                    "allowedValues": null,
                                                    "group": null,
                                                    "required": "YES",
                                                    "explanationPicture": null
                                                }
                                            ]
                                        },
                                        "links": {
                                            "self": "http://localhost:8082/api/required-details/a4a6e322-24bb-44ba-aad6-72a91b2ca218",
                                            "upload": "http://localhost:8082/api/documents/type/passport/owner/762b2e06-2855-40b1-9ca5-cf56571371e6"
                                        }
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "description": "The UUID of this required detail"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "attributes": {
                                                "type": "object",
                                                "properties": {
                                                    "requirementsType": {
                                                        "type": "string",
                                                        "enum": [
                                                            "address",
                                                            "beneficiary",
                                                            "customer",
                                                            "payment-details"
                                                        ],
                                                        "description": "The base type for which this requirement is relevant. For example, to retrieve required details for the individual-customer endpoint, you should look for required details with requirementsType=customer and requirementsSubType=individual."
                                                    },
                                                    "requirementsSubType": {
                                                        "type": "string",
                                                        "enum": [
                                                            "address",
                                                            "individual",
                                                            "company",
                                                            "bank-account",
                                                            "tokenized-card"
                                                        ]
                                                    },
                                                    "countryCode": {
                                                        "type": "string",
                                                        "description": "The country code for which these required details are relevant. This refers to different countries depending on the endpoint. For example, when creating a beneficiary, this refers\nto the country in which the beneficiary is receiving the money i.e. where the bank account is based or where the cash is being picked up."
                                                    },
                                                    "requiredAlternatives": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "group": {
                                                                    "type": "string",
                                                                    "description": "A textual label of this set of alternatives."
                                                                },
                                                                "data": {
                                                                    "type": "array",
                                                                    "description": "A list of lists. Each of the internal lists is the apiName for the required detail inside the alternative set."
                                                                }
                                                            },
                                                            "required": [
                                                                "group"
                                                            ]
                                                        },
                                                        "description": "If part of the requirements have an either/or requirement then this is listed here. For example, when specifying a bank account in GB, you can present either an IBAN or the Sort Code along with the Account Number. This will correlate with \"required\":\"BY_GROUP\" inside\nthe fields."
                                                    },
                                                    "fields": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "apiName": {
                                                                    "type": "string",
                                                                    "description": "The literal name of this field on the API endpoint it refers to. For example, there will be a field on the bank-accounts resource endpoint with name `bankCode`"
                                                                },
                                                                "localName": {
                                                                    "type": "string",
                                                                    "description": "The local (in the country for which is being created) name. For example, `bankCode` refers to any way to identify a single bank in the world, but in GB they identify a bank using the `Sort Code`."
                                                                },
                                                                "regex": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A regex to check entered information against"
                                                                },
                                                                "minLength": {
                                                                    "type": "number",
                                                                    "description": "The minimum length that entered information can be for this field"
                                                                },
                                                                "maxLength": {
                                                                    "type": "number",
                                                                    "description": "The maximum length that entered information can be for this field"
                                                                },
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "string",
                                                                        "address",
                                                                        "datetime"
                                                                    ],
                                                                    "description": "Which of the `primitives` you must provide here."
                                                                },
                                                                "errorMessage": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "An error message to show if the entered information doesn't match the regex"
                                                                },
                                                                "explanationMessage": {
                                                                    "type": "string",
                                                                    "description": "A message to explain what this field means and possibly how to find it"
                                                                },
                                                                "explanationPicture": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A URL to a picture that helps to explain where to find the information"
                                                                },
                                                                "allowedValues": {
                                                                    "type": [
                                                                        "array",
                                                                        "null"
                                                                    ],
                                                                    "description": "If this field is restricted to a list of possible values then the possible values are listed here"
                                                                },
                                                                "group": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "description": "A way of grouping required fields together, for example you'd want to ask for all name fields in the same section."
                                                                },
                                                                "required": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "YES",
                                                                        "NO",
                                                                        "BY_GROUP"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "apiName",
                                                                "localName",
                                                                "minLength",
                                                                "maxLength",
                                                                "required"
                                                            ]
                                                        },
                                                        "description": "Detail about the required details fields."
                                                    }
                                                },
                                                "required": [
                                                    "requirementsType",
                                                    "requirementsSubType",
                                                    "countryCode",
                                                    "requiredAlternatives",
                                                    "fields"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "type",
                                            "attributes"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "data"
                            ]
                        }
                    }
                },
                "summary": "Get additional requirements",
                "description": "",
                "tags": [
                    "Transfers"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transfer ID (`id`)",
                        "required": true,
                        "x-example": "f5f4bdb7-0e08-491a-a1bb-cf1aecc84093",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/vnd.api+json; charset=utf-8"
                ]
            }
        }
    },
    "definitions": {
        "Login": {},
        "General": {},
        "Individuals": {},
        "Companies": {},
        "Corridors": {},
        "Currencies": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Currency data"
                    }
                }
            }
        },
        "Individual": {},
        "Company": {},
        "Relationships": {
            "type": "object",
            "required": [
                "paymentDetails"
            ],
            "properties": {
                "paymentDetails": {
                    "$ref": "#/definitions/RelationshipData"
                }
            }
        },
        "Documents": {},
        "Hooks": {},
        "Bank Accounts": {},
        "Tokenized Cards": {},
        "Stores": {},
        "Quotes": {},
        "Required Details": {},
        "Store Limits": {},
        "Store Country Restrictions": {},
        "Transfers": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Transfer data"
                    }
                }
            }
        },
        "Additional Requirements": {},
        "Errors": {},
        "Creatable attributes req": {
            "type": "object",
            "properties": {
                "partnerId": {
                    "type": "string",
                    "description": "The partner ID to create this resource against"
                },
                "externalId": {
                    "type": "string",
                    "description": "The external ID to add to this resource"
                }
            }
        },
        "Creatable attributes resp": {
            "type": "object",
            "properties": {
                "audit": {
                    "$ref": "#/definitions/Audit details",
                    "description": "Audit details for this resource"
                },
                "partnerId": {
                    "type": "string",
                    "description": "The partner ID this resource was created against"
                },
                "externalId": {
                    "type": "string",
                    "description": "The external ID this resource was created with"
                }
            }
        },
        "Currency data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Currency attributes"
                }
            }
        },
        "Currency attributes": {
            "type": "object",
            "required": [
                "decimalPlaces",
                "name"
            ],
            "properties": {
                "decimalPlaces": {
                    "type": "number",
                    "description": "The exponent of the minor currency unit."
                },
                "name": {
                    "type": "string",
                    "description": "The full name of the currency."
                }
            }
        },
        "Corridor": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Corridor data"
                    }
                }
            }
        },
        "Corridor data": {
            "type": "object",
            "required": [
                "type",
                "attributes",
                "relationships"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Corridor attributes"
                },
                "relationships": {
                    "$ref": "#/definitions/Corridor relationships"
                }
            }
        },
        "Corridor attributes": {
            "type": "object",
            "required": [
                "sendCountryCode",
                "sendCurrencyCode",
                "receiveCountryCode",
                "receiveCurrencyCode",
                "minSendAmount",
                "maxSendAmount"
            ],
            "properties": {
                "sendCountryCode": {
                    "type": "string",
                    "description": "The country from which the transfer is originating."
                },
                "sendCurrencyCode": {
                    "type": "string",
                    "description": "The currency of the payment details being used to fund the transfer."
                },
                "receiveCountryCode": {
                    "type": "string",
                    "description": "The country that the currency is being received in."
                },
                "receiveCurrencyCode": {
                    "type": "string",
                    "description": "The currency of the payment details receiving the money."
                },
                "minSendAmount": {
                    "type": "string",
                    "description": "The minimum amount in the send currency which can be sent through this corridor."
                },
                "maxSendAmount": {
                    "type": "string",
                    "description": "The maximum amount in the send currency which can be sent through this corridor."
                }
            }
        },
        "Corridor relationships": {
            "type": "object",
            "required": [
                "sendCurrencyCodeDetails",
                "receiveCurrencyCodeDetails"
            ],
            "properties": {
                "sendCurrencyCodeDetails": {
                    "type": "object",
                    "properties": {},
                    "description": "More information about the sendCurrencyCode."
                },
                "receiveCurrencyCodeDetails": {
                    "type": "object",
                    "properties": {},
                    "description": "More information about the receiveCurrencyCode."
                }
            }
        },
        "Addresses": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Address data"
                    }
                }
            }
        },
        "Address data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Address"
                }
            }
        },
        "Create bank account": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Create bank account data"
                }
            }
        },
        "Create bank account data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Create bank account attributes"
                }
            }
        },
        "Create bank account attributes": {
            "type": "object",
            "required": [
                "countryCode"
            ],
            "properties": {
                "branchCode": {
                    "type": "string",
                    "description": "An identifier of the branch the bank account is held at underneath the bank code (Transit code in Canada for example)"
                },
                "bicSwiftCode": {
                    "type": "string",
                    "description": "BIC/SWIFT code of the bank."
                },
                "iban": {
                    "type": "string",
                    "description": "IBAN of the bank account."
                },
                "accountType": {
                    "type": "string",
                    "enum": [
                        "CHECKING",
                        "SAVINGS"
                    ],
                    "description": "What type of bank account this is."
                },
                "intermediaryBankBicSwiftCode": {
                    "type": "string",
                    "description": "Optionally tell us to route payments to this bank account via the intermediary bank with this BIC/SWIFT code."
                },
                "countryCode": {
                    "type": "string",
                    "description": "The country in which this bank account is registered."
                },
                "bankCode": {
                    "type": "string",
                    "description": "An identifier of the bank that is not a BIC/SWIFT code (Sort Code in GB for example)"
                },
                "accountNumber": {
                    "type": "string",
                    "description": "The account number of this bank account (not an IBAN)."
                }
            }
        },
        "Bank account": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Bank account data"
                }
            }
        },
        "Bank accounts": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Bank account data"
                    }
                }
            }
        },
        "Bank account data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Bank account attributes"
                }
            }
        },
        "Bank account attributes": {
            "type": "object",
            "properties": {
                "bankName": {
                    "type": "string",
                    "description": "The name of the bank"
                }
            }
        },
        "Create tokenized card": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Create tokenized card data"
                }
            }
        },
        "Create tokenized card data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Create tokenized card attributes"
                }
            }
        },
        "Create tokenized card attributes": {
            "type": "object",
            "required": [
                "countryCode",
                "cardScheme",
                "expirationMonth",
                "expirationYear"
            ],
            "properties": {
                "countryCode": {
                    "type": "string",
                    "description": "The country in which this card was issued."
                },
                "cardScheme": {
                    "type": "string",
                    "enum": [
                        "VISA",
                        "MASTERCARD",
                        "AMEX"
                    ]
                },
                "expirationMonth": {
                    "type": "number",
                    "description": "The month of the year in which this card expires"
                },
                "expirationYear": {
                    "type": "number",
                    "description": "The year in which this card expires"
                }
            }
        },
        "Base individual": {
            "type": "object",
            "required": [
                "firstName",
                "lastName",
                "termsAndConditionsConsent"
            ],
            "properties": {
                "firstName": {
                    "type": "string",
                    "description": "The first name of the individual."
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name of the individual."
                },
                "termsAndConditionsConsent": {
                    "type": "boolean",
                    "description": "Whether or not the individual has agreed to the terms and conditions."
                },
                "address": {
                    "$ref": "#/definitions/Address",
                    "description": "The residential address of the individual (this may be in a different country)."
                },
                "email": {
                    "type": "string",
                    "description": "An email for the individual."
                },
                "nationalId": {
                    "type": "string",
                    "description": "An ID for individual in the country that the money is being sent from."
                },
                "dateOfBirth": {
                    "type": "string",
                    "description": "The Date of Birth of the individual in YYYY-MM-DD format"
                },
                "middleName": {
                    "type": "string",
                    "description": "The middle name of the individual."
                },
                "`acceptableDeliveryMethods` array[string]": {
                    "type": "string",
                    "description": "The delivery methods for which this individual has enough details to create a transfer."
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "The phone number of the individual including country code."
                }
            }
        },
        "Base individual customer": {
            "type": "object",
            "required": [
                "countryCode"
            ],
            "properties": {
                "countryCode": {
                    "type": "string",
                    "description": "The country in which this customer is conducting the financial transaction."
                }
            }
        },
        "Base individual beneficiary": {
            "type": "object",
            "required": [
                "countryCode"
            ],
            "properties": {
                "countryCode": {
                    "type": "string",
                    "description": "The country in which this beneficiary is receiving the money."
                }
            }
        },
        "Base company": {
            "type": "object",
            "required": [
                "officialName",
                "tradingName"
            ],
            "properties": {
                "officialName": {
                    "type": "string",
                    "description": "The legal name of the entity that appears on all official documents or legal papers"
                },
                "tradingName": {
                    "type": "string",
                    "description": "Any other name the ordering company is commonly known by or trades under"
                },
                "registrationNumber": {
                    "type": "string",
                    "description": "A tax or company registration number"
                },
                "email": {
                    "type": "string",
                    "description": "Email address of the company"
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "Phone number of the company including country code"
                },
                "address": {
                    "$ref": "#/definitions/Address",
                    "description": "Address of the company"
                },
                "`enoughDetailsFor` array[string]": {
                    "type": "string",
                    "description": "The delivery methods for which this company has enough details to create a transfer."
                }
            }
        },
        "Base company customer": {
            "type": "object",
            "required": [
                "countryCode"
            ],
            "properties": {
                "countryCode": {
                    "type": "string",
                    "description": "The country in which this customer is conducting the financial transaction."
                }
            }
        },
        "Base company beneficiary": {
            "type": "object",
            "required": [
                "countryCode"
            ],
            "properties": {
                "countryCode": {
                    "type": "string",
                    "description": "The country in which this beneficiary is receiving the money."
                }
            }
        },
        "Create individual customer": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Create individual customer data"
                }
            }
        },
        "Create individual customer data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Create individual customer attributes"
                },
                "relationships": {
                    "$ref": "#/definitions/Relationships"
                }
            }
        },
        "Create individual customer attributes": {
            "type": "object",
            "properties": {}
        },
        "Get required details response": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Required detail"
                    }
                }
            }
        },
        "Required detail": {
            "type": "object",
            "required": [
                "id",
                "type",
                "attributes"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The UUID of this required detail"
                },
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Required detail attributes"
                }
            }
        },
        "Required detail attributes": {
            "type": "object",
            "required": [
                "requirementsType",
                "requirementsSubType",
                "countryCode",
                "requiredAlternatives",
                "fields"
            ],
            "properties": {
                "requirementsType": {
                    "type": "string",
                    "enum": [
                        "address",
                        "beneficiary",
                        "customer",
                        "payment-details"
                    ],
                    "description": "The base type for which this requirement is relevant. For example, to retrieve required details for the individual-customer endpoint, you should look for required details with requirementsType=customer and requirementsSubType=individual."
                },
                "requirementsSubType": {
                    "type": "string",
                    "enum": [
                        "address",
                        "individual",
                        "company",
                        "bank-account",
                        "tokenized-card"
                    ]
                },
                "countryCode": {
                    "type": "string",
                    "description": "The country code for which these required details are relevant. This refers to different countries depending on the endpoint. For example, when creating a beneficiary, this refers\nto the country in which the beneficiary is receiving the money i.e. where the bank account is based or where the cash is being picked up."
                },
                "requiredAlternatives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Required alternatives"
                    },
                    "description": "If part of the requirements have an either/or requirement then this is listed here. For example, when specifying a bank account in GB, you can present either an IBAN or the Sort Code along with the Account Number. This will correlate with \"required\":\"BY_GROUP\" inside\nthe fields."
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Required Details Fields"
                    },
                    "description": "Detail about the required details fields."
                }
            }
        },
        "Required alternatives": {
            "type": "object",
            "required": [
                "group"
            ],
            "properties": {
                "group": {
                    "type": "string",
                    "description": "A textual label of this set of alternatives."
                },
                "data": {
                    "type": "array",
                    "items": {},
                    "description": "A list of lists. Each of the internal lists is the apiName for the required detail inside the alternative set."
                }
            }
        },
        "Required Details Fields": {
            "type": "object",
            "required": [
                "apiName",
                "localName",
                "minLength",
                "maxLength",
                "required"
            ],
            "properties": {
                "apiName": {
                    "type": "string",
                    "description": "The literal name of this field on the API endpoint it refers to. For example, there will be a field on the bank-accounts resource endpoint with name `bankCode`"
                },
                "localName": {
                    "type": "string",
                    "description": "The local (in the country for which is being created) name. For example, `bankCode` refers to any way to identify a single bank in the world, but in GB they identify a bank using the `Sort Code`."
                },
                "regex": {
                    "type": "string",
                    "description": "A regex to check entered information against"
                },
                "minLength": {
                    "type": "number",
                    "description": "The minimum length that entered information can be for this field"
                },
                "maxLength": {
                    "type": "number",
                    "description": "The maximum length that entered information can be for this field"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "string",
                        "address",
                        "datetime"
                    ],
                    "description": "Which of the `primitives` you must provide here."
                },
                "errorMessage": {
                    "type": "string",
                    "description": "An error message to show if the entered information doesn't match the regex"
                },
                "explanationMessage": {
                    "type": "string",
                    "description": "A message to explain what this field means and possibly how to find it"
                },
                "explanationPicture": {
                    "type": "string",
                    "description": "A URL to a picture that helps to explain where to find the information"
                },
                "allowedValues": {
                    "type": "array",
                    "items": {},
                    "description": "If this field is restricted to a list of possible values then the possible values are listed here"
                },
                "group": {
                    "type": "string",
                    "description": "A way of grouping required fields together, for example you'd want to ask for all name fields in the same section."
                },
                "required": {
                    "type": "string",
                    "enum": [
                        "YES",
                        "NO",
                        "BY_GROUP"
                    ]
                }
            }
        },
        "Create individual customer response": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Create individual customer response data"
                }
            }
        },
        "Create individual customer response data": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The UUID we have assigned to this customer"
                },
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Create individual customer response attributes"
                },
                "relationships": {
                    "$ref": "#/definitions/Relationships"
                }
            }
        },
        "Create individual customer response attributes": {
            "type": "object",
            "properties": {}
        },
        "Address": {
            "type": "object",
            "required": [
                "houseNumber",
                "street1",
                "city",
                "postalCode",
                "countryCode"
            ],
            "properties": {
                "houseNumber": {
                    "type": "string"
                },
                "street1": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                }
            }
        },
        "PaymentDetails": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Data12"
                }
            }
        },
        "RelationshipData": {
            "type": "object",
            "required": [
                "links"
            ],
            "properties": {
                "links": {
                    "$ref": "#/definitions/Links"
                }
            }
        },
        "LinksFurther": {
            "type": "object",
            "required": [
                "furtherInformation",
                "self"
            ],
            "properties": {
                "furtherInformation": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                }
            }
        },
        "Links": {
            "type": "object",
            "required": [
                "self",
                "related"
            ],
            "properties": {
                "self": {
                    "type": "string"
                },
                "related": {
                    "type": "string"
                }
            }
        },
        "Data12": {
            "type": "object",
            "required": [
                "type",
                "id"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "Create company customer": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Create company customer data"
                }
            }
        },
        "Create company customer data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Create company customer attrs"
                },
                "relationships": {
                    "$ref": "#/definitions/Relationships"
                }
            }
        },
        "Create company customer attrs": {
            "type": "object",
            "properties": {}
        },
        "Create company customer response": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Create company customer response data"
                }
            }
        },
        "Create company customer response data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Create company customer response attrs"
                },
                "relationships": {
                    "$ref": "#/definitions/Relationships"
                }
            }
        },
        "Create company customer response attrs": {
            "type": "object",
            "properties": {}
        },
        "Create individual beneficiary req": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Create individual beneficiary properties"
                    }
                }
            }
        },
        "Create individual beneficiary properties": {
            "type": "object",
            "required": [
                "type",
                "attributes",
                "relationships"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Create individual beneficiary attrs"
                },
                "relationships": {
                    "$ref": "#/definitions/Individual beneficiary relationships"
                }
            }
        },
        "Create individual beneficiary attrs": {
            "type": "object",
            "properties": {
                "countryCode": {
                    "type": "string",
                    "description": "The country code of the beneficiary."
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name of the beneficiary."
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name of the beneficiary."
                },
                "address": {
                    "$ref": "#/definitions/Address",
                    "description": "The residential address of the beneficiary (this may be in a different country)."
                },
                "email": {
                    "type": "string",
                    "description": "An email for the beneficiary."
                },
                "nationalId": {
                    "type": "string",
                    "description": "An ID for the beneficiary in the country that the money is being sent to."
                },
                "dateOfBirth": {
                    "type": "string",
                    "description": "The Date of Birth of the customer in YYYY-MM-DD format"
                },
                "middleName": {
                    "type": "string",
                    "description": "The middle name of the customer."
                }
            }
        },
        "Single individual beneficiary resp": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Individual beneficiary data"
                }
            }
        },
        "Multiple individual beneficiary resp": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Individual beneficiary data"
                    }
                }
            }
        },
        "Beneficiaries": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Individual beneficiary data"
                    }
                }
            }
        },
        "Individual beneficiary data": {
            "type": "object",
            "required": [
                "type",
                "attributes",
                "relationships"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Individual beneficiary attributes"
                },
                "relationships": {
                    "$ref": "#/definitions/Individual beneficiary relationships"
                }
            }
        },
        "Individual beneficiary attributes": {
            "type": "object",
            "properties": {
                "countryCode": {
                    "type": "string",
                    "description": "The country in which the beneficiary is receiving funds."
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name of the customer."
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name of the customer."
                },
                "address": {
                    "$ref": "#/definitions/Address",
                    "description": "The residential address of the beneficiary (this may be in a different country)."
                },
                "email": {
                    "type": "string",
                    "description": "An email address for the customer."
                },
                "nationalId": {
                    "type": "string",
                    "description": "An ID for customer in the country that the money is being sent to."
                },
                "dateOfBirth": {
                    "type": "string",
                    "description": "The Date of Birth of the customer in YYYY-MM-DD format"
                },
                "middleName": {
                    "type": "string",
                    "description": "The middle name of the customer."
                }
            }
        },
        "Individual beneficiary relationships": {
            "type": "object",
            "required": [
                "owner",
                "addresses",
                "paymentDetails"
            ],
            "properties": {
                "owner": {
                    "$ref": "#/definitions/RelationshipData"
                },
                "addresses": {
                    "$ref": "#/definitions/RelationshipData"
                },
                "paymentDetails": {
                    "$ref": "#/definitions/RelationshipData"
                }
            }
        },
        "Customer": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Data12"
                }
            }
        },
        "Create company beneficiary request": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Create company beneficiary data"
                }
            }
        },
        "Create company beneficiary data": {
            "type": "object",
            "required": [
                "type",
                "attributes",
                "relationships"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Create company beneficiary attrs"
                },
                "relationships": {
                    "$ref": "#/definitions/Individual beneficiary relationships"
                }
            }
        },
        "Create company beneficiary attrs": {
            "type": "object",
            "properties": {}
        },
        "Create company beneficiary response": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Create company beneficiary response data"
                }
            }
        },
        "Create company beneficiary response data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Create company beneficiary response attrs"
                },
                "relationships": {
                    "$ref": "#/definitions/Relationships"
                }
            }
        },
        "Create company beneficiary response attrs": {
            "type": "object",
            "properties": {}
        },
        "Create quote": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Create quote data"
                }
            }
        },
        "Create quote data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Create quote attributes"
                }
            }
        },
        "Create quote attributes": {
            "type": "object",
            "required": [
                "receiveCountryCode",
                "receiveCurrencyCode",
                "sendCountryCode",
                "sendCurrencyCode",
                "amountType",
                "amount"
            ],
            "properties": {
                "receiveCountryCode": {
                    "type": "string",
                    "description": "The country that the currency is being received in."
                },
                "receiveCurrencyCode": {
                    "type": "string",
                    "description": "The currency of the payment details that is receiving the money"
                },
                "sendCountryCode": {
                    "type": "string",
                    "description": "The country from which the transaction is originating."
                },
                "sendCurrencyCode": {
                    "type": "string",
                    "description": "The currency of the payment details which is being used to pay for the transaction."
                },
                "amountType": {
                    "type": "string",
                    "description": "Whether the amount you entered refers to the amount you want to receive (RECEIVE) or the amount to send (SEND). For example, if the customer\nwants to send 100 Dollars to France in Euros then they would enter amount 100.00 and amount type SEND. However, if they wanted the beneficiary\nto receive 100 Euros, then they would enter amount 100.00 and amount type RECEIVE."
                },
                "amount": {
                    "type": "string",
                    "description": "The amount of currency that you want to send/receive (depending on amountType). The number of decimal places must match the currency you are\nreferring to (cf Currencies in reference data)."
                },
                "promoCode": {
                    "type": "string",
                    "description": "A promotional code to be used when generating this quote which may reduce the margin or fees."
                }
            }
        },
        "Create quote response": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Create quote response data"
                }
            }
        },
        "Create quote response data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Create quote response attributes"
                }
            }
        },
        "Create quote response attributes": {
            "type": "object",
            "required": [
                "receiveCountryCode",
                "receiveCurrencyCode",
                "sendCountryCode",
                "sendCurrencyCode",
                "amountType",
                "amount",
                "quoteDetails",
                "methods",
                "limits",
                "audit",
                "expiration",
                "partnerId"
            ],
            "properties": {
                "receiveCountryCode": {
                    "type": "string",
                    "description": "The country that the currency is being received in."
                },
                "receiveCurrencyCode": {
                    "type": "string",
                    "description": "The currency of the payment details that is receiving the money"
                },
                "sendCountryCode": {
                    "type": "string",
                    "description": "The country from which the transaction is originating."
                },
                "sendCurrencyCode": {
                    "type": "string",
                    "description": "The currency of the payment details which is being used to pay for the transaction."
                },
                "amountType": {
                    "type": "string",
                    "description": "Whether the amount you entered refers to the amount you want to receive (RECEIVE) or the amount to send (SEND). For example, if the customer\nwants to send 100 Dollars to France in Euros then they would enter amount 100.00 and amount type SEND. However, if they wanted the beneficiary\nto receive 100 Euros, then they would enter amount 100.00 and amount type RECEIVE."
                },
                "amount": {
                    "type": "string",
                    "description": "The amount of currency that you want to send/receive (depending on amountType). The number of decimal places must match the currency you are\nreferring to (cf Currencies in reference data)."
                },
                "quoteDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Quote details"
                    },
                    "description": "The rates and fees for each delivery method."
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Method"
                    },
                    "description": "All combinations of payment/delivery methods available with this corridor, regardless of limits."
                },
                "limits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Limit"
                    },
                    "description": "Payment limits associated with each method available for this corridor."
                },
                "audit": {
                    "$ref": "#/definitions/Audit details",
                    "description": "Details about when and who created this quote."
                },
                "expiration": {
                    "type": "string",
                    "description": "When this quote is valid until. After this time, you cannot create a transfer with it."
                },
                "partnerId": {
                    "type": "string",
                    "description": "The partner this quote was created against."
                },
                "promoCode": {
                    "type": "string",
                    "description": "The promotional code used when generating this quote."
                }
            }
        },
        "Quote details": {
            "type": "object",
            "required": [
                "receiveAmount",
                "sendAmount",
                "midMarketRate",
                "customerRate",
                "estimatedDeliveryDate",
                "fees"
            ],
            "properties": {
                "receiveAmount": {
                    "type": "string",
                    "description": "The amount that the beneficiary will receive."
                },
                "sendAmount": {
                    "type": "string",
                    "description": "The amount that will be charged."
                },
                "midMarketRate": {
                    "type": "string",
                    "description": "The rate which Travelex receives (for reference)."
                },
                "customerRate": {
                    "type": "string",
                    "description": "The rate which you will receive (you will be billed at this rate)."
                },
                "estimatedDeliveryDate": {
                    "type": "string",
                    "description": "The estimated delivery date (YYYY-MM-DD)."
                },
                "fees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Fee"
                    }
                }
            }
        },
        "Method": {
            "type": "object",
            "required": [
                "deliveryMethods"
            ],
            "properties": {
                "deliveryMethods": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "Payment method": {
            "type": "object",
            "required": [
                "paymentMethod"
            ],
            "properties": {
                "paymentMethod": {
                    "type": "string",
                    "enum": [
                        "ACH",
                        "BANK_TRANSFER"
                    ],
                    "description": "The payment method for these quote details."
                }
            }
        },
        "Delivery method": {
            "type": "object",
            "required": [
                "deliveryMethod"
            ],
            "properties": {
                "deliveryMethod": {
                    "type": "string",
                    "enum": [
                        "SWIFT",
                        "LOCAL",
                        "CASH"
                    ],
                    "description": "The delivery method."
                }
            }
        },
        "Limit": {
            "type": "object",
            "required": [
                "paymentMethods",
                "deliveryMethods"
            ],
            "properties": {
                "paymentMethods": {
                    "type": "array",
                    "items": {}
                },
                "deliveryMethods": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "Payment method limit": {
            "type": "object",
            "required": [
                "method",
                "min",
                "max"
            ],
            "properties": {
                "method": {
                    "type": "string",
                    "enum": [
                        "ACH",
                        "BANK_TRANSFER"
                    ],
                    "description": "The payment method."
                },
                "min": {
                    "type": "string",
                    "description": "The minimum amount which can be sent using the corresponding payment method, specified in the send currency."
                },
                "max": {
                    "type": "string",
                    "description": "The maximum amount which can be sent using the corresponding payment method, specified in the send currency."
                }
            }
        },
        "Delivery method limit": {
            "type": "object",
            "required": [
                "method",
                "min",
                "max"
            ],
            "properties": {
                "method": {
                    "type": "string",
                    "enum": [
                        "SWIFT",
                        "LOCAL",
                        "CASH"
                    ],
                    "description": "The delivery method."
                },
                "min": {
                    "type": "string",
                    "description": "The minimum amount which can be sent using the corresponding delivery method, specified in the send currency."
                },
                "max": {
                    "type": "string",
                    "description": "The maximum amount which can be sent using the corresponding delivery method, specified in the send currency."
                }
            }
        },
        "Fee": {
            "type": "object",
            "required": [
                "name",
                "amount"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of this fee"
                },
                "amount": {
                    "type": "string",
                    "description": "The amount of this fee"
                }
            }
        },
        "Audit details": {
            "type": "object",
            "required": [
                "createdAt",
                "createdBy"
            ],
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "When this resource was created."
                },
                "createdBy": {
                    "type": "string",
                    "description": "Which user created this resource."
                }
            }
        },
        "Create transfer": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Create transfer data"
                }
            }
        },
        "Create transfer data": {
            "type": "object",
            "required": [
                "type",
                "attributes",
                "relationships"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Create transfer attributes"
                },
                "relationships": {
                    "$ref": "#/definitions/Transfer relationships"
                }
            }
        },
        "Create transfer attributes": {
            "type": "object",
            "required": [
                "deliveryMethod"
            ],
            "properties": {
                "deliveryMethod": {
                    "type": "string",
                    "enum": [
                        "SWIFT",
                        "LOCAL",
                        "CASH"
                    ],
                    "description": "The delivery method to be used for this transfer."
                },
                "purpose": {
                    "type": "string",
                    "enum": [
                        "Purchase of Good(s)",
                        "Purchase of Service(s)",
                        "Professional fees payment (i.e. legal, accountant)",
                        "Payroll/Personnel payment",
                        "Payment for a loan or deposit",
                        "Bill payment (i.e. credit card, utility)",
                        "Research and Development",
                        "Business venture (i.e. merger, acquisition)",
                        "Intercompany payment",
                        "Charitable donation",
                        "Purchase of property / real estate",
                        "Estate settlement / Inheritance",
                        "Government related payment",
                        "Investment related payment",
                        "Other"
                    ],
                    "description": "The purpose of this transfer, required for regulatory purposes before this transfer will be accepted."
                },
                "reference": {
                    "type": "string",
                    "description": "The reference which for bank transfers may appear on the beneficiaries bank statement."
                },
                "encryptedPaymentData": {
                    "type": "string",
                    "description": "Encrypted payment data, which must be provided to have transfers funded by tokenized card accepted."
                }
            }
        },
        "Transfer relationships": {
            "type": "object",
            "properties": {
                "quote": {
                    "type": "object",
                    "properties": {},
                    "description": "The quote to be used for this transfer."
                },
                "customerPaymentDetails": {
                    "type": "object",
                    "properties": {},
                    "description": "Details about how the transfer is to be funded."
                },
                "beneficiaryPaymentDetails": {
                    "type": "object",
                    "properties": {},
                    "description": "Details about how funds are to be received."
                },
                "additionalRequirements": {
                    "type": "object",
                    "properties": {},
                    "description": "Additional details required about the customer in order for the transfer to be accepted, specified in the same format as the required-details resource."
                }
            }
        },
        "Transfer": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Transfer data"
                }
            }
        },
        "Transfer data": {
            "type": "object",
            "required": [
                "type",
                "attributes",
                "relationships"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Transfer attributes"
                },
                "relationships": {
                    "$ref": "#/definitions/Transfer relationships"
                }
            }
        },
        "Transfer attributes": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "DRAFT",
                        "ACCEPTED",
                        "AWAITING_COLLECTION",
                        "COMPLETED",
                        "CANCELLED",
                        "FAILED"
                    ],
                    "description": "The status of the transfer."
                }
            }
        },
        "CustomerPaymentDetails": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Data12"
                }
            }
        },
        "Quote": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Data12"
                }
            }
        },
        "Transfer store countries": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Transfer store countries data"
                    }
                }
            }
        },
        "Transfer store countries data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Transfer store countries attributes"
                }
            }
        },
        "Transfer store countries attributes": {
            "type": "object",
            "required": [
                "collectAnywhere"
            ],
            "properties": {
                "collectAnywhere": {
                    "type": "boolean",
                    "description": "Whether or not this country supports collection from any store, without having to specify the store in advance."
                }
            }
        },
        "Transfer stores": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Transfer stores data"
                    }
                }
            }
        },
        "Transfer stores data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Transfer stores attributes"
                }
            }
        },
        "Transfer stores attributes": {
            "type": "object",
            "required": [
                "storeName",
                "countryCode",
                "address"
            ],
            "properties": {
                "storeName": {
                    "type": "string",
                    "description": "The name of the store."
                },
                "countryCode": {
                    "type": "string",
                    "description": "The country the store is in - this should match the country code in the store's address"
                },
                "address": {
                    "$ref": "#/definitions/Address",
                    "description": "The address of the store."
                },
                "openingHours": {
                    "type": "string",
                    "description": "A description of the store's opening hours."
                }
            }
        },
        "Transfer store limits": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Transfer store limits data"
                    }
                }
            }
        },
        "Transfer store limits data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Transfer store limits attributes"
                },
                "`relationships` Transfer store limits relationships, required)": {
                    "type": "string"
                }
            }
        },
        "Transfer store limits attributes": {
            "type": "object",
            "required": [
                "currencyCode",
                "maxAmount"
            ],
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "The currency this limit is specified in"
                },
                "maxAmount": {
                    "type": "string",
                    "description": "The maximum amount of this currency which can be collected from the corresponding store."
                }
            }
        },
        "Transfer store limits relationships": {
            "type": "object",
            "required": [
                "store"
            ],
            "properties": {
                "store": {
                    "type": "object",
                    "properties": {},
                    "description": "The store for which this limit is applicable."
                }
            }
        },
        "List hooks": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/List hooks data"
                    }
                }
            }
        },
        "List hooks data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Hooks attributes"
                }
            }
        },
        "Create hook": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/List hooks data"
                }
            }
        },
        "Hooks attributes": {
            "type": "object",
            "required": [
                "url",
                "events"
            ],
            "properties": {
                "url": {
                    "type": "string",
                    "description": "The URL to be called when one of the events occurs."
                },
                "events": {
                    "type": "array",
                    "items": {},
                    "description": "The events this hook is subscribing to."
                }
            }
        },
        "Store payment details": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Store payment details data"
                }
            }
        },
        "Store payment details data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Store payment details attributes"
                },
                "relationships": {
                    "$ref": "#/definitions/Store payment details relationships"
                }
            }
        },
        "Store payment details attributes": {
            "type": "object",
            "required": [
                "countryCode"
            ],
            "properties": {
                "countryCode": {
                    "type": "string",
                    "description": "The country in which cash will be collected."
                }
            }
        },
        "Store payment details relationships": {
            "type": "object",
            "properties": {
                "store": {
                    "type": "string",
                    "description": "The specific store from which cash will be collected. This is only required for countries which do not support collect anywhere."
                }
            }
        },
        "Login request": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/Login request data"
                }
            }
        },
        "Login response": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/Login response data"
                }
            }
        },
        "Login request data": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Login request attributes"
                }
            }
        },
        "Login response data": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Login response attributes"
                }
            }
        },
        "Login request attributes": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "description": "The user being logged in"
                },
                "password": {
                    "type": "string",
                    "description": "The password for the user"
                }
            }
        },
        "Login response attributes": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "sessionToken": {
                    "type": "string",
                    "description": "The session token to be used as Authorization header"
                },
                "loginDate": {
                    "type": "string",
                    "description": "The date when the user logged in"
                }
            }
        },
        "Transfer error": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "enum": [
                        "DECLINED"
                    ],
                    "description": "The error code"
                }
            }
        },
        "Create document": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Create document data"
                }
            }
        },
        "Create document data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Create document attributes"
                }
            }
        },
        "Create document attributes": {
            "type": "object",
            "required": [
                "encryptedDocument",
                "encryptionKey"
            ],
            "properties": {
                "encryptedDocument": {
                    "type": "string",
                    "description": "The encrypted representation of the document"
                },
                "encryptionKey": {
                    "type": "string",
                    "description": "A key which can be used to decrypt the encryptedDocument"
                }
            }
        },
        "Document": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/Document data"
                }
            }
        },
        "Document data": {
            "type": "object",
            "required": [
                "type",
                "attributes"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "$ref": "#/definitions/Create document attributes"
                }
            }
        },
        "Document attributes": {
            "type": "object",
            "required": [
                "type",
                "fileName"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of document"
                },
                "fileName": {
                    "type": "string",
                    "description": "The name of the file being uploaded"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Travelex APIs use TLS authentication. Each API request must include an Authorization header whose value is a session token, for example:\n\n```\ncurl --request HTTP_VERB \\\n  --url 'https://API_BASE_ADDRESS_AND_ENDPOINT' \\\n  --header 'Authorization: SESSION_TOKEN'\n```\n\nTo create a session token, an authorised application logs in to the ```/login``` endpoint.\n\n## Login Credentials\n\nLogin with an application-specific username/password where:\n\n+ ```username``` is the developer email address supplied when the developer signed up for API access\n\n+ ```password``` is the API key that was sent to the developer at the supplied email address\n\nBecause the API key is provided out of band, login credentials cannot easily be intercepted or forged.\n\nYou can get login credentials by [signing up for sandbox access](/#introduction/get-started).\n\n## Session Tokens\n\nA session token is a temporary authentication token with a limited lifetime.\n\nIf you try to access an API endpoint with an expired token a [TBD ??] error is returned. Your application must re-login to get a new token.\n\nSession token lifetime is set at 20 minutes."
        },
        {
            "name": "Beneficiaries",
            "description": "A *beneficiary* is the person or company that is receiving the payment.\n\nIn order to comply with local laws and regulations, Travelex needs to know details about the beneficiary. The details we need to know vary by the country in which the transfer is received. You can find out the details specific to each country by querying [required details](/#reference/required-details).\n\nBecause the details requested vary based on whether the beneficiary is an individual or a company, we present different endpoints for each.\n\nHowever, you can retrieve all the beneficiaries you've created, whether they are individuals or companies by calling `GET /beneficiaries`. To search for beneficiaries owned by specific customers, see the [beneficiary relationship documentation](/#reference/customers/relationships/beneficiaries) in the customers section."
        },
        {
            "name": "Corridors",
            "description": "A corridor is a combination of send currency, send country, receive currency and receive country representing a possible flow of currency that Travelex supports.\n\nCorridors are specified using currency codes, see [Currencies](/#reference/currencies), and two-letter [ISO international country codes.](/#introduction/glossary)."
        },
        {
            "name": "Currencies",
            "description": "Currencies is a reference resource of currency codes, names, and decimal formats enabling applications to translate between codes and name strings and format currency values correctly.\n\nNote that not all listed currencies are supported by Travelex for IMT. Find supported currencies by requesting [Corridors](/#reference/corridors)."
        },
        {
            "name": "Customers",
            "description": "## Customers\n\nA *customer* is the person or company that is initiating the transfer. An\nexample would be a person (the customer) that wants to transfer money\nfrom their bank account in the USA to a company (the beneficiary) in the UK.\n\nIn order to comply with local laws and regulations, Travelex needs to know details about the customer. The details we need to know vary by the country from which the transfer is initiated from. You can find out the details specific to each country by querying [required details](/#reference/required-details).\n\nBecause the details requested vary based on whether the customer is an individual or a company, we present different endpoints for each.\n\nWhere a customer is subject to KYC, sanction or PEP checks, once the required attributes have been collected, these checks will be automatically\nperformed - this may be on creation or when any relevant fields are updated."
        },
        {
            "name": "Documents"
        },
        {
            "name": "Hooks"
        },
        {
            "name": "Payment Details",
            "description": "Payment Details describe a customer's source of funds or a destination for money in a transfer. For example, you might pay for a transfer using a debit card (source) and use a bank account (destination) for the output. Some of the payment details listed below vary based on the country that they are based in.\n\nPayment Details should always be linked to a customer or a beneficiary (the owner) via the \"owner\" relationship."
        },
        {
            "name": "Quotes"
        },
        {
            "name": "Required Details"
        },
        {
            "name": "Stores",
            "description": "A store is a Travelex Travel Money bureaux from which a beneficiary can collect a cash transfer.\n\nStores includes the following endpoints:\n\n+ ```transfer-stores``` A world wide store listing\n\n+ ```transfer-store-limits``` Cash payout limits, which vary between stores and depend on the currencies being collected\n\n+ ```transfer-store-countries``` Country determined collection restrictions, in some countries a cash transfer can be collected from any store but in others the collection store must be specified in advance"
        },
        {
            "name": "Transfers"
        }
    ]
}
